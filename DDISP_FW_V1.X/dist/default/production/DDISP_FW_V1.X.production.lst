

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jul 30 17:48:56 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 05/05/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F46K80 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    92  0000                     
    93 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    94  0000                     
    95 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    96  0000                     _COMSTATbits	set	3953
    97  0000                     _RXB1SIDH	set	3889
    98  0000                     _RXB1SIDL	set	3890
    99  0000                     _RXB0D7	set	3949
   100  0000                     _RXB0D6	set	3948
   101  0000                     _RXB0D5	set	3947
   102  0000                     _RXB0D4	set	3946
   103  0000                     _RXB0D3	set	3945
   104  0000                     _RXB0D2	set	3944
   105  0000                     _RXB0D1	set	3943
   106  0000                     _RXB0D0	set	3942
   107  0000                     _RXB0DLC	set	3941
   108  0000                     _RXB0SIDH	set	3937
   109  0000                     _RXB0EIDL	set	3940
   110  0000                     _RXB0EIDH	set	3939
   111  0000                     _RXB0SIDL	set	3938
   112  0000                     _TXB2SIDL	set	3842
   113  0000                     _TXB2SIDH	set	3841
   114  0000                     _TXB2EIDH	set	3843
   115  0000                     _TXB2CONbits	set	3840
   116  0000                     _TXB1SIDL	set	3858
   117  0000                     _TXB1SIDH	set	3857
   118  0000                     _TXB1EIDH	set	3859
   119  0000                     _TXB1CONbits	set	3856
   120  0000                     _TXB0SIDL	set	3874
   121  0000                     _TXB0SIDH	set	3873
   122  0000                     _TXB0EIDH	set	3875
   123  0000                     _TXB0CONbits	set	3872
   124  0000                     _BRGCON3	set	3653
   125  0000                     _BRGCON2	set	3652
   126  0000                     _RXF15SIDL	set	3693
   127  0000                     _RXF15SIDH	set	3692
   128  0000                     _RXF15EIDH	set	3694
   129  0000                     _RXF14SIDL	set	3689
   130  0000                     _RXF14SIDH	set	3688
   131  0000                     _RXF14EIDL	set	3691
   132  0000                     _RXF14EIDH	set	3690
   133  0000                     _RXF13SIDL	set	3685
   134  0000                     _RXF13SIDH	set	3684
   135  0000                     _RXF13EIDL	set	3687
   136  0000                     _RXF13EIDH	set	3686
   137  0000                     _RXF12SIDL	set	3681
   138  0000                     _RXF12SIDH	set	3680
   139  0000                     _RXF12EIDL	set	3683
   140  0000                     _RXF12EIDH	set	3682
   141  0000                     _RXF11SIDL	set	3677
   142  0000                     _RXF11SIDH	set	3676
   143  0000                     _RXF11EIDL	set	3679
   144  0000                     _RXF11EIDH	set	3678
   145  0000                     _RXF10SIDL	set	3673
   146  0000                     _RXF10SIDH	set	3672
   147  0000                     _RXF10EIDL	set	3675
   148  0000                     _RXF10EIDH	set	3674
   149  0000                     _RXF9SIDL	set	3669
   150  0000                     _RXF9SIDH	set	3668
   151  0000                     _RXF9EIDL	set	3671
   152  0000                     _RXF9EIDH	set	3670
   153  0000                     _RXF8SIDL	set	3665
   154  0000                     _RXF8SIDH	set	3664
   155  0000                     _RXF8EIDL	set	3667
   156  0000                     _RXF8EIDH	set	3666
   157  0000                     _RXF7SIDL	set	3661
   158  0000                     _RXF7SIDH	set	3660
   159  0000                     _RXF7EIDL	set	3663
   160  0000                     _RXF7EIDH	set	3662
   161  0000                     _RXF6SIDL	set	3657
   162  0000                     _RXF6SIDH	set	3656
   163  0000                     _RXF6EIDL	set	3659
   164  0000                     _RXF6EIDH	set	3658
   165  0000                     _RXF5SIDL	set	3829
   166  0000                     _RXF5SIDH	set	3828
   167  0000                     _RXF5EIDL	set	3831
   168  0000                     _RXF5EIDH	set	3830
   169  0000                     _RXF4SIDL	set	3825
   170  0000                     _RXF4SIDH	set	3824
   171  0000                     _RXF4EIDL	set	3827
   172  0000                     _RXF4EIDH	set	3826
   173  0000                     _RXF3SIDL	set	3821
   174  0000                     _RXF3SIDH	set	3820
   175  0000                     _RXF3EIDL	set	3823
   176  0000                     _RXF3EIDH	set	3822
   177  0000                     _RXF2SIDL	set	3817
   178  0000                     _RXF2SIDH	set	3816
   179  0000                     _RXF2EIDL	set	3819
   180  0000                     _RXF2EIDH	set	3818
   181  0000                     _RXF1SIDL	set	3813
   182  0000                     _RXF1SIDH	set	3812
   183  0000                     _RXF1EIDL	set	3815
   184  0000                     _RXF1EIDH	set	3814
   185  0000                     _RXF0SIDL	set	3809
   186  0000                     _RXF0EIDL	set	3811
   187  0000                     _RXFBCON7	set	3704
   188  0000                     _RXFBCON6	set	3703
   189  0000                     _RXFBCON5	set	3702
   190  0000                     _RXFBCON4	set	3701
   191  0000                     _RXFBCON3	set	3700
   192  0000                     _RXFBCON2	set	3699
   193  0000                     _RXFBCON1	set	3698
   194  0000                     _RXFBCON0	set	3697
   195  0000                     _MSEL3	set	3708
   196  0000                     _MSEL2	set	3707
   197  0000                     _MSEL1	set	3706
   198  0000                     _MSEL0	set	3705
   199  0000                     _RXFCON1	set	3655
   200  0000                     _RXM1SIDL	set	3837
   201  0000                     _RXM1SIDH	set	3836
   202  0000                     _RXM1EIDL	set	3839
   203  0000                     _RXM1EIDH	set	3838
   204  0000                     _RXM0SIDL	set	3833
   205  0000                     _RXM0EIDL	set	3835
   206  0000                     _CIOCON	set	3952
   207  0000                     _ECANCON	set	3954
   208  0000                     _TRISD	set	3989
   209  0000                     _TRISC	set	3988
   210  0000                     _TRISB	set	3987
   211  0000                     _LATC	set	3979
   212  0000                     _LATB	set	3978
   213  0000                     _TXREG1	set	4013
   214  0000                     _RCREG1	set	4014
   215  0000                     _SPBRG1	set	4015
   216  0000                     _TXSTA1	set	4012
   217                           
   218                           	psect	nvCOMRAM
   219  000056                     __pnvCOMRAM:
   220                           	callstack 0
   221  000056                     _EUSART1_OverrunErrorHandler:
   222                           	callstack 0
   223  000056                     	ds	2
   224  000058                     _EUSART1_FramingErrorHandler:
   225                           	callstack 0
   226  000058                     	ds	2
   227                           
   228                           	psect	nvBANK0
   229  0000C6                     __pnvBANK0:
   230                           	callstack 0
   231  0000C6                     _EUSART1_ErrorHandler:
   232                           	callstack 0
   233  0000C6                     	ds	2
   234  0000                     _LATCbits	set	3979
   235  0000                     _RCSTA1bits	set	4011
   236  0000                     _TXSTA1bits	set	4012
   237  0000                     _BRGCON1	set	3651
   238  0000                     _RXFCON0	set	3654
   239  0000                     _BSEL0	set	3709
   240  0000                     _WPUB	set	3931
   241  0000                     _ANCON1	set	3932
   242  0000                     _ANCON0	set	3933
   243  0000                     _PIE5bits	set	3958
   244  0000                     _SPBRGH1	set	3965
   245  0000                     _BAUDCON1	set	4007
   246  0000                     _RCSTA1	set	4011
   247  0000                     _RCONbits	set	4048
   248  0000                     _PORTAbits	set	3968
   249  0000                     _LATA	set	3977
   250  0000                     _LATD	set	3980
   251  0000                     _LATE	set	3981
   252  0000                     _PIR1bits	set	3998
   253  0000                     _OSCCON2	set	4050
   254  0000                     _OSCCON	set	4051
   255  0000                     _INTCON2bits	set	4081
   256  0000                     _INTCONbits	set	4082
   257  0000                     _PIR5bits	set	3959
   258  0000                     _TRISA	set	3986
   259  0000                     _TRISE	set	3990
   260  0000                     _REFOCON	set	3994
   261  0000                     _OSCTUNE	set	3995
   262  0000                     _RXB0CONbits	set	3936
   263  0000                     _CANSTAT	set	3950
   264  0000                     _CANCON	set	3951
   265  0000                     _RXF0SIDH	set	3808
   266  0000                     _RXF0EIDH	set	3810
   267  0000                     _RXM0SIDH	set	3832
   268  0000                     _RXM0EIDH	set	3834
   269  0000                     _RXF15EIDL	set	3695
   270  0000                     _RXB1CONbits	set	3888
   271  0000                     _TXB0D7	set	3885
   272  0000                     _TXB0D6	set	3884
   273  0000                     _TXB0D5	set	3883
   274  0000                     _TXB0D4	set	3882
   275  0000                     _TXB0D3	set	3881
   276  0000                     _TXB0D2	set	3880
   277  0000                     _TXB0D1	set	3879
   278  0000                     _TXB0D0	set	3878
   279  0000                     _TXB0DLC	set	3877
   280  0000                     _TXB0EIDL	set	3876
   281  0000                     _TXB1D7	set	3869
   282  0000                     _TXB1D6	set	3868
   283  0000                     _TXB1D5	set	3867
   284  0000                     _TXB1D4	set	3866
   285  0000                     _TXB1D3	set	3865
   286  0000                     _TXB1D2	set	3864
   287  0000                     _TXB1D1	set	3863
   288  0000                     _TXB1D0	set	3862
   289  0000                     _TXB1DLC	set	3861
   290  0000                     _TXB1EIDL	set	3860
   291  0000                     _TXB2D7	set	3853
   292  0000                     _TXB2D6	set	3852
   293  0000                     _TXB2D5	set	3851
   294  0000                     _TXB2D4	set	3850
   295  0000                     _TXB2D3	set	3849
   296  0000                     _TXB2D2	set	3848
   297  0000                     _TXB2D1	set	3847
   298  0000                     _TXB2D0	set	3846
   299  0000                     _TXB2DLC	set	3845
   300  0000                     _TXB2EIDL	set	3844
   301  0000                     _RXB1D7	set	3901
   302  0000                     _RXB1D6	set	3900
   303  0000                     _RXB1D5	set	3899
   304  0000                     _RXB1D4	set	3898
   305  0000                     _RXB1D3	set	3897
   306  0000                     _RXB1D2	set	3896
   307  0000                     _RXB1D1	set	3895
   308  0000                     _RXB1D0	set	3894
   309  0000                     _RXB1DLC	set	3893
   310  0000                     _RXB1EIDL	set	3892
   311  0000                     _RXB1EIDH	set	3891
   312  0000                     _PORTCbits	set	3970
   313                           
   314                           ; #config settings
   315                           
   316                           	psect	cinit
   317  001A58                     __pcinit:
   318                           	callstack 0
   319  001A58                     start_initialization:
   320                           	callstack 0
   321  001A58                     __initialization:
   322                           	callstack 0
   323                           
   324                           ; Clear objects allocated to BANK0 (98 bytes)
   325  001A58  EE00  F060         	lfsr	0,__pbssBANK0
   326  001A5C  0E62               	movlw	98
   327  001A5E                     clear_0:
   328  001A5E  6AEE               	clrf	postinc0,c
   329  001A60  06E8               	decf	wreg,f,c
   330  001A62  E1FD               	bnz	clear_0
   331                           
   332                           ; Clear objects allocated to COMRAM (55 bytes)
   333  001A64  EE00  F001         	lfsr	0,__pbssCOMRAM
   334  001A68  0E37               	movlw	55
   335  001A6A                     clear_1:
   336  001A6A  6AEE               	clrf	postinc0,c
   337  001A6C  06E8               	decf	wreg,f,c
   338  001A6E  E1FD               	bnz	clear_1
   339  001A70                     end_of_initialization:
   340                           	callstack 0
   341  001A70                     __end_of__initialization:
   342                           	callstack 0
   343  001A70  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   344  001A72  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   345  001A74  0E00               	movlw	low (__Lmediumconst shr (0+16))
   346  001A76  6EF8               	movwf	tblptru,c
   347  001A78  0100               	movlb	0
   348  001A7A  EF28  F000         	goto	_main	;jump to C main() function
   349                           
   350                           	psect	bssCOMRAM
   351  000001                     __pbssCOMRAM:
   352                           	callstack 0
   353  000001                     _blinkb10:
   354                           	callstack 0
   355  000001                     	ds	2
   356  000003                     _lastb10:
   357                           	callstack 0
   358  000003                     	ds	2
   359  000005                     _b9FuncActive:
   360                           	callstack 0
   361  000005                     	ds	2
   362  000007                     _b8FuncActive:
   363                           	callstack 0
   364  000007                     	ds	2
   365  000009                     _b7FuncActive:
   366                           	callstack 0
   367  000009                     	ds	2
   368  00000B                     _b6FuncActive:
   369                           	callstack 0
   370  00000B                     	ds	2
   371  00000D                     _b5FuncActive:
   372                           	callstack 0
   373  00000D                     	ds	2
   374  00000F                     _b4FuncActive:
   375                           	callstack 0
   376  00000F                     	ds	2
   377  000011                     _b3FuncActive:
   378                           	callstack 0
   379  000011                     	ds	2
   380  000013                     _blinkb2:
   381                           	callstack 0
   382  000013                     	ds	2
   383  000015                     _lastb2:
   384                           	callstack 0
   385  000015                     	ds	2
   386  000017                     _blinkb1:
   387                           	callstack 0
   388  000017                     	ds	2
   389  000019                     _lastb1:
   390                           	callstack 0
   391  000019                     	ds	2
   392  00001B                     _WakeUpInterruptHandler:
   393                           	callstack 0
   394  00001B                     	ds	2
   395  00001D                     _eusart1RxLastError:
   396                           	callstack 0
   397  00001D                     	ds	1
   398  00001E                     _rx:
   399                           	callstack 0
   400  00001E                     	ds	14
   401  00002C                     _latchb10:
   402                           	callstack 0
   403  00002C                     	ds	2
   404  00002E                     _b10FuncActive:
   405                           	callstack 0
   406  00002E                     	ds	2
   407  000030                     _latchb2:
   408                           	callstack 0
   409  000030                     	ds	2
   410  000032                     _b2FuncActive:
   411                           	callstack 0
   412  000032                     	ds	2
   413  000034                     _latchb1:
   414                           	callstack 0
   415  000034                     	ds	2
   416  000036                     _b1FuncActive:
   417                           	callstack 0
   418  000036                     	ds	2
   419                           
   420                           	psect	bssBANK0
   421  000060                     __pbssBANK0:
   422                           	callstack 0
   423  000060                     _tx7:
   424                           	callstack 0
   425  000060                     	ds	14
   426  00006E                     _tx6:
   427                           	callstack 0
   428  00006E                     	ds	14
   429  00007C                     _tx5:
   430                           	callstack 0
   431  00007C                     	ds	14
   432  00008A                     _tx4:
   433                           	callstack 0
   434  00008A                     	ds	14
   435  000098                     _tx3:
   436                           	callstack 0
   437  000098                     	ds	14
   438  0000A6                     _tx2:
   439                           	callstack 0
   440  0000A6                     	ds	14
   441  0000B4                     _tx1:
   442                           	callstack 0
   443  0000B4                     	ds	14
   444                           
   445                           	psect	cstackBANK0
   446  0000C2                     __pcstackBANK0:
   447                           	callstack 0
   448  0000C2                     main@counter:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x0
   452  0000C2                     	ds	2
   453  0000C4                     main@speed:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x2
   457  0000C4                     	ds	2
   458                           
   459                           	psect	cstackCOMRAM
   460  000038                     __pcstackCOMRAM:
   461                           	callstack 0
   462  000038                     ??_INTERRUPT_InterruptManager:
   463  000038                     
   464                           ; 1 bytes @ 0x0
   465  000038                     	ds	2
   466  00003A                     ?_convertReg2ExtendedCANid:
   467                           	callstack 0
   468  00003A                     ?_convertReg2StandardCANid:
   469                           	callstack 0
   470  00003A                     EUSART1_Write@txData:
   471                           	callstack 0
   472  00003A                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   473                           	callstack 0
   474  00003A                     convertReg2StandardCANid@tempRXBn_SIDL:
   475                           	callstack 0
   476  00003A                     EUSART1_SetFramingErrorHandler@interruptHandler:
   477                           	callstack 0
   478  00003A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   479                           	callstack 0
   480  00003A                     EUSART1_SetErrorHandler@interruptHandler:
   481                           	callstack 0
   482  00003A                     ECAN_SetWakeUpInterruptHandler@handler:
   483                           	callstack 0
   484  00003A                     leftTurnButton@b1FunctionActive:
   485                           	callstack 0
   486  00003A                     rightTurnButton@b10FunctionActive:
   487                           	callstack 0
   488  00003A                     hazardButton@b2FunctionActive:
   489                           	callstack 0
   490  00003A                     convertCANid2Reg@tempPassedInID:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x2
   494  00003A                     	ds	1
   495  00003B                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   496                           	callstack 0
   497  00003B                     leftTurnIndicator@value:
   498                           	callstack 0
   499  00003B                     rightTurnIndicator@value:
   500                           	callstack 0
   501  00003B                     warningLED@value:
   502                           	callstack 0
   503  00003B                     auxBattConn@value:
   504                           	callstack 0
   505  00003B                     motorSpeed@value:
   506                           	callstack 0
   507  00003B                     motorControllerTemp@value:
   508                           	callstack 0
   509  00003B                     batteryTemp@value:
   510                           	callstack 0
   511  00003B                     hazardSignal@value:
   512                           	callstack 0
   513  00003B                     batterySOC@value:
   514                           	callstack 0
   515  00003B                     batterySOCGraphic@value:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x3
   519  00003B                     	ds	1
   520  00003C                     ??_ECAN_Initialize:
   521  00003C                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   522                           	callstack 0
   523  00003C                     leftTurnButton@b1Latch:
   524                           	callstack 0
   525  00003C                     rightTurnButton@b10Latch:
   526                           	callstack 0
   527  00003C                     hazardButton@b2Latch:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x4
   531  00003C                     	ds	1
   532  00003D                     ??_rightTurnIndicator:
   533  00003D                     ??_leftTurnIndicator:
   534  00003D                     ??_hazardSignal:
   535  00003D                     ??_motorSpeed:
   536  00003D                     ??_warningLED:
   537  00003D                     ??_auxBattConn:
   538  00003D                     ??_motorControllerTemp:
   539  00003D                     ??_batteryTemp:
   540  00003D                     ??_batterySOC:
   541  00003D                     ??_batterySOCGraphic:
   542                           
   543                           ; 1 bytes @ 0x5
   544  00003D                     	ds	1
   545  00003E                     ??_convertReg2ExtendedCANid:
   546  00003E                     ??_convertReg2StandardCANid:
   547  00003E                     ??_leftTurnButton:
   548  00003E                     ??_rightTurnButton:
   549  00003E                     ??_hazardButton:
   550  00003E                     convertCANid2Reg@canIdType:
   551                           	callstack 0
   552  00003E                     leftTurnIndicator@checksum:
   553                           	callstack 0
   554  00003E                     rightTurnIndicator@checksum:
   555                           	callstack 0
   556  00003E                     warningLED@checksum:
   557                           	callstack 0
   558  00003E                     auxBattConn@checksum:
   559                           	callstack 0
   560  00003E                     motorSpeed@checksum:
   561                           	callstack 0
   562  00003E                     motorControllerTemp@checksum:
   563                           	callstack 0
   564  00003E                     batteryTemp@checksum:
   565                           	callstack 0
   566  00003E                     hazardSignal@checksum:
   567                           	callstack 0
   568  00003E                     batterySOC@checksum:
   569                           	callstack 0
   570  00003E                     batterySOCGraphic@checksum:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x6
   574  00003E                     	ds	1
   575  00003F                     convertCANid2Reg@passedInEIDH:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x7
   579  00003F                     	ds	1
   580  000040                     convertReg2StandardCANid@tempRXBn_SIDH:
   581                           	callstack 0
   582  000040                     leftTurnIndicator@v2:
   583                           	callstack 0
   584  000040                     rightTurnIndicator@v2:
   585                           	callstack 0
   586  000040                     warningLED@v2:
   587                           	callstack 0
   588  000040                     auxBattConn@v2:
   589                           	callstack 0
   590  000040                     motorSpeed@v2:
   591                           	callstack 0
   592  000040                     motorControllerTemp@v2:
   593                           	callstack 0
   594  000040                     batteryTemp@v2:
   595                           	callstack 0
   596  000040                     hazardSignal@v2:
   597                           	callstack 0
   598  000040                     batterySOC@v2:
   599                           	callstack 0
   600  000040                     batterySOCGraphic@v2:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x8
   604  000040                     	ds	1
   605  000041                     convertCANid2Reg@passedInEIDL:
   606                           	callstack 0
   607  000041                     convertReg2StandardCANid@returnValue:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x9
   611  000041                     	ds	1
   612  000042                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   613                           	callstack 0
   614  000042                     leftTurnIndicator@v3:
   615                           	callstack 0
   616  000042                     rightTurnIndicator@v3:
   617                           	callstack 0
   618  000042                     warningLED@v3:
   619                           	callstack 0
   620  000042                     auxBattConn@v3:
   621                           	callstack 0
   622  000042                     motorSpeed@v3:
   623                           	callstack 0
   624  000042                     motorControllerTemp@v3:
   625                           	callstack 0
   626  000042                     batteryTemp@v3:
   627                           	callstack 0
   628  000042                     hazardSignal@v3:
   629                           	callstack 0
   630  000042                     batterySOC@v3:
   631                           	callstack 0
   632  000042                     batterySOCGraphic@v3:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0xA
   636  000042                     	ds	1
   637  000043                     convertCANid2Reg@passedInSIDH:
   638                           	callstack 0
   639  000043                     convertReg2ExtendedCANid@returnValue:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0xB
   643  000043                     	ds	1
   644  000044                     leftTurnIndicator@v4:
   645                           	callstack 0
   646  000044                     rightTurnIndicator@v4:
   647                           	callstack 0
   648  000044                     warningLED@v4:
   649                           	callstack 0
   650  000044                     auxBattConn@v4:
   651                           	callstack 0
   652  000044                     motorSpeed@v4:
   653                           	callstack 0
   654  000044                     motorControllerTemp@v4:
   655                           	callstack 0
   656  000044                     batteryTemp@v4:
   657                           	callstack 0
   658  000044                     hazardSignal@v4:
   659                           	callstack 0
   660  000044                     batterySOC@v4:
   661                           	callstack 0
   662  000044                     batterySOCGraphic@v4:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xC
   666  000044                     	ds	1
   667  000045                     convertCANid2Reg@passedInSIDL:
   668                           	callstack 0
   669  000045                     convertReg2StandardCANid@ConvertedID:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0xD
   673  000045                     	ds	1
   674  000046                     
   675                           ; 1 bytes @ 0xE
   676  000046                     	ds	1
   677  000047                     ??_convertCANid2Reg:
   678  000047                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0xF
   682  000047                     	ds	1
   683  000048                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x10
   687  000048                     	ds	1
   688  000049                     convertReg2ExtendedCANid@ConvertedID:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x11
   692  000049                     	ds	2
   693  00004B                     convertCANid2Reg@wipSIDL:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x13
   697  00004B                     	ds	1
   698  00004C                     CAN_transmit@tempCanMsg:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x14
   702  00004C                     	ds	1
   703  00004D                     CAN_receive@tempCanMsg:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x15
   707  00004D                     	ds	1
   708  00004E                     CAN_transmit@tempEIDH:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x16
   712  00004E                     	ds	1
   713  00004F                     CAN_transmit@tempEIDL:
   714                           	callstack 0
   715  00004F                     CAN_receive@returnValue:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x17
   719  00004F                     	ds	1
   720  000050                     CAN_transmit@tempSIDH:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x18
   724  000050                     	ds	1
   725  000051                     CAN_transmit@tempSIDL:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x19
   729  000051                     	ds	1
   730  000052                     canRightSignal@number:
   731                           	callstack 0
   732  000052                     canLeftSignal@number:
   733                           	callstack 0
   734  000052                     canHazardSignal@number:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x1A
   738  000052                     	ds	2
   739  000054                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x1C
   742  000054                     	ds	2
   743                           
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 50 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  speed           2    2[BANK0 ] int 
   754 ;;  counter         2    0[BANK0 ] int 
   755 ;;  tog             1    0        unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   768 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   769 ;;Total ram usage:        6 bytes
   770 ;; Hardware stack levels required when called: 6
   771 ;; This function calls:
   772 ;;		_CAN_receive
   773 ;;		_SYSTEM_Initialize
   774 ;;		_auxBattConn
   775 ;;		_canHazardSignal
   776 ;;		_canLeftSignal
   777 ;;		_canRightSignal
   778 ;;		_hazardButton
   779 ;;		_hazardSignal
   780 ;;		_init
   781 ;;		_leftTurnButton
   782 ;;		_leftTurnIndicator
   783 ;;		_motorSpeed
   784 ;;		_rightTurnButton
   785 ;;		_rightTurnIndicator
   786 ;;		_warningLED
   787 ;; This function is called by:
   788 ;;		Startup code after reset
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text0
   793  000050                     __ptext0:
   794                           	callstack 0
   795  000050                     _main:
   796                           	callstack 25
   797  000050                     
   798                           ;main.c: 51:     SYSTEM_Initialize();
   799  000050  EC59  F00D         	call	_SYSTEM_Initialize	;wreg free
   800  000054  8C8B               	bsf	139,6,c	;volatile
   801  000056                     
   802                           ;main.c: 53:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   803  000056  0E1A               	movlw	26
   804  000058  6E55               	movwf	(??_main+1)^0,c
   805  00005A  0E5E               	movlw	94
   806  00005C  6E54               	movwf	??_main^0,c
   807  00005E  0E6E               	movlw	110
   808  000060                     u1617:
   809  000060  2EE8               	decfsz	wreg,f,c
   810  000062  D7FE               	bra	u1617
   811  000064  2E54               	decfsz	??_main^0,f,c
   812  000066  D7FC               	bra	u1617
   813  000068  2E55               	decfsz	(??_main+1)^0,f,c
   814  00006A  D7FA               	bra	u1617
   815  00006C  D000               	nop2	
   816  00006E                     
   817                           ;main.c: 54:     init();
   818  00006E  EC36  F00C         	call	_init	;wreg free
   819                           
   820                           ;main.c: 55:     _delay((unsigned long)((500)*(20000000/4000.0)));
   821  000072  0E0D               	movlw	13
   822  000074  6E55               	movwf	(??_main+1)^0,c
   823  000076  0EAF               	movlw	175
   824  000078  6E54               	movwf	??_main^0,c
   825  00007A  0EB6               	movlw	182
   826  00007C                     u1627:
   827  00007C  2EE8               	decfsz	wreg,f,c
   828  00007E  D7FE               	bra	u1627
   829  000080  2E54               	decfsz	??_main^0,f,c
   830  000082  D7FC               	bra	u1627
   831  000084  2E55               	decfsz	(??_main+1)^0,f,c
   832  000086  D7FA               	bra	u1627
   833  000088  D000               	nop2	
   834  00008A                     
   835                           ;main.c: 57:     int counter = 0;
   836  00008A  0E00               	movlw	0
   837  00008C  0100               	movlb	0	; () banked
   838  00008E  6FC3               	movwf	(main@counter+1)& (0+255),b
   839  000090  0E00               	movlw	0
   840  000092  6FC2               	movwf	main@counter& (0+255),b
   841  000094                     
   842                           ; BSR set to: 0
   843                           ;main.c: 58:     int speed = 0;
   844  000094  0E00               	movlw	0
   845  000096  6FC5               	movwf	(main@speed+1)& (0+255),b
   846  000098  0E00               	movlw	0
   847  00009A  6FC4               	movwf	main@speed& (0+255),b
   848  00009C                     l4604:
   849                           
   850                           ;main.c: 61:         counter++;
   851  00009C  0100               	movlb	0	; () banked
   852  00009E  4BC2               	infsnz	main@counter& (0+255),f,b
   853  0000A0  2BC3               	incf	(main@counter+1)& (0+255),f,b
   854  0000A2                     
   855                           ; BSR set to: 0
   856                           ;main.c: 62:         _delay((unsigned long)((50)*(20000000/4000.0)));
   857  0000A2  0E02               	movlw	2
   858  0000A4  6E55               	movwf	(??_main+1)^0,c
   859  0000A6  0E45               	movlw	69
   860  0000A8  6E54               	movwf	??_main^0,c
   861  0000AA  0EAA               	movlw	170
   862  0000AC                     u1637:
   863  0000AC  2EE8               	decfsz	wreg,f,c
   864  0000AE  D7FE               	bra	u1637
   865  0000B0  2E54               	decfsz	??_main^0,f,c
   866  0000B2  D7FC               	bra	u1637
   867  0000B4  2E55               	decfsz	(??_main+1)^0,f,c
   868  0000B6  D7FA               	bra	u1637
   869  0000B8                     
   870                           ;main.c: 68:         if (b10FuncActive && !lastb10 && !blinkb1 && !blinkb2){
   871  0000B8  502E               	movf	_b10FuncActive^0,w,c
   872  0000BA  102F               	iorwf	(_b10FuncActive+1)^0,w,c
   873  0000BC  B4D8               	btfsc	status,2,c
   874  0000BE  EF63  F000         	goto	u1331
   875  0000C2  EF65  F000         	goto	u1330
   876  0000C6                     u1331:
   877  0000C6  EFA0  F000         	goto	l4626
   878  0000CA                     u1330:
   879  0000CA  5003               	movf	_lastb10^0,w,c
   880  0000CC  1004               	iorwf	(_lastb10+1)^0,w,c
   881  0000CE  A4D8               	btfss	status,2,c
   882  0000D0  EF6C  F000         	goto	u1341
   883  0000D4  EF6E  F000         	goto	u1340
   884  0000D8                     u1341:
   885  0000D8  EFA0  F000         	goto	l4626
   886  0000DC                     u1340:
   887  0000DC  5017               	movf	_blinkb1^0,w,c
   888  0000DE  1018               	iorwf	(_blinkb1+1)^0,w,c
   889  0000E0  A4D8               	btfss	status,2,c
   890  0000E2  EF75  F000         	goto	u1351
   891  0000E6  EF77  F000         	goto	u1350
   892  0000EA                     u1351:
   893  0000EA  EFA0  F000         	goto	l4626
   894  0000EE                     u1350:
   895  0000EE  5013               	movf	_blinkb2^0,w,c
   896  0000F0  1014               	iorwf	(_blinkb2+1)^0,w,c
   897  0000F2  A4D8               	btfss	status,2,c
   898  0000F4  EF7E  F000         	goto	u1361
   899  0000F8  EF80  F000         	goto	u1360
   900  0000FC                     u1361:
   901  0000FC  EFA0  F000         	goto	l4626
   902  000100                     u1360:
   903  000100                     
   904                           ;main.c: 69:             blinkb10 = 1;
   905  000100  0E00               	movlw	0
   906  000102  6E02               	movwf	(_blinkb10+1)^0,c
   907  000104  0E01               	movlw	1
   908  000106  6E01               	movwf	_blinkb10^0,c
   909  000108                     
   910                           ;main.c: 70:             canRightSignal(1);
   911  000108  0E00               	movlw	0
   912  00010A  6E53               	movwf	(canRightSignal@number+1)^0,c
   913  00010C  0E01               	movlw	1
   914  00010E  6E52               	movwf	canRightSignal@number^0,c
   915  000110  ECEA  F00C         	call	_canRightSignal	;wreg free
   916  000114                     
   917                           ;main.c: 71:             _delay((unsigned long)((1)*(20000000/4000.0)));
   918  000114  0E07               	movlw	7
   919  000116  6E54               	movwf	??_main^0,c
   920  000118  0E7D               	movlw	125
   921  00011A                     u1647:
   922  00011A  2EE8               	decfsz	wreg,f,c
   923  00011C  D7FE               	bra	u1647
   924  00011E  2E54               	decfsz	??_main^0,f,c
   925  000120  D7FC               	bra	u1647
   926  000122  F000               	nop	
   927  000124                     
   928                           ;main.c: 72:             rightTurnIndicator(1);
   929  000124  0E00               	movlw	0
   930  000126  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
   931  000128  0E01               	movlw	1
   932  00012A  6E3B               	movwf	rightTurnIndicator@value^0,c
   933  00012C  EC8A  F009         	call	_rightTurnIndicator	;wreg free
   934  000130                     
   935                           ;main.c: 73:              _delay((unsigned long)((1)*(20000000/4000.0)));
   936  000130  0E07               	movlw	7
   937  000132  6E54               	movwf	??_main^0,c
   938  000134  0E7D               	movlw	125
   939  000136                     u1657:
   940  000136  2EE8               	decfsz	wreg,f,c
   941  000138  D7FE               	bra	u1657
   942  00013A  2E54               	decfsz	??_main^0,f,c
   943  00013C  D7FC               	bra	u1657
   944  00013E  F000               	nop	
   945  000140                     l4626:
   946                           
   947                           ;main.c: 75:         if (b1FuncActive && !lastb1 && !blinkb2 && !blinkb10){
   948  000140  5036               	movf	_b1FuncActive^0,w,c
   949  000142  1037               	iorwf	(_b1FuncActive+1)^0,w,c
   950  000144  B4D8               	btfsc	status,2,c
   951  000146  EFA7  F000         	goto	u1371
   952  00014A  EFA9  F000         	goto	u1370
   953  00014E                     u1371:
   954  00014E  EFE4  F000         	goto	l4644
   955  000152                     u1370:
   956  000152  5019               	movf	_lastb1^0,w,c
   957  000154  101A               	iorwf	(_lastb1+1)^0,w,c
   958  000156  A4D8               	btfss	status,2,c
   959  000158  EFB0  F000         	goto	u1381
   960  00015C  EFB2  F000         	goto	u1380
   961  000160                     u1381:
   962  000160  EFE4  F000         	goto	l4644
   963  000164                     u1380:
   964  000164  5013               	movf	_blinkb2^0,w,c
   965  000166  1014               	iorwf	(_blinkb2+1)^0,w,c
   966  000168  A4D8               	btfss	status,2,c
   967  00016A  EFB9  F000         	goto	u1391
   968  00016E  EFBB  F000         	goto	u1390
   969  000172                     u1391:
   970  000172  EFE4  F000         	goto	l4644
   971  000176                     u1390:
   972  000176  5001               	movf	_blinkb10^0,w,c
   973  000178  1002               	iorwf	(_blinkb10+1)^0,w,c
   974  00017A  A4D8               	btfss	status,2,c
   975  00017C  EFC2  F000         	goto	u1401
   976  000180  EFC4  F000         	goto	u1400
   977  000184                     u1401:
   978  000184  EFE4  F000         	goto	l4644
   979  000188                     u1400:
   980  000188                     
   981                           ;main.c: 76:             blinkb1 = 1;
   982  000188  0E00               	movlw	0
   983  00018A  6E18               	movwf	(_blinkb1+1)^0,c
   984  00018C  0E01               	movlw	1
   985  00018E  6E17               	movwf	_blinkb1^0,c
   986  000190                     
   987                           ;main.c: 77:             canLeftSignal(1);
   988  000190  0E00               	movlw	0
   989  000192  6E53               	movwf	(canLeftSignal@number+1)^0,c
   990  000194  0E01               	movlw	1
   991  000196  6E52               	movwf	canLeftSignal@number^0,c
   992  000198  EC00  F00D         	call	_canLeftSignal	;wreg free
   993  00019C                     
   994                           ;main.c: 78:             _delay((unsigned long)((1)*(20000000/4000.0)));
   995  00019C  0E07               	movlw	7
   996  00019E  6E54               	movwf	??_main^0,c
   997  0001A0  0E7D               	movlw	125
   998  0001A2                     u1667:
   999  0001A2  2EE8               	decfsz	wreg,f,c
  1000  0001A4  D7FE               	bra	u1667
  1001  0001A6  2E54               	decfsz	??_main^0,f,c
  1002  0001A8  D7FC               	bra	u1667
  1003  0001AA  F000               	nop	
  1004  0001AC                     
  1005                           ;main.c: 79:             leftTurnIndicator(1);
  1006  0001AC  0E00               	movlw	0
  1007  0001AE  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  1008  0001B0  0E01               	movlw	1
  1009  0001B2  6E3B               	movwf	leftTurnIndicator@value^0,c
  1010  0001B4  EC6E  F00A         	call	_leftTurnIndicator	;wreg free
  1011  0001B8                     
  1012                           ;main.c: 80:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1013  0001B8  0E07               	movlw	7
  1014  0001BA  6E54               	movwf	??_main^0,c
  1015  0001BC  0E7D               	movlw	125
  1016  0001BE                     u1677:
  1017  0001BE  2EE8               	decfsz	wreg,f,c
  1018  0001C0  D7FE               	bra	u1677
  1019  0001C2  2E54               	decfsz	??_main^0,f,c
  1020  0001C4  D7FC               	bra	u1677
  1021  0001C6  F000               	nop	
  1022  0001C8                     l4644:
  1023                           
  1024                           ;main.c: 82:         if (b2FuncActive && !lastb2){
  1025  0001C8  5032               	movf	_b2FuncActive^0,w,c
  1026  0001CA  1033               	iorwf	(_b2FuncActive+1)^0,w,c
  1027  0001CC  B4D8               	btfsc	status,2,c
  1028  0001CE  EFEB  F000         	goto	u1411
  1029  0001D2  EFED  F000         	goto	u1410
  1030  0001D6                     u1411:
  1031  0001D6  EF56  F001         	goto	l4674
  1032  0001DA                     u1410:
  1033  0001DA  5015               	movf	_lastb2^0,w,c
  1034  0001DC  1016               	iorwf	(_lastb2+1)^0,w,c
  1035  0001DE  A4D8               	btfss	status,2,c
  1036  0001E0  EFF4  F000         	goto	u1421
  1037  0001E4  EFF6  F000         	goto	u1420
  1038  0001E8                     u1421:
  1039  0001E8  EF56  F001         	goto	l4674
  1040  0001EC                     u1420:
  1041  0001EC                     
  1042                           ;main.c: 83:             blinkb2 = 1;
  1043  0001EC  0E00               	movlw	0
  1044  0001EE  6E14               	movwf	(_blinkb2+1)^0,c
  1045  0001F0  0E01               	movlw	1
  1046  0001F2  6E13               	movwf	_blinkb2^0,c
  1047                           
  1048                           ;main.c: 84:             blinkb1 = 0;
  1049  0001F4  0E00               	movlw	0
  1050  0001F6  6E18               	movwf	(_blinkb1+1)^0,c
  1051  0001F8  0E00               	movlw	0
  1052  0001FA  6E17               	movwf	_blinkb1^0,c
  1053                           
  1054                           ;main.c: 85:             blinkb10 = 0;
  1055  0001FC  0E00               	movlw	0
  1056  0001FE  6E02               	movwf	(_blinkb10+1)^0,c
  1057  000200  0E00               	movlw	0
  1058  000202  6E01               	movwf	_blinkb10^0,c
  1059  000204                     
  1060                           ;main.c: 88:             canLeftSignal(0);
  1061  000204  0E00               	movlw	0
  1062  000206  6E53               	movwf	(canLeftSignal@number+1)^0,c
  1063  000208  0E00               	movlw	0
  1064  00020A  6E52               	movwf	canLeftSignal@number^0,c
  1065  00020C  EC00  F00D         	call	_canLeftSignal	;wreg free
  1066  000210                     
  1067                           ;main.c: 89:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1068  000210  0E07               	movlw	7
  1069  000212  6E54               	movwf	??_main^0,c
  1070  000214  0E7D               	movlw	125
  1071  000216                     u1687:
  1072  000216  2EE8               	decfsz	wreg,f,c
  1073  000218  D7FE               	bra	u1687
  1074  00021A  2E54               	decfsz	??_main^0,f,c
  1075  00021C  D7FC               	bra	u1687
  1076  00021E  F000               	nop	
  1077  000220                     
  1078                           ;main.c: 90:             canRightSignal(0);
  1079  000220  0E00               	movlw	0
  1080  000222  6E53               	movwf	(canRightSignal@number+1)^0,c
  1081  000224  0E00               	movlw	0
  1082  000226  6E52               	movwf	canRightSignal@number^0,c
  1083  000228  ECEA  F00C         	call	_canRightSignal	;wreg free
  1084  00022C                     
  1085                           ;main.c: 91:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1086  00022C  0E07               	movlw	7
  1087  00022E  6E54               	movwf	??_main^0,c
  1088  000230  0E7D               	movlw	125
  1089  000232                     u1697:
  1090  000232  2EE8               	decfsz	wreg,f,c
  1091  000234  D7FE               	bra	u1697
  1092  000236  2E54               	decfsz	??_main^0,f,c
  1093  000238  D7FC               	bra	u1697
  1094  00023A  F000               	nop	
  1095  00023C                     
  1096                           ;main.c: 92:             leftTurnIndicator(0);
  1097  00023C  0E00               	movlw	0
  1098  00023E  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  1099  000240  0E00               	movlw	0
  1100  000242  6E3B               	movwf	leftTurnIndicator@value^0,c
  1101  000244  EC6E  F00A         	call	_leftTurnIndicator	;wreg free
  1102  000248                     
  1103                           ;main.c: 93:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1104  000248  0E07               	movlw	7
  1105  00024A  6E54               	movwf	??_main^0,c
  1106  00024C  0E7D               	movlw	125
  1107  00024E                     u1707:
  1108  00024E  2EE8               	decfsz	wreg,f,c
  1109  000250  D7FE               	bra	u1707
  1110  000252  2E54               	decfsz	??_main^0,f,c
  1111  000254  D7FC               	bra	u1707
  1112  000256  F000               	nop	
  1113  000258                     
  1114                           ;main.c: 94:             rightTurnIndicator(0);
  1115  000258  0E00               	movlw	0
  1116  00025A  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
  1117  00025C  0E00               	movlw	0
  1118  00025E  6E3B               	movwf	rightTurnIndicator@value^0,c
  1119  000260  EC8A  F009         	call	_rightTurnIndicator	;wreg free
  1120  000264                     
  1121                           ;main.c: 95:              _delay((unsigned long)((1)*(20000000/4000.0)));
  1122  000264  0E07               	movlw	7
  1123  000266  6E54               	movwf	??_main^0,c
  1124  000268  0E7D               	movlw	125
  1125  00026A                     u1717:
  1126  00026A  2EE8               	decfsz	wreg,f,c
  1127  00026C  D7FE               	bra	u1717
  1128  00026E  2E54               	decfsz	??_main^0,f,c
  1129  000270  D7FC               	bra	u1717
  1130  000272  F000               	nop	
  1131  000274                     
  1132                           ;main.c: 97:             canHazardSignal(1);
  1133  000274  0E00               	movlw	0
  1134  000276  6E53               	movwf	(canHazardSignal@number+1)^0,c
  1135  000278  0E01               	movlw	1
  1136  00027A  6E52               	movwf	canHazardSignal@number^0,c
  1137  00027C  EC16  F00D         	call	_canHazardSignal	;wreg free
  1138  000280                     
  1139                           ;main.c: 98:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1140  000280  0E07               	movlw	7
  1141  000282  6E54               	movwf	??_main^0,c
  1142  000284  0E7D               	movlw	125
  1143  000286                     u1727:
  1144  000286  2EE8               	decfsz	wreg,f,c
  1145  000288  D7FE               	bra	u1727
  1146  00028A  2E54               	decfsz	??_main^0,f,c
  1147  00028C  D7FC               	bra	u1727
  1148  00028E  F000               	nop	
  1149  000290                     
  1150                           ;main.c: 99:             hazardSignal(1);
  1151  000290  0E00               	movlw	0
  1152  000292  6E3C               	movwf	(hazardSignal@value+1)^0,c
  1153  000294  0E01               	movlw	1
  1154  000296  6E3B               	movwf	hazardSignal@value^0,c
  1155  000298  ECBA  F00A         	call	_hazardSignal	;wreg free
  1156  00029C                     
  1157                           ;main.c: 100:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1158  00029C  0E07               	movlw	7
  1159  00029E  6E54               	movwf	??_main^0,c
  1160  0002A0  0E7D               	movlw	125
  1161  0002A2                     u1737:
  1162  0002A2  2EE8               	decfsz	wreg,f,c
  1163  0002A4  D7FE               	bra	u1737
  1164  0002A6  2E54               	decfsz	??_main^0,f,c
  1165  0002A8  D7FC               	bra	u1737
  1166  0002AA  F000               	nop	
  1167  0002AC                     l4674:
  1168                           
  1169                           ;main.c: 104:         if (!b10FuncActive && lastb10){
  1170  0002AC  502E               	movf	_b10FuncActive^0,w,c
  1171  0002AE  102F               	iorwf	(_b10FuncActive+1)^0,w,c
  1172  0002B0  A4D8               	btfss	status,2,c
  1173  0002B2  EF5D  F001         	goto	u1431
  1174  0002B6  EF5F  F001         	goto	u1430
  1175  0002BA                     u1431:
  1176  0002BA  EF88  F001         	goto	l4688
  1177  0002BE                     u1430:
  1178  0002BE  5003               	movf	_lastb10^0,w,c
  1179  0002C0  1004               	iorwf	(_lastb10+1)^0,w,c
  1180  0002C2  B4D8               	btfsc	status,2,c
  1181  0002C4  EF66  F001         	goto	u1441
  1182  0002C8  EF68  F001         	goto	u1440
  1183  0002CC                     u1441:
  1184  0002CC  EF88  F001         	goto	l4688
  1185  0002D0                     u1440:
  1186  0002D0                     
  1187                           ;main.c: 105:             blinkb10 = 0;
  1188  0002D0  0E00               	movlw	0
  1189  0002D2  6E02               	movwf	(_blinkb10+1)^0,c
  1190  0002D4  0E00               	movlw	0
  1191  0002D6  6E01               	movwf	_blinkb10^0,c
  1192  0002D8                     
  1193                           ;main.c: 106:             canRightSignal(0);
  1194  0002D8  0E00               	movlw	0
  1195  0002DA  6E53               	movwf	(canRightSignal@number+1)^0,c
  1196  0002DC  0E00               	movlw	0
  1197  0002DE  6E52               	movwf	canRightSignal@number^0,c
  1198  0002E0  ECEA  F00C         	call	_canRightSignal	;wreg free
  1199  0002E4                     
  1200                           ;main.c: 107:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1201  0002E4  0E07               	movlw	7
  1202  0002E6  6E54               	movwf	??_main^0,c
  1203  0002E8  0E7D               	movlw	125
  1204  0002EA                     u1747:
  1205  0002EA  2EE8               	decfsz	wreg,f,c
  1206  0002EC  D7FE               	bra	u1747
  1207  0002EE  2E54               	decfsz	??_main^0,f,c
  1208  0002F0  D7FC               	bra	u1747
  1209  0002F2  F000               	nop	
  1210  0002F4                     
  1211                           ;main.c: 108:             rightTurnIndicator(0);
  1212  0002F4  0E00               	movlw	0
  1213  0002F6  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
  1214  0002F8  0E00               	movlw	0
  1215  0002FA  6E3B               	movwf	rightTurnIndicator@value^0,c
  1216  0002FC  EC8A  F009         	call	_rightTurnIndicator	;wreg free
  1217  000300                     
  1218                           ;main.c: 109:              _delay((unsigned long)((1)*(20000000/4000.0)));
  1219  000300  0E07               	movlw	7
  1220  000302  6E54               	movwf	??_main^0,c
  1221  000304  0E7D               	movlw	125
  1222  000306                     u1757:
  1223  000306  2EE8               	decfsz	wreg,f,c
  1224  000308  D7FE               	bra	u1757
  1225  00030A  2E54               	decfsz	??_main^0,f,c
  1226  00030C  D7FC               	bra	u1757
  1227  00030E  F000               	nop	
  1228  000310                     l4688:
  1229                           
  1230                           ;main.c: 111:         if (!b1FuncActive && lastb1){
  1231  000310  5036               	movf	_b1FuncActive^0,w,c
  1232  000312  1037               	iorwf	(_b1FuncActive+1)^0,w,c
  1233  000314  A4D8               	btfss	status,2,c
  1234  000316  EF8F  F001         	goto	u1451
  1235  00031A  EF91  F001         	goto	u1450
  1236  00031E                     u1451:
  1237  00031E  EFBA  F001         	goto	l4702
  1238  000322                     u1450:
  1239  000322  5019               	movf	_lastb1^0,w,c
  1240  000324  101A               	iorwf	(_lastb1+1)^0,w,c
  1241  000326  B4D8               	btfsc	status,2,c
  1242  000328  EF98  F001         	goto	u1461
  1243  00032C  EF9A  F001         	goto	u1460
  1244  000330                     u1461:
  1245  000330  EFBA  F001         	goto	l4702
  1246  000334                     u1460:
  1247  000334                     
  1248                           ;main.c: 112:             blinkb1 = 0;
  1249  000334  0E00               	movlw	0
  1250  000336  6E18               	movwf	(_blinkb1+1)^0,c
  1251  000338  0E00               	movlw	0
  1252  00033A  6E17               	movwf	_blinkb1^0,c
  1253  00033C                     
  1254                           ;main.c: 113:             canLeftSignal(0);
  1255  00033C  0E00               	movlw	0
  1256  00033E  6E53               	movwf	(canLeftSignal@number+1)^0,c
  1257  000340  0E00               	movlw	0
  1258  000342  6E52               	movwf	canLeftSignal@number^0,c
  1259  000344  EC00  F00D         	call	_canLeftSignal	;wreg free
  1260  000348                     
  1261                           ;main.c: 114:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1262  000348  0E07               	movlw	7
  1263  00034A  6E54               	movwf	??_main^0,c
  1264  00034C  0E7D               	movlw	125
  1265  00034E                     u1767:
  1266  00034E  2EE8               	decfsz	wreg,f,c
  1267  000350  D7FE               	bra	u1767
  1268  000352  2E54               	decfsz	??_main^0,f,c
  1269  000354  D7FC               	bra	u1767
  1270  000356  F000               	nop	
  1271  000358                     
  1272                           ;main.c: 115:             leftTurnIndicator(0);
  1273  000358  0E00               	movlw	0
  1274  00035A  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  1275  00035C  0E00               	movlw	0
  1276  00035E  6E3B               	movwf	leftTurnIndicator@value^0,c
  1277  000360  EC6E  F00A         	call	_leftTurnIndicator	;wreg free
  1278  000364                     
  1279                           ;main.c: 116:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1280  000364  0E07               	movlw	7
  1281  000366  6E54               	movwf	??_main^0,c
  1282  000368  0E7D               	movlw	125
  1283  00036A                     u1777:
  1284  00036A  2EE8               	decfsz	wreg,f,c
  1285  00036C  D7FE               	bra	u1777
  1286  00036E  2E54               	decfsz	??_main^0,f,c
  1287  000370  D7FC               	bra	u1777
  1288  000372  F000               	nop	
  1289  000374                     l4702:
  1290                           
  1291                           ;main.c: 118:         if (!b2FuncActive && lastb2){
  1292  000374  5032               	movf	_b2FuncActive^0,w,c
  1293  000376  1033               	iorwf	(_b2FuncActive+1)^0,w,c
  1294  000378  A4D8               	btfss	status,2,c
  1295  00037A  EFC1  F001         	goto	u1471
  1296  00037E  EFC3  F001         	goto	u1470
  1297  000382                     u1471:
  1298  000382  EFEC  F001         	goto	l4716
  1299  000386                     u1470:
  1300  000386  5015               	movf	_lastb2^0,w,c
  1301  000388  1016               	iorwf	(_lastb2+1)^0,w,c
  1302  00038A  B4D8               	btfsc	status,2,c
  1303  00038C  EFCA  F001         	goto	u1481
  1304  000390  EFCC  F001         	goto	u1480
  1305  000394                     u1481:
  1306  000394  EFEC  F001         	goto	l4716
  1307  000398                     u1480:
  1308  000398                     
  1309                           ;main.c: 119:             blinkb2 = 0;
  1310  000398  0E00               	movlw	0
  1311  00039A  6E14               	movwf	(_blinkb2+1)^0,c
  1312  00039C  0E00               	movlw	0
  1313  00039E  6E13               	movwf	_blinkb2^0,c
  1314  0003A0                     
  1315                           ;main.c: 120:             canHazardSignal(0);
  1316  0003A0  0E00               	movlw	0
  1317  0003A2  6E53               	movwf	(canHazardSignal@number+1)^0,c
  1318  0003A4  0E00               	movlw	0
  1319  0003A6  6E52               	movwf	canHazardSignal@number^0,c
  1320  0003A8  EC16  F00D         	call	_canHazardSignal	;wreg free
  1321  0003AC                     
  1322                           ;main.c: 121:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1323  0003AC  0E07               	movlw	7
  1324  0003AE  6E54               	movwf	??_main^0,c
  1325  0003B0  0E7D               	movlw	125
  1326  0003B2                     u1787:
  1327  0003B2  2EE8               	decfsz	wreg,f,c
  1328  0003B4  D7FE               	bra	u1787
  1329  0003B6  2E54               	decfsz	??_main^0,f,c
  1330  0003B8  D7FC               	bra	u1787
  1331  0003BA  F000               	nop	
  1332  0003BC                     
  1333                           ;main.c: 122:             hazardSignal(0);
  1334  0003BC  0E00               	movlw	0
  1335  0003BE  6E3C               	movwf	(hazardSignal@value+1)^0,c
  1336  0003C0  0E00               	movlw	0
  1337  0003C2  6E3B               	movwf	hazardSignal@value^0,c
  1338  0003C4  ECBA  F00A         	call	_hazardSignal	;wreg free
  1339  0003C8                     
  1340                           ;main.c: 123:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1341  0003C8  0E07               	movlw	7
  1342  0003CA  6E54               	movwf	??_main^0,c
  1343  0003CC  0E7D               	movlw	125
  1344  0003CE                     u1797:
  1345  0003CE  2EE8               	decfsz	wreg,f,c
  1346  0003D0  D7FE               	bra	u1797
  1347  0003D2  2E54               	decfsz	??_main^0,f,c
  1348  0003D4  D7FC               	bra	u1797
  1349  0003D6  F000               	nop	
  1350  0003D8                     l4716:
  1351                           
  1352                           ;main.c: 136:         lastb1 = b1FuncActive;
  1353  0003D8  C036  F019         	movff	_b1FuncActive,_lastb1
  1354  0003DC  C037  F01A         	movff	_b1FuncActive+1,_lastb1+1
  1355  0003E0                     
  1356                           ;main.c: 137:         lastb2 = b2FuncActive;
  1357  0003E0  C032  F015         	movff	_b2FuncActive,_lastb2
  1358  0003E4  C033  F016         	movff	_b2FuncActive+1,_lastb2+1
  1359  0003E8                     
  1360                           ;main.c: 138:         lastb10 = b10FuncActive;
  1361  0003E8  C02E  F003         	movff	_b10FuncActive,_lastb10
  1362  0003EC  C02F  F004         	movff	_b10FuncActive+1,_lastb10+1
  1363  0003F0                     
  1364                           ;main.c: 140:         leftTurnButton(&b1FuncActive, &latchb1);
  1365  0003F0  0E36               	movlw	low _b1FuncActive
  1366  0003F2  6E3A               	movwf	leftTurnButton@b1FunctionActive^0,c
  1367  0003F4  0E00               	movlw	high _b1FuncActive
  1368  0003F6  6E3B               	movwf	(leftTurnButton@b1FunctionActive+1)^0,c
  1369  0003F8  0E34               	movlw	low _latchb1
  1370  0003FA  6E3C               	movwf	leftTurnButton@b1Latch^0,c
  1371  0003FC  0E00               	movlw	high _latchb1
  1372  0003FE  6E3D               	movwf	(leftTurnButton@b1Latch+1)^0,c
  1373  000400  EC4E  F008         	call	_leftTurnButton	;wreg free
  1374  000404                     
  1375                           ;main.c: 141:         rightTurnButton(&b10FuncActive, &latchb10);
  1376  000404  0E2E               	movlw	low _b10FuncActive
  1377  000406  6E3A               	movwf	rightTurnButton@b10FunctionActive^0,c
  1378  000408  0E00               	movlw	high _b10FuncActive
  1379  00040A  6E3B               	movwf	(rightTurnButton@b10FunctionActive+1)^0,c
  1380  00040C  0E2C               	movlw	low _latchb10
  1381  00040E  6E3C               	movwf	rightTurnButton@b10Latch^0,c
  1382  000410  0E00               	movlw	high _latchb10
  1383  000412  6E3D               	movwf	(rightTurnButton@b10Latch+1)^0,c
  1384  000414  ECD6  F007         	call	_rightTurnButton	;wreg free
  1385  000418                     
  1386                           ;main.c: 142:         hazardButton(&b2FuncActive, &latchb2);
  1387  000418  0E32               	movlw	low _b2FuncActive
  1388  00041A  6E3A               	movwf	hazardButton@b2FunctionActive^0,c
  1389  00041C  0E00               	movlw	high _b2FuncActive
  1390  00041E  6E3B               	movwf	(hazardButton@b2FunctionActive+1)^0,c
  1391  000420  0E30               	movlw	low _latchb2
  1392  000422  6E3C               	movwf	hazardButton@b2Latch^0,c
  1393  000424  0E00               	movlw	high _latchb2
  1394  000426  6E3D               	movwf	(hazardButton@b2Latch+1)^0,c
  1395  000428  ECC6  F008         	call	_hazardButton	;wreg free
  1396  00042C                     
  1397                           ;main.c: 144:         if (counter >= 10 && speed != -1){
  1398  00042C  0100               	movlb	0	; () banked
  1399  00042E  BFC3               	btfsc	(main@counter+1)& (0+255),7,b
  1400  000430  EF23  F002         	goto	u1491
  1401  000434  51C3               	movf	(main@counter+1)& (0+255),w,b
  1402  000436  E109               	bnz	u1490
  1403  000438  0E0A               	movlw	10
  1404  00043A  5DC2               	subwf	main@counter& (0+255),w,b
  1405  00043C  A0D8               	btfss	status,0,c
  1406  00043E  EF23  F002         	goto	u1491
  1407  000442  EF25  F002         	goto	u1490
  1408  000446                     u1491:
  1409  000446  EF3C  F002         	goto	l4738
  1410  00044A                     u1490:
  1411  00044A                     
  1412                           ; BSR set to: 0
  1413  00044A  29C4               	incf	main@speed& (0+255),w,b
  1414  00044C  E108               	bnz	u1500
  1415  00044E  29C5               	incf	(main@speed+1)& (0+255),w,b
  1416  000450  B4D8               	btfsc	status,2,c
  1417  000452  EF2D  F002         	goto	u1501
  1418  000456  EF2F  F002         	goto	u1500
  1419  00045A                     u1501:
  1420  00045A  EF3C  F002         	goto	l4738
  1421  00045E                     u1500:
  1422  00045E                     
  1423                           ; BSR set to: 0
  1424                           ;main.c: 145:             counter = 0;
  1425  00045E  0E00               	movlw	0
  1426  000460  6FC3               	movwf	(main@counter+1)& (0+255),b
  1427  000462  0E00               	movlw	0
  1428  000464  6FC2               	movwf	main@counter& (0+255),b
  1429  000466                     
  1430                           ; BSR set to: 0
  1431                           ;main.c: 146:             motorSpeed(speed);
  1432  000466  C0C4  F03B         	movff	main@speed,motorSpeed@value
  1433  00046A  C0C5  F03C         	movff	main@speed+1,motorSpeed@value+1
  1434  00046E  ECD6  F009         	call	_motorSpeed	;wreg free
  1435  000472                     
  1436                           ;main.c: 147:             speed++;
  1437  000472  0100               	movlb	0	; () banked
  1438  000474  4BC4               	infsnz	main@speed& (0+255),f,b
  1439  000476  2BC5               	incf	(main@speed+1)& (0+255),f,b
  1440  000478                     l4738:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;main.c: 153:         if (CAN_receive(&rx)){
  1444  000478  0E1E               	movlw	low _rx
  1445  00047A  6E4D               	movwf	CAN_receive@tempCanMsg^0,c
  1446  00047C  0E00               	movlw	high _rx
  1447  00047E  6E4E               	movwf	(CAN_receive@tempCanMsg+1)^0,c
  1448  000480  EC83  F004         	call	_CAN_receive	;wreg free
  1449  000484  0900               	iorlw	0
  1450  000486  B4D8               	btfsc	status,2,c
  1451  000488  EF48  F002         	goto	u1511
  1452  00048C  EF4A  F002         	goto	u1510
  1453  000490                     u1511:
  1454  000490  EF4E  F000         	goto	l4604
  1455  000494                     u1510:
  1456  000494                     
  1457                           ;main.c: 154:             if (rx.frame.idType == 1){
  1458  000494  041E               	decf	_rx^0,w,c
  1459  000496  A4D8               	btfss	status,2,c
  1460  000498  EF50  F002         	goto	u1521
  1461  00049C  EF52  F002         	goto	u1520
  1462  0004A0                     u1521:
  1463  0004A0  EF4E  F000         	goto	l4604
  1464  0004A4                     u1520:
  1465  0004A4                     
  1466                           ;main.c: 156:                 if (rx.frame.id == 0x02F4 || rx.frame.id == 0x04F4 || rx.f
      +                          rame.id == 0x05F4 || rx.frame.id == 0x07F4 || rx.frame.id == 0x08F4){
  1467  0004A4  0EF4               	movlw	244
  1468  0004A6  181F               	xorwf	(_rx+1)^0,w,c
  1469  0004A8  E10B               	bnz	u1530
  1470  0004AA  0E02               	movlw	2
  1471  0004AC  1820               	xorwf	(_rx+2)^0,w,c
  1472  0004AE  1021               	iorwf	(_rx+3)^0,w,c
  1473  0004B0  1022               	iorwf	(_rx+4)^0,w,c
  1474  0004B2  B4D8               	btfsc	status,2,c
  1475  0004B4  EF5E  F002         	goto	u1531
  1476  0004B8  EF60  F002         	goto	u1530
  1477  0004BC                     u1531:
  1478  0004BC  EF98  F002         	goto	l4752
  1479  0004C0                     u1530:
  1480  0004C0  0EF4               	movlw	244
  1481  0004C2  181F               	xorwf	(_rx+1)^0,w,c
  1482  0004C4  E10B               	bnz	u1540
  1483  0004C6  0E04               	movlw	4
  1484  0004C8  1820               	xorwf	(_rx+2)^0,w,c
  1485  0004CA  1021               	iorwf	(_rx+3)^0,w,c
  1486  0004CC  1022               	iorwf	(_rx+4)^0,w,c
  1487  0004CE  B4D8               	btfsc	status,2,c
  1488  0004D0  EF6C  F002         	goto	u1541
  1489  0004D4  EF6E  F002         	goto	u1540
  1490  0004D8                     u1541:
  1491  0004D8  EF98  F002         	goto	l4752
  1492  0004DC                     u1540:
  1493  0004DC  0EF4               	movlw	244
  1494  0004DE  181F               	xorwf	(_rx+1)^0,w,c
  1495  0004E0  E10B               	bnz	u1550
  1496  0004E2  0E05               	movlw	5
  1497  0004E4  1820               	xorwf	(_rx+2)^0,w,c
  1498  0004E6  1021               	iorwf	(_rx+3)^0,w,c
  1499  0004E8  1022               	iorwf	(_rx+4)^0,w,c
  1500  0004EA  B4D8               	btfsc	status,2,c
  1501  0004EC  EF7A  F002         	goto	u1551
  1502  0004F0  EF7C  F002         	goto	u1550
  1503  0004F4                     u1551:
  1504  0004F4  EF98  F002         	goto	l4752
  1505  0004F8                     u1550:
  1506  0004F8  0EF4               	movlw	244
  1507  0004FA  181F               	xorwf	(_rx+1)^0,w,c
  1508  0004FC  E10B               	bnz	u1560
  1509  0004FE  0E07               	movlw	7
  1510  000500  1820               	xorwf	(_rx+2)^0,w,c
  1511  000502  1021               	iorwf	(_rx+3)^0,w,c
  1512  000504  1022               	iorwf	(_rx+4)^0,w,c
  1513  000506  B4D8               	btfsc	status,2,c
  1514  000508  EF88  F002         	goto	u1561
  1515  00050C  EF8A  F002         	goto	u1560
  1516  000510                     u1561:
  1517  000510  EF98  F002         	goto	l4752
  1518  000514                     u1560:
  1519  000514  0EF4               	movlw	244
  1520  000516  181F               	xorwf	(_rx+1)^0,w,c
  1521  000518  E109               	bnz	u1571
  1522  00051A  0E08               	movlw	8
  1523  00051C  1820               	xorwf	(_rx+2)^0,w,c
  1524  00051E  1021               	iorwf	(_rx+3)^0,w,c
  1525  000520  1022               	iorwf	(_rx+4)^0,w,c
  1526  000522  A4D8               	btfss	status,2,c
  1527  000524  EF96  F002         	goto	u1571
  1528  000528  EF98  F002         	goto	u1570
  1529  00052C                     u1571:
  1530  00052C  EFA6  F002         	goto	l4756
  1531  000530                     u1570:
  1532  000530                     l4752:
  1533                           
  1534                           ;main.c: 157:                     _delay((unsigned long)((1)*(20000000/4000.0)));
  1535  000530  0E07               	movlw	7
  1536  000532  6E54               	movwf	??_main^0,c
  1537  000534  0E7D               	movlw	125
  1538  000536                     u1807:
  1539  000536  2EE8               	decfsz	wreg,f,c
  1540  000538  D7FE               	bra	u1807
  1541  00053A  2E54               	decfsz	??_main^0,f,c
  1542  00053C  D7FC               	bra	u1807
  1543  00053E  F000               	nop	
  1544  000540                     
  1545                           ;main.c: 158:                     warningLED(1);
  1546  000540  0E00               	movlw	0
  1547  000542  6E3C               	movwf	(warningLED@value+1)^0,c
  1548  000544  0E01               	movlw	1
  1549  000546  6E3B               	movwf	warningLED@value^0,c
  1550  000548  EC3E  F009         	call	_warningLED	;wreg free
  1551  00054C                     l4756:
  1552                           
  1553                           ;main.c: 161:                 if (rx.frame.id == 0x80){
  1554  00054C  0E80               	movlw	128
  1555  00054E  181F               	xorwf	(_rx+1)^0,w,c
  1556  000550  1020               	iorwf	(_rx+2)^0,w,c
  1557  000552  1021               	iorwf	(_rx+3)^0,w,c
  1558  000554  1022               	iorwf	(_rx+4)^0,w,c
  1559  000556  A4D8               	btfss	status,2,c
  1560  000558  EFB0  F002         	goto	u1581
  1561  00055C  EFB2  F002         	goto	u1580
  1562  000560                     u1581:
  1563  000560  EFD8  F002         	goto	l4768
  1564  000564                     u1580:
  1565  000564                     
  1566                           ;main.c: 162:                     if (rx.frame.data0 == 1){
  1567  000564  0424               	decf	(_rx+6)^0,w,c
  1568  000566  A4D8               	btfss	status,2,c
  1569  000568  EFB8  F002         	goto	u1591
  1570  00056C  EFBA  F002         	goto	u1590
  1571  000570                     u1591:
  1572  000570  EFCA  F002         	goto	l4764
  1573  000574                     u1590:
  1574  000574                     
  1575                           ;main.c: 163:                         _delay((unsigned long)((1)*(20000000/4000.0)));
  1576  000574  0E07               	movlw	7
  1577  000576  6E54               	movwf	??_main^0,c
  1578  000578  0E7D               	movlw	125
  1579  00057A                     u1817:
  1580  00057A  2EE8               	decfsz	wreg,f,c
  1581  00057C  D7FE               	bra	u1817
  1582  00057E  2E54               	decfsz	??_main^0,f,c
  1583  000580  D7FC               	bra	u1817
  1584  000582  F000               	nop	
  1585  000584                     
  1586                           ;main.c: 164:                         auxBattConn(1);
  1587  000584  0E00               	movlw	0
  1588  000586  6E3C               	movwf	(auxBattConn@value+1)^0,c
  1589  000588  0E01               	movlw	1
  1590  00058A  6E3B               	movwf	auxBattConn@value^0,c
  1591  00058C  ECEA  F00B         	call	_auxBattConn	;wreg free
  1592                           
  1593                           ;main.c: 165:                     }
  1594  000590  EFD8  F002         	goto	l4768
  1595  000594                     l4764:
  1596                           
  1597                           ;main.c: 167:                         _delay((unsigned long)((1)*(20000000/4000.0)));
  1598  000594  0E07               	movlw	7
  1599  000596  6E54               	movwf	??_main^0,c
  1600  000598  0E7D               	movlw	125
  1601  00059A                     u1827:
  1602  00059A  2EE8               	decfsz	wreg,f,c
  1603  00059C  D7FE               	bra	u1827
  1604  00059E  2E54               	decfsz	??_main^0,f,c
  1605  0005A0  D7FC               	bra	u1827
  1606  0005A2  F000               	nop	
  1607  0005A4                     
  1608                           ;main.c: 168:                         auxBattConn(0);
  1609  0005A4  0E00               	movlw	0
  1610  0005A6  6E3C               	movwf	(auxBattConn@value+1)^0,c
  1611  0005A8  0E00               	movlw	0
  1612  0005AA  6E3B               	movwf	auxBattConn@value^0,c
  1613  0005AC  ECEA  F00B         	call	_auxBattConn	;wreg free
  1614  0005B0                     l4768:
  1615                           
  1616                           ;main.c: 172:                 if (rx.frame.id == 0x81){
  1617  0005B0  0E81               	movlw	129
  1618  0005B2  181F               	xorwf	(_rx+1)^0,w,c
  1619  0005B4  1020               	iorwf	(_rx+2)^0,w,c
  1620  0005B6  1021               	iorwf	(_rx+3)^0,w,c
  1621  0005B8  1022               	iorwf	(_rx+4)^0,w,c
  1622  0005BA  A4D8               	btfss	status,2,c
  1623  0005BC  EFE2  F002         	goto	u1601
  1624  0005C0  EFE4  F002         	goto	u1600
  1625  0005C4                     u1601:
  1626  0005C4  EFF2  F002         	goto	l673
  1627  0005C8                     u1600:
  1628  0005C8                     
  1629                           ;main.c: 173:                     _delay((unsigned long)((1)*(20000000/4000.0)));
  1630  0005C8  0E07               	movlw	7
  1631  0005CA  6E54               	movwf	??_main^0,c
  1632  0005CC  0E7D               	movlw	125
  1633  0005CE                     u1837:
  1634  0005CE  2EE8               	decfsz	wreg,f,c
  1635  0005D0  D7FE               	bra	u1837
  1636  0005D2  2E54               	decfsz	??_main^0,f,c
  1637  0005D4  D7FC               	bra	u1837
  1638  0005D6  F000               	nop	
  1639  0005D8                     
  1640                           ;main.c: 174:                     speed = rx.frame.data0;
  1641  0005D8  C024  F0C4         	movff	_rx+6,main@speed
  1642  0005DC  0100               	movlb	0	; () banked
  1643  0005DE  6BC5               	clrf	(main@speed+1)& (0+255),b
  1644  0005E0  EF4E  F000         	goto	l4604
  1645  0005E4                     l673:
  1646  0005E4  EF4E  F000         	goto	l4604
  1647  0005E8  EF26  F000         	goto	start
  1648  0005EC                     __end_of_main:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _rightTurnButton *****************
  1652 ;; Defined at:
  1653 ;;		line 33 in file "button_functionality.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  b10FunctionA    2    2[COMRAM] PTR int 
  1656 ;;		 -> b10FuncActive(2), 
  1657 ;;  b10Latch        2    4[COMRAM] PTR int 
  1658 ;;		 -> buttonRuntime@var(2), latchb10(2), 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;Total ram usage:        6 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 3
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;;		_buttonRuntime
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text1
  1686  000FAC                     __ptext1:
  1687                           	callstack 0
  1688  000FAC                     _rightTurnButton:
  1689                           	callstack 27
  1690  000FAC                     
  1691                           ;button_functionality.c: 34:     switch (PORTCbits.RC1) {
  1692  000FAC  EF30  F008         	goto	l4542
  1693  000FB0                     l4524:
  1694                           
  1695                           ;button_functionality.c: 36:         *b10Latch = 0;
  1696  000FB0  C03C  FFD9         	movff	rightTurnButton@b10Latch,fsr2l
  1697  000FB4  C03D  FFDA         	movff	rightTurnButton@b10Latch+1,fsr2h
  1698  000FB8  0E00               	movlw	0
  1699  000FBA  6EDE               	movwf	postinc2,c
  1700  000FBC  0E00               	movlw	0
  1701  000FBE  6EDD               	movwf	postdec2,c
  1702                           
  1703                           ;button_functionality.c: 37:         break;
  1704  000FC0  EF4D  F008         	goto	l760
  1705  000FC4                     l4526:
  1706                           
  1707                           ;button_functionality.c: 44:                 *b10FunctionActive = 1;
  1708  000FC4  C03A  FFD9         	movff	rightTurnButton@b10FunctionActive,fsr2l
  1709  000FC8  C03B  FFDA         	movff	rightTurnButton@b10FunctionActive+1,fsr2h
  1710  000FCC  0E01               	movlw	1
  1711  000FCE  6EDE               	movwf	postinc2,c
  1712  000FD0  0E00               	movlw	0
  1713  000FD2  6EDD               	movwf	postdec2,c
  1714                           
  1715                           ;button_functionality.c: 45:                 break;
  1716  000FD4  EF10  F008         	goto	l4534
  1717  000FD8                     l4528:
  1718                           
  1719                           ;button_functionality.c: 48:                 *b10FunctionActive = 0;
  1720  000FD8  C03A  FFD9         	movff	rightTurnButton@b10FunctionActive,fsr2l
  1721  000FDC  C03B  FFDA         	movff	rightTurnButton@b10FunctionActive+1,fsr2h
  1722  000FE0  0E00               	movlw	0
  1723  000FE2  6EDE               	movwf	postinc2,c
  1724  000FE4  0E00               	movlw	0
  1725  000FE6  6EDD               	movwf	postdec2,c
  1726                           
  1727                           ;button_functionality.c: 49:                 break;
  1728  000FE8  EF10  F008         	goto	l4534
  1729  000FEC                     l4532:
  1730  000FEC  C03A  FFD9         	movff	rightTurnButton@b10FunctionActive,fsr2l
  1731  000FF0  C03B  FFDA         	movff	rightTurnButton@b10FunctionActive+1,fsr2h
  1732  000FF4  CFDE F03E          	movff	postinc2,??_rightTurnButton
  1733  000FF8  CFDD F03F          	movff	postdec2,??_rightTurnButton+1
  1734                           
  1735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1736                           ; Switch size 1, requested type "simple"
  1737                           ; Number of cases is 1, Range of values is 0 to 0
  1738                           ; switch strategies available:
  1739                           ; Name         Instructions Cycles
  1740                           ; simple_byte            4     3 (average)
  1741                           ;	Chosen strategy is simple_byte
  1742  000FFC  503F               	movf	(??_rightTurnButton+1)^0,w,c
  1743  000FFE  0A00               	xorlw	0	; case 0
  1744  001000  B4D8               	btfsc	status,2,c
  1745  001002  EF05  F008         	goto	l5036
  1746  001006  EF10  F008         	goto	l4534
  1747  00100A                     l5036:
  1748                           
  1749                           ; Switch size 1, requested type "simple"
  1750                           ; Number of cases is 2, Range of values is 0 to 1
  1751                           ; switch strategies available:
  1752                           ; Name         Instructions Cycles
  1753                           ; simple_byte            7     4 (average)
  1754                           ;	Chosen strategy is simple_byte
  1755  00100A  503E               	movf	??_rightTurnButton^0,w,c
  1756  00100C  0A00               	xorlw	0	; case 0
  1757  00100E  B4D8               	btfsc	status,2,c
  1758  001010  EFE2  F007         	goto	l4526
  1759  001014  0A01               	xorlw	1	; case 1
  1760  001016  B4D8               	btfsc	status,2,c
  1761  001018  EFEC  F007         	goto	l4528
  1762  00101C  EF10  F008         	goto	l4534
  1763  001020                     l4534:
  1764                           
  1765                           ;button_functionality.c: 51:             *b10Latch = 1;
  1766  001020  C03C  FFD9         	movff	rightTurnButton@b10Latch,fsr2l
  1767  001024  C03D  FFDA         	movff	rightTurnButton@b10Latch+1,fsr2h
  1768  001028  0E01               	movlw	1
  1769  00102A  6EDE               	movwf	postinc2,c
  1770  00102C  0E00               	movlw	0
  1771  00102E  6EDD               	movwf	postdec2,c
  1772                           
  1773                           ;button_functionality.c: 52:             break;
  1774  001030  EF4D  F008         	goto	l760
  1775  001034                     l4538:
  1776  001034  C03C  FFD9         	movff	rightTurnButton@b10Latch,fsr2l
  1777  001038  C03D  FFDA         	movff	rightTurnButton@b10Latch+1,fsr2h
  1778  00103C  CFDE F03E          	movff	postinc2,??_rightTurnButton
  1779  001040  CFDD F03F          	movff	postdec2,??_rightTurnButton+1
  1780                           
  1781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1782                           ; Switch size 1, requested type "simple"
  1783                           ; Number of cases is 1, Range of values is 0 to 0
  1784                           ; switch strategies available:
  1785                           ; Name         Instructions Cycles
  1786                           ; simple_byte            4     3 (average)
  1787                           ;	Chosen strategy is simple_byte
  1788  001044  503F               	movf	(??_rightTurnButton+1)^0,w,c
  1789  001046  0A00               	xorlw	0	; case 0
  1790  001048  B4D8               	btfsc	status,2,c
  1791  00104A  EF29  F008         	goto	l5038
  1792  00104E  EF4D  F008         	goto	l760
  1793  001052                     l5038:
  1794                           
  1795                           ; Switch size 1, requested type "simple"
  1796                           ; Number of cases is 1, Range of values is 0 to 0
  1797                           ; switch strategies available:
  1798                           ; Name         Instructions Cycles
  1799                           ; simple_byte            4     3 (average)
  1800                           ;	Chosen strategy is simple_byte
  1801  001052  503E               	movf	??_rightTurnButton^0,w,c
  1802  001054  0A00               	xorlw	0	; case 0
  1803  001056  B4D8               	btfsc	status,2,c
  1804  001058  EFF6  F007         	goto	l4532
  1805  00105C  EF4D  F008         	goto	l760
  1806  001060                     l4542:
  1807  001060  B282               	btfsc	130,1,c	;volatile
  1808  001062  EF35  F008         	goto	u1291
  1809  001066  EF38  F008         	goto	u1290
  1810  00106A                     u1291:
  1811  00106A  0E01               	movlw	1
  1812  00106C  EF39  F008         	goto	u1300
  1813  001070                     u1290:
  1814  001070  0E00               	movlw	0
  1815  001072                     u1300:
  1816  001072  6E3E               	movwf	??_rightTurnButton^0,c
  1817  001074  6A3F               	clrf	(??_rightTurnButton+1)^0,c
  1818                           
  1819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1820                           ; Switch size 1, requested type "simple"
  1821                           ; Number of cases is 1, Range of values is 0 to 0
  1822                           ; switch strategies available:
  1823                           ; Name         Instructions Cycles
  1824                           ; simple_byte            4     3 (average)
  1825                           ;	Chosen strategy is simple_byte
  1826  001076  503F               	movf	(??_rightTurnButton+1)^0,w,c
  1827  001078  0A00               	xorlw	0	; case 0
  1828  00107A  B4D8               	btfsc	status,2,c
  1829  00107C  EF42  F008         	goto	l5040
  1830  001080  EF4D  F008         	goto	l760
  1831  001084                     l5040:
  1832                           
  1833                           ; Switch size 1, requested type "simple"
  1834                           ; Number of cases is 2, Range of values is 0 to 1
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte            7     4 (average)
  1838                           ;	Chosen strategy is simple_byte
  1839  001084  503E               	movf	??_rightTurnButton^0,w,c
  1840  001086  0A00               	xorlw	0	; case 0
  1841  001088  B4D8               	btfsc	status,2,c
  1842  00108A  EFD8  F007         	goto	l4524
  1843  00108E  0A01               	xorlw	1	; case 1
  1844  001090  B4D8               	btfsc	status,2,c
  1845  001092  EF1A  F008         	goto	l4538
  1846  001096  EF4D  F008         	goto	l760
  1847  00109A                     l760:
  1848  00109A  0012               	return		;funcret
  1849  00109C                     __end_of_rightTurnButton:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _leftTurnButton *****************
  1853 ;; Defined at:
  1854 ;;		line 9 in file "button_functionality.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  b1FunctionAc    2    2[COMRAM] PTR int 
  1857 ;;		 -> b1FuncActive(2), 
  1858 ;;  b1Latch         2    4[COMRAM] PTR int 
  1859 ;;		 -> buttonRuntime@var(2), latchb1(2), 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1871 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;Total ram usage:        6 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; Hardware stack levels required when called: 3
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;;		_buttonRuntime
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text2
  1887  00109C                     __ptext2:
  1888                           	callstack 0
  1889  00109C                     _leftTurnButton:
  1890                           	callstack 27
  1891  00109C                     
  1892                           ;button_functionality.c: 10:     switch (PORTAbits.RA0) {
  1893  00109C  EFA8  F008         	goto	l4508
  1894  0010A0                     l4490:
  1895                           
  1896                           ;button_functionality.c: 12:         *b1Latch = 0;
  1897  0010A0  C03C  FFD9         	movff	leftTurnButton@b1Latch,fsr2l
  1898  0010A4  C03D  FFDA         	movff	leftTurnButton@b1Latch+1,fsr2h
  1899  0010A8  0E00               	movlw	0
  1900  0010AA  6EDE               	movwf	postinc2,c
  1901  0010AC  0E00               	movlw	0
  1902  0010AE  6EDD               	movwf	postdec2,c
  1903                           
  1904                           ;button_functionality.c: 13:         break;
  1905  0010B0  EFC5  F008         	goto	l746
  1906  0010B4                     l4492:
  1907                           
  1908                           ;button_functionality.c: 20:                 *b1FunctionActive = 1;
  1909  0010B4  C03A  FFD9         	movff	leftTurnButton@b1FunctionActive,fsr2l
  1910  0010B8  C03B  FFDA         	movff	leftTurnButton@b1FunctionActive+1,fsr2h
  1911  0010BC  0E01               	movlw	1
  1912  0010BE  6EDE               	movwf	postinc2,c
  1913  0010C0  0E00               	movlw	0
  1914  0010C2  6EDD               	movwf	postdec2,c
  1915                           
  1916                           ;button_functionality.c: 21:                 break;
  1917  0010C4  EF88  F008         	goto	l4500
  1918  0010C8                     l4494:
  1919                           
  1920                           ;button_functionality.c: 24:                 *b1FunctionActive = 0;
  1921  0010C8  C03A  FFD9         	movff	leftTurnButton@b1FunctionActive,fsr2l
  1922  0010CC  C03B  FFDA         	movff	leftTurnButton@b1FunctionActive+1,fsr2h
  1923  0010D0  0E00               	movlw	0
  1924  0010D2  6EDE               	movwf	postinc2,c
  1925  0010D4  0E00               	movlw	0
  1926  0010D6  6EDD               	movwf	postdec2,c
  1927                           
  1928                           ;button_functionality.c: 25:                 break;
  1929  0010D8  EF88  F008         	goto	l4500
  1930  0010DC                     l4498:
  1931  0010DC  C03A  FFD9         	movff	leftTurnButton@b1FunctionActive,fsr2l
  1932  0010E0  C03B  FFDA         	movff	leftTurnButton@b1FunctionActive+1,fsr2h
  1933  0010E4  CFDE F03E          	movff	postinc2,??_leftTurnButton
  1934  0010E8  CFDD F03F          	movff	postdec2,??_leftTurnButton+1
  1935                           
  1936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1937                           ; Switch size 1, requested type "simple"
  1938                           ; Number of cases is 1, Range of values is 0 to 0
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte            4     3 (average)
  1942                           ;	Chosen strategy is simple_byte
  1943  0010EC  503F               	movf	(??_leftTurnButton+1)^0,w,c
  1944  0010EE  0A00               	xorlw	0	; case 0
  1945  0010F0  B4D8               	btfsc	status,2,c
  1946  0010F2  EF7D  F008         	goto	l5042
  1947  0010F6  EF88  F008         	goto	l4500
  1948  0010FA                     l5042:
  1949                           
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 2, Range of values is 0 to 1
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte            7     4 (average)
  1955                           ;	Chosen strategy is simple_byte
  1956  0010FA  503E               	movf	??_leftTurnButton^0,w,c
  1957  0010FC  0A00               	xorlw	0	; case 0
  1958  0010FE  B4D8               	btfsc	status,2,c
  1959  001100  EF5A  F008         	goto	l4492
  1960  001104  0A01               	xorlw	1	; case 1
  1961  001106  B4D8               	btfsc	status,2,c
  1962  001108  EF64  F008         	goto	l4494
  1963  00110C  EF88  F008         	goto	l4500
  1964  001110                     l4500:
  1965                           
  1966                           ;button_functionality.c: 27:             *b1Latch = 1;
  1967  001110  C03C  FFD9         	movff	leftTurnButton@b1Latch,fsr2l
  1968  001114  C03D  FFDA         	movff	leftTurnButton@b1Latch+1,fsr2h
  1969  001118  0E01               	movlw	1
  1970  00111A  6EDE               	movwf	postinc2,c
  1971  00111C  0E00               	movlw	0
  1972  00111E  6EDD               	movwf	postdec2,c
  1973                           
  1974                           ;button_functionality.c: 28:             break;
  1975  001120  EFC5  F008         	goto	l746
  1976  001124                     l4504:
  1977  001124  C03C  FFD9         	movff	leftTurnButton@b1Latch,fsr2l
  1978  001128  C03D  FFDA         	movff	leftTurnButton@b1Latch+1,fsr2h
  1979  00112C  CFDE F03E          	movff	postinc2,??_leftTurnButton
  1980  001130  CFDD F03F          	movff	postdec2,??_leftTurnButton+1
  1981                           
  1982                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1983                           ; Switch size 1, requested type "simple"
  1984                           ; Number of cases is 1, Range of values is 0 to 0
  1985                           ; switch strategies available:
  1986                           ; Name         Instructions Cycles
  1987                           ; simple_byte            4     3 (average)
  1988                           ;	Chosen strategy is simple_byte
  1989  001134  503F               	movf	(??_leftTurnButton+1)^0,w,c
  1990  001136  0A00               	xorlw	0	; case 0
  1991  001138  B4D8               	btfsc	status,2,c
  1992  00113A  EFA1  F008         	goto	l5044
  1993  00113E  EFC5  F008         	goto	l746
  1994  001142                     l5044:
  1995                           
  1996                           ; Switch size 1, requested type "simple"
  1997                           ; Number of cases is 1, Range of values is 0 to 0
  1998                           ; switch strategies available:
  1999                           ; Name         Instructions Cycles
  2000                           ; simple_byte            4     3 (average)
  2001                           ;	Chosen strategy is simple_byte
  2002  001142  503E               	movf	??_leftTurnButton^0,w,c
  2003  001144  0A00               	xorlw	0	; case 0
  2004  001146  B4D8               	btfsc	status,2,c
  2005  001148  EF6E  F008         	goto	l4498
  2006  00114C  EFC5  F008         	goto	l746
  2007  001150                     l4508:
  2008  001150  B080               	btfsc	128,0,c	;volatile
  2009  001152  EFAD  F008         	goto	u1271
  2010  001156  EFB0  F008         	goto	u1270
  2011  00115A                     u1271:
  2012  00115A  0E01               	movlw	1
  2013  00115C  EFB1  F008         	goto	u1280
  2014  001160                     u1270:
  2015  001160  0E00               	movlw	0
  2016  001162                     u1280:
  2017  001162  6E3E               	movwf	??_leftTurnButton^0,c
  2018  001164  6A3F               	clrf	(??_leftTurnButton+1)^0,c
  2019                           
  2020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2021                           ; Switch size 1, requested type "simple"
  2022                           ; Number of cases is 1, Range of values is 0 to 0
  2023                           ; switch strategies available:
  2024                           ; Name         Instructions Cycles
  2025                           ; simple_byte            4     3 (average)
  2026                           ;	Chosen strategy is simple_byte
  2027  001166  503F               	movf	(??_leftTurnButton+1)^0,w,c
  2028  001168  0A00               	xorlw	0	; case 0
  2029  00116A  B4D8               	btfsc	status,2,c
  2030  00116C  EFBA  F008         	goto	l5046
  2031  001170  EFC5  F008         	goto	l746
  2032  001174                     l5046:
  2033                           
  2034                           ; Switch size 1, requested type "simple"
  2035                           ; Number of cases is 2, Range of values is 0 to 1
  2036                           ; switch strategies available:
  2037                           ; Name         Instructions Cycles
  2038                           ; simple_byte            7     4 (average)
  2039                           ;	Chosen strategy is simple_byte
  2040  001174  503E               	movf	??_leftTurnButton^0,w,c
  2041  001176  0A00               	xorlw	0	; case 0
  2042  001178  B4D8               	btfsc	status,2,c
  2043  00117A  EF50  F008         	goto	l4490
  2044  00117E  0A01               	xorlw	1	; case 1
  2045  001180  B4D8               	btfsc	status,2,c
  2046  001182  EF92  F008         	goto	l4504
  2047  001186  EFC5  F008         	goto	l746
  2048  00118A                     l746:
  2049  00118A  0012               	return		;funcret
  2050  00118C                     __end_of_leftTurnButton:
  2051                           	callstack 0
  2052                           
  2053 ;; *************** function _init *****************
  2054 ;; Defined at:
  2055 ;;		line 168 in file "uart_interface.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2073 ;;Total ram usage:        0 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 5
  2076 ;; This function calls:
  2077 ;;		_auxBattConn
  2078 ;;		_batterySOC
  2079 ;;		_batterySOCGraphic
  2080 ;;		_batteryTemp
  2081 ;;		_hazardSignal
  2082 ;;		_leftTurnIndicator
  2083 ;;		_motorControllerTemp
  2084 ;;		_motorSpeed
  2085 ;;		_rightTurnIndicator
  2086 ;;		_warningLED
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text3
  2093  00186C                     __ptext3:
  2094                           	callstack 0
  2095  00186C                     _init:
  2096                           	callstack 25
  2097  00186C                     
  2098                           ;uart_interface.c: 169:     leftTurnIndicator(0);
  2099  00186C  0E00               	movlw	0
  2100  00186E  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  2101  001870  0E00               	movlw	0
  2102  001872  6E3B               	movwf	leftTurnIndicator@value^0,c
  2103  001874  EC6E  F00A         	call	_leftTurnIndicator	;wreg free
  2104                           
  2105                           ;uart_interface.c: 170:     rightTurnIndicator(0);
  2106  001878  0E00               	movlw	0
  2107  00187A  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
  2108  00187C  0E00               	movlw	0
  2109  00187E  6E3B               	movwf	rightTurnIndicator@value^0,c
  2110  001880  EC8A  F009         	call	_rightTurnIndicator	;wreg free
  2111                           
  2112                           ;uart_interface.c: 171:     hazardSignal(0);
  2113  001884  0E00               	movlw	0
  2114  001886  6E3C               	movwf	(hazardSignal@value+1)^0,c
  2115  001888  0E00               	movlw	0
  2116  00188A  6E3B               	movwf	hazardSignal@value^0,c
  2117  00188C  ECBA  F00A         	call	_hazardSignal	;wreg free
  2118                           
  2119                           ;uart_interface.c: 172:     batterySOC(0);
  2120  001890  0E00               	movlw	0
  2121  001892  6E3C               	movwf	(batterySOC@value+1)^0,c
  2122  001894  0E00               	movlw	0
  2123  001896  6E3B               	movwf	batterySOC@value^0,c
  2124  001898  EC9E  F00B         	call	_batterySOC	;wreg free
  2125                           
  2126                           ;uart_interface.c: 173:     batterySOCGraphic(0);
  2127  00189C  0E00               	movlw	0
  2128  00189E  6E3C               	movwf	(batterySOCGraphic@value+1)^0,c
  2129  0018A0  0E00               	movlw	0
  2130  0018A2  6E3B               	movwf	batterySOCGraphic@value^0,c
  2131  0018A4  EC52  F00B         	call	_batterySOCGraphic	;wreg free
  2132                           
  2133                           ;uart_interface.c: 174:     batteryTemp(0);
  2134  0018A8  0E00               	movlw	0
  2135  0018AA  6E3C               	movwf	(batteryTemp@value+1)^0,c
  2136  0018AC  0E00               	movlw	0
  2137  0018AE  6E3B               	movwf	batteryTemp@value^0,c
  2138  0018B0  EC06  F00B         	call	_batteryTemp	;wreg free
  2139                           
  2140                           ;uart_interface.c: 175:     warningLED(0);
  2141  0018B4  0E00               	movlw	0
  2142  0018B6  6E3C               	movwf	(warningLED@value+1)^0,c
  2143  0018B8  0E00               	movlw	0
  2144  0018BA  6E3B               	movwf	warningLED@value^0,c
  2145  0018BC  EC3E  F009         	call	_warningLED	;wreg free
  2146                           
  2147                           ;uart_interface.c: 176:     auxBattConn(0);
  2148  0018C0  0E00               	movlw	0
  2149  0018C2  6E3C               	movwf	(auxBattConn@value+1)^0,c
  2150  0018C4  0E00               	movlw	0
  2151  0018C6  6E3B               	movwf	auxBattConn@value^0,c
  2152  0018C8  ECEA  F00B         	call	_auxBattConn	;wreg free
  2153                           
  2154                           ;uart_interface.c: 177:     motorSpeed(0);
  2155  0018CC  0E00               	movlw	0
  2156  0018CE  6E3C               	movwf	(motorSpeed@value+1)^0,c
  2157  0018D0  0E00               	movlw	0
  2158  0018D2  6E3B               	movwf	motorSpeed@value^0,c
  2159  0018D4  ECD6  F009         	call	_motorSpeed	;wreg free
  2160                           
  2161                           ;uart_interface.c: 178:     motorControllerTemp(0);
  2162  0018D8  0E00               	movlw	0
  2163  0018DA  6E3C               	movwf	(motorControllerTemp@value+1)^0,c
  2164  0018DC  0E00               	movlw	0
  2165  0018DE  6E3B               	movwf	motorControllerTemp@value^0,c
  2166  0018E0  EC22  F00A         	call	_motorControllerTemp	;wreg free
  2167  0018E4  0012               	return		;funcret
  2168  0018E6                     __end_of_init:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _warningLED *****************
  2172 ;; Defined at:
  2173 ;;		line 36 in file "uart_interface.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  value           2    3[COMRAM] int 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  v4              2   12[COMRAM] int 
  2178 ;;  v3              2   10[COMRAM] int 
  2179 ;;  v2              2    8[COMRAM] int 
  2180 ;;  v1              2    0        int 
  2181 ;;  checksum        2    6[COMRAM] int 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;Total ram usage:       11 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 4
  2198 ;; This function calls:
  2199 ;;		_EUSART1_Write
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;;		_init
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text4
  2207  00127C                     __ptext4:
  2208                           	callstack 0
  2209  00127C                     _warningLED:
  2210                           	callstack 26
  2211  00127C  0E00               	movlw	0
  2212  00127E  6E41               	movwf	(warningLED@v2+1)^0,c
  2213  001280  0E2E               	movlw	46
  2214  001282  6E40               	movwf	warningLED@v2^0,c
  2215  001284  0E00               	movlw	0
  2216  001286  6E43               	movwf	(warningLED@v3+1)^0,c
  2217  001288  0E02               	movlw	2
  2218  00128A  6E42               	movwf	warningLED@v3^0,c
  2219  00128C  0E00               	movlw	0
  2220  00128E  6E45               	movwf	(warningLED@v4+1)^0,c
  2221  001290  0E00               	movlw	0
  2222  001292  6E44               	movwf	warningLED@v4^0,c
  2223  001294                     
  2224                           ;uart_interface.c: 38:     int checksum = v1^v2^v3^v4^value;
  2225  001294  0E2D               	movlw	45
  2226  001296  183B               	xorwf	warningLED@value^0,w,c
  2227  001298  6E3E               	movwf	warningLED@checksum^0,c
  2228  00129A  503C               	movf	(warningLED@value+1)^0,w,c
  2229  00129C  6E3F               	movwf	(warningLED@checksum+1)^0,c
  2230  00129E                     
  2231                           ;uart_interface.c: 40:     EUSART1_Write(v1);
  2232  00129E  0E01               	movlw	1
  2233  0012A0  EC4E  F00D         	call	_EUSART1_Write
  2234  0012A4                     
  2235                           ;uart_interface.c: 41:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2236  0012A4  0E41               	movlw	65
  2237  0012A6  6E3D               	movwf	??_warningLED^0,c
  2238  0012A8  0EEE               	movlw	238
  2239  0012AA                     u1847:
  2240  0012AA  2EE8               	decfsz	wreg,f,c
  2241  0012AC  D7FE               	bra	u1847
  2242  0012AE  2E3D               	decfsz	??_warningLED^0,f,c
  2243  0012B0  D7FC               	bra	u1847
  2244  0012B2  D000               	nop2	
  2245  0012B4                     
  2246                           ;uart_interface.c: 42:     EUSART1_Write(v2);
  2247  0012B4  0E2E               	movlw	46
  2248  0012B6  EC4E  F00D         	call	_EUSART1_Write
  2249  0012BA                     
  2250                           ;uart_interface.c: 43:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2251  0012BA  0E41               	movlw	65
  2252  0012BC  6E3D               	movwf	??_warningLED^0,c
  2253  0012BE  0EEE               	movlw	238
  2254  0012C0                     u1857:
  2255  0012C0  2EE8               	decfsz	wreg,f,c
  2256  0012C2  D7FE               	bra	u1857
  2257  0012C4  2E3D               	decfsz	??_warningLED^0,f,c
  2258  0012C6  D7FC               	bra	u1857
  2259  0012C8  D000               	nop2	
  2260  0012CA                     
  2261                           ;uart_interface.c: 44:     EUSART1_Write(v3);
  2262  0012CA  0E02               	movlw	2
  2263  0012CC  EC4E  F00D         	call	_EUSART1_Write
  2264  0012D0                     
  2265                           ;uart_interface.c: 45:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2266  0012D0  0E41               	movlw	65
  2267  0012D2  6E3D               	movwf	??_warningLED^0,c
  2268  0012D4  0EEE               	movlw	238
  2269  0012D6                     u1867:
  2270  0012D6  2EE8               	decfsz	wreg,f,c
  2271  0012D8  D7FE               	bra	u1867
  2272  0012DA  2E3D               	decfsz	??_warningLED^0,f,c
  2273  0012DC  D7FC               	bra	u1867
  2274  0012DE  D000               	nop2	
  2275  0012E0                     
  2276                           ;uart_interface.c: 46:     EUSART1_Write(v4);
  2277  0012E0  0E00               	movlw	0
  2278  0012E2  EC4E  F00D         	call	_EUSART1_Write
  2279  0012E6                     
  2280                           ;uart_interface.c: 47:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2281  0012E6  0E41               	movlw	65
  2282  0012E8  6E3D               	movwf	??_warningLED^0,c
  2283  0012EA  0EEE               	movlw	238
  2284  0012EC                     u1877:
  2285  0012EC  2EE8               	decfsz	wreg,f,c
  2286  0012EE  D7FE               	bra	u1877
  2287  0012F0  2E3D               	decfsz	??_warningLED^0,f,c
  2288  0012F2  D7FC               	bra	u1877
  2289  0012F4  D000               	nop2	
  2290  0012F6                     
  2291                           ;uart_interface.c: 48:     EUSART1_Write(value);
  2292  0012F6  503B               	movf	warningLED@value^0,w,c
  2293  0012F8  EC4E  F00D         	call	_EUSART1_Write
  2294  0012FC                     
  2295                           ;uart_interface.c: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2296  0012FC  0E41               	movlw	65
  2297  0012FE  6E3D               	movwf	??_warningLED^0,c
  2298  001300  0EEE               	movlw	238
  2299  001302                     u1887:
  2300  001302  2EE8               	decfsz	wreg,f,c
  2301  001304  D7FE               	bra	u1887
  2302  001306  2E3D               	decfsz	??_warningLED^0,f,c
  2303  001308  D7FC               	bra	u1887
  2304  00130A  D000               	nop2	
  2305  00130C                     
  2306                           ;uart_interface.c: 50:     EUSART1_Write(checksum);
  2307  00130C  503E               	movf	warningLED@checksum^0,w,c
  2308  00130E  EC4E  F00D         	call	_EUSART1_Write
  2309  001312  0012               	return		;funcret
  2310  001314                     __end_of_warningLED:
  2311                           	callstack 0
  2312                           
  2313 ;; *************** function _rightTurnIndicator *****************
  2314 ;; Defined at:
  2315 ;;		line 20 in file "uart_interface.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  value           2    3[COMRAM] int 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  v4              2   12[COMRAM] int 
  2320 ;;  v3              2   10[COMRAM] int 
  2321 ;;  v2              2    8[COMRAM] int 
  2322 ;;  v1              2    0        int 
  2323 ;;  checksum        2    6[COMRAM] int 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2334 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2336 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2337 ;;Total ram usage:       11 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 4
  2340 ;; This function calls:
  2341 ;;		_EUSART1_Write
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;;		_init
  2345 ;;		_rightTurnSignal
  2346 ;;		_hazardTurnSignal
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text5
  2351  001314                     __ptext5:
  2352                           	callstack 0
  2353  001314                     _rightTurnIndicator:
  2354                           	callstack 26
  2355  001314  0E00               	movlw	0
  2356  001316  6E41               	movwf	(rightTurnIndicator@v2+1)^0,c
  2357  001318  0E13               	movlw	19
  2358  00131A  6E40               	movwf	rightTurnIndicator@v2^0,c
  2359  00131C  0E00               	movlw	0
  2360  00131E  6E43               	movwf	(rightTurnIndicator@v3+1)^0,c
  2361  001320  0E01               	movlw	1
  2362  001322  6E42               	movwf	rightTurnIndicator@v3^0,c
  2363  001324  0E00               	movlw	0
  2364  001326  6E45               	movwf	(rightTurnIndicator@v4+1)^0,c
  2365  001328  0E00               	movlw	0
  2366  00132A  6E44               	movwf	rightTurnIndicator@v4^0,c
  2367  00132C                     
  2368                           ;uart_interface.c: 22:     int checksum = v1^v2^v3^v4^value;
  2369  00132C  0E13               	movlw	19
  2370  00132E  183B               	xorwf	rightTurnIndicator@value^0,w,c
  2371  001330  6E3E               	movwf	rightTurnIndicator@checksum^0,c
  2372  001332  503C               	movf	(rightTurnIndicator@value+1)^0,w,c
  2373  001334  6E3F               	movwf	(rightTurnIndicator@checksum+1)^0,c
  2374  001336                     
  2375                           ;uart_interface.c: 24:     EUSART1_Write(v1);
  2376  001336  0E01               	movlw	1
  2377  001338  EC4E  F00D         	call	_EUSART1_Write
  2378  00133C                     
  2379                           ;uart_interface.c: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2380  00133C  0E41               	movlw	65
  2381  00133E  6E3D               	movwf	??_rightTurnIndicator^0,c
  2382  001340  0EEE               	movlw	238
  2383  001342                     u1897:
  2384  001342  2EE8               	decfsz	wreg,f,c
  2385  001344  D7FE               	bra	u1897
  2386  001346  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2387  001348  D7FC               	bra	u1897
  2388  00134A  D000               	nop2	
  2389  00134C                     
  2390                           ;uart_interface.c: 26:     EUSART1_Write(v2);
  2391  00134C  0E13               	movlw	19
  2392  00134E  EC4E  F00D         	call	_EUSART1_Write
  2393  001352                     
  2394                           ;uart_interface.c: 27:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2395  001352  0E41               	movlw	65
  2396  001354  6E3D               	movwf	??_rightTurnIndicator^0,c
  2397  001356  0EEE               	movlw	238
  2398  001358                     u1907:
  2399  001358  2EE8               	decfsz	wreg,f,c
  2400  00135A  D7FE               	bra	u1907
  2401  00135C  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2402  00135E  D7FC               	bra	u1907
  2403  001360  D000               	nop2	
  2404  001362                     
  2405                           ;uart_interface.c: 28:     EUSART1_Write(v3);
  2406  001362  0E01               	movlw	1
  2407  001364  EC4E  F00D         	call	_EUSART1_Write
  2408  001368                     
  2409                           ;uart_interface.c: 29:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2410  001368  0E41               	movlw	65
  2411  00136A  6E3D               	movwf	??_rightTurnIndicator^0,c
  2412  00136C  0EEE               	movlw	238
  2413  00136E                     u1917:
  2414  00136E  2EE8               	decfsz	wreg,f,c
  2415  001370  D7FE               	bra	u1917
  2416  001372  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2417  001374  D7FC               	bra	u1917
  2418  001376  D000               	nop2	
  2419  001378                     
  2420                           ;uart_interface.c: 30:     EUSART1_Write(v4);
  2421  001378  0E00               	movlw	0
  2422  00137A  EC4E  F00D         	call	_EUSART1_Write
  2423  00137E                     
  2424                           ;uart_interface.c: 31:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2425  00137E  0E41               	movlw	65
  2426  001380  6E3D               	movwf	??_rightTurnIndicator^0,c
  2427  001382  0EEE               	movlw	238
  2428  001384                     u1927:
  2429  001384  2EE8               	decfsz	wreg,f,c
  2430  001386  D7FE               	bra	u1927
  2431  001388  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2432  00138A  D7FC               	bra	u1927
  2433  00138C  D000               	nop2	
  2434  00138E                     
  2435                           ;uart_interface.c: 32:     EUSART1_Write(value);
  2436  00138E  503B               	movf	rightTurnIndicator@value^0,w,c
  2437  001390  EC4E  F00D         	call	_EUSART1_Write
  2438  001394                     
  2439                           ;uart_interface.c: 33:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2440  001394  0E41               	movlw	65
  2441  001396  6E3D               	movwf	??_rightTurnIndicator^0,c
  2442  001398  0EEE               	movlw	238
  2443  00139A                     u1937:
  2444  00139A  2EE8               	decfsz	wreg,f,c
  2445  00139C  D7FE               	bra	u1937
  2446  00139E  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2447  0013A0  D7FC               	bra	u1937
  2448  0013A2  D000               	nop2	
  2449  0013A4                     
  2450                           ;uart_interface.c: 34:     EUSART1_Write(checksum);
  2451  0013A4  503E               	movf	rightTurnIndicator@checksum^0,w,c
  2452  0013A6  EC4E  F00D         	call	_EUSART1_Write
  2453  0013AA  0012               	return		;funcret
  2454  0013AC                     __end_of_rightTurnIndicator:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _motorSpeed *****************
  2458 ;; Defined at:
  2459 ;;		line 68 in file "uart_interface.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  value           2    3[COMRAM] int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  v4              2   12[COMRAM] int 
  2464 ;;  v3              2   10[COMRAM] int 
  2465 ;;  v2              2    8[COMRAM] int 
  2466 ;;  v1              2    0        int 
  2467 ;;  checksum        2    6[COMRAM] int 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2480 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;Total ram usage:       11 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 4
  2484 ;; This function calls:
  2485 ;;		_EUSART1_Write
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;;		_init
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text6
  2493  0013AC                     __ptext6:
  2494                           	callstack 0
  2495  0013AC                     _motorSpeed:
  2496                           	callstack 26
  2497  0013AC  0E00               	movlw	0
  2498  0013AE  6E41               	movwf	(motorSpeed@v2+1)^0,c
  2499  0013B0  0E0F               	movlw	15
  2500  0013B2  6E40               	movwf	motorSpeed@v2^0,c
  2501  0013B4  0E00               	movlw	0
  2502  0013B6  6E43               	movwf	(motorSpeed@v3+1)^0,c
  2503  0013B8  0E00               	movlw	0
  2504  0013BA  6E42               	movwf	motorSpeed@v3^0,c
  2505  0013BC  0E00               	movlw	0
  2506  0013BE  6E45               	movwf	(motorSpeed@v4+1)^0,c
  2507  0013C0  0E00               	movlw	0
  2508  0013C2  6E44               	movwf	motorSpeed@v4^0,c
  2509  0013C4                     
  2510                           ;uart_interface.c: 73:     int checksum = v1^v2^v3^v4^value;
  2511  0013C4  0E0E               	movlw	14
  2512  0013C6  183B               	xorwf	motorSpeed@value^0,w,c
  2513  0013C8  6E3E               	movwf	motorSpeed@checksum^0,c
  2514  0013CA  503C               	movf	(motorSpeed@value+1)^0,w,c
  2515  0013CC  6E3F               	movwf	(motorSpeed@checksum+1)^0,c
  2516  0013CE                     
  2517                           ;uart_interface.c: 75:     EUSART1_Write(v1);
  2518  0013CE  0E01               	movlw	1
  2519  0013D0  EC4E  F00D         	call	_EUSART1_Write
  2520  0013D4                     
  2521                           ;uart_interface.c: 76:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2522  0013D4  0E41               	movlw	65
  2523  0013D6  6E3D               	movwf	??_motorSpeed^0,c
  2524  0013D8  0EEE               	movlw	238
  2525  0013DA                     u1947:
  2526  0013DA  2EE8               	decfsz	wreg,f,c
  2527  0013DC  D7FE               	bra	u1947
  2528  0013DE  2E3D               	decfsz	??_motorSpeed^0,f,c
  2529  0013E0  D7FC               	bra	u1947
  2530  0013E2  D000               	nop2	
  2531  0013E4                     
  2532                           ;uart_interface.c: 77:     EUSART1_Write(v2);
  2533  0013E4  0E0F               	movlw	15
  2534  0013E6  EC4E  F00D         	call	_EUSART1_Write
  2535  0013EA                     
  2536                           ;uart_interface.c: 78:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2537  0013EA  0E41               	movlw	65
  2538  0013EC  6E3D               	movwf	??_motorSpeed^0,c
  2539  0013EE  0EEE               	movlw	238
  2540  0013F0                     u1957:
  2541  0013F0  2EE8               	decfsz	wreg,f,c
  2542  0013F2  D7FE               	bra	u1957
  2543  0013F4  2E3D               	decfsz	??_motorSpeed^0,f,c
  2544  0013F6  D7FC               	bra	u1957
  2545  0013F8  D000               	nop2	
  2546  0013FA                     
  2547                           ;uart_interface.c: 79:     EUSART1_Write(v3);
  2548  0013FA  0E00               	movlw	0
  2549  0013FC  EC4E  F00D         	call	_EUSART1_Write
  2550  001400                     
  2551                           ;uart_interface.c: 80:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2552  001400  0E41               	movlw	65
  2553  001402  6E3D               	movwf	??_motorSpeed^0,c
  2554  001404  0EEE               	movlw	238
  2555  001406                     u1967:
  2556  001406  2EE8               	decfsz	wreg,f,c
  2557  001408  D7FE               	bra	u1967
  2558  00140A  2E3D               	decfsz	??_motorSpeed^0,f,c
  2559  00140C  D7FC               	bra	u1967
  2560  00140E  D000               	nop2	
  2561  001410                     
  2562                           ;uart_interface.c: 81:     EUSART1_Write(v4);
  2563  001410  0E00               	movlw	0
  2564  001412  EC4E  F00D         	call	_EUSART1_Write
  2565  001416                     
  2566                           ;uart_interface.c: 82:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2567  001416  0E41               	movlw	65
  2568  001418  6E3D               	movwf	??_motorSpeed^0,c
  2569  00141A  0EEE               	movlw	238
  2570  00141C                     u1977:
  2571  00141C  2EE8               	decfsz	wreg,f,c
  2572  00141E  D7FE               	bra	u1977
  2573  001420  2E3D               	decfsz	??_motorSpeed^0,f,c
  2574  001422  D7FC               	bra	u1977
  2575  001424  D000               	nop2	
  2576  001426                     
  2577                           ;uart_interface.c: 83:     EUSART1_Write(value);
  2578  001426  503B               	movf	motorSpeed@value^0,w,c
  2579  001428  EC4E  F00D         	call	_EUSART1_Write
  2580  00142C                     
  2581                           ;uart_interface.c: 84:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2582  00142C  0E41               	movlw	65
  2583  00142E  6E3D               	movwf	??_motorSpeed^0,c
  2584  001430  0EEE               	movlw	238
  2585  001432                     u1987:
  2586  001432  2EE8               	decfsz	wreg,f,c
  2587  001434  D7FE               	bra	u1987
  2588  001436  2E3D               	decfsz	??_motorSpeed^0,f,c
  2589  001438  D7FC               	bra	u1987
  2590  00143A  D000               	nop2	
  2591  00143C                     
  2592                           ;uart_interface.c: 85:     EUSART1_Write(checksum);
  2593  00143C  503E               	movf	motorSpeed@checksum^0,w,c
  2594  00143E  EC4E  F00D         	call	_EUSART1_Write
  2595  001442  0012               	return		;funcret
  2596  001444                     __end_of_motorSpeed:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function _motorControllerTemp *****************
  2600 ;; Defined at:
  2601 ;;		line 87 in file "uart_interface.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  value           2    3[COMRAM] int 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  v4              2   12[COMRAM] int 
  2606 ;;  v3              2   10[COMRAM] int 
  2607 ;;  v2              2    8[COMRAM] int 
  2608 ;;  v1              2    0        int 
  2609 ;;  checksum        2    6[COMRAM] int 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;Total ram usage:       11 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 4
  2626 ;; This function calls:
  2627 ;;		_EUSART1_Write
  2628 ;; This function is called by:
  2629 ;;		_init
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text7
  2634  001444                     __ptext7:
  2635                           	callstack 0
  2636  001444                     _motorControllerTemp:
  2637                           	callstack 25
  2638  001444  0E00               	movlw	0
  2639  001446  6E41               	movwf	(motorControllerTemp@v2+1)^0,c
  2640  001448  0E0F               	movlw	15
  2641  00144A  6E40               	movwf	motorControllerTemp@v2^0,c
  2642  00144C  0E00               	movlw	0
  2643  00144E  6E43               	movwf	(motorControllerTemp@v3+1)^0,c
  2644  001450  0E01               	movlw	1
  2645  001452  6E42               	movwf	motorControllerTemp@v3^0,c
  2646  001454  0E00               	movlw	0
  2647  001456  6E45               	movwf	(motorControllerTemp@v4+1)^0,c
  2648  001458  0E00               	movlw	0
  2649  00145A  6E44               	movwf	motorControllerTemp@v4^0,c
  2650  00145C                     
  2651                           ;uart_interface.c: 89:     int checksum = v1^v2^v3^v4^value;
  2652  00145C  0E0F               	movlw	15
  2653  00145E  183B               	xorwf	motorControllerTemp@value^0,w,c
  2654  001460  6E3E               	movwf	motorControllerTemp@checksum^0,c
  2655  001462  503C               	movf	(motorControllerTemp@value+1)^0,w,c
  2656  001464  6E3F               	movwf	(motorControllerTemp@checksum+1)^0,c
  2657  001466                     
  2658                           ;uart_interface.c: 91:     EUSART1_Write(v1);
  2659  001466  0E01               	movlw	1
  2660  001468  EC4E  F00D         	call	_EUSART1_Write
  2661  00146C                     
  2662                           ;uart_interface.c: 92:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2663  00146C  0E41               	movlw	65
  2664  00146E  6E3D               	movwf	??_motorControllerTemp^0,c
  2665  001470  0EEE               	movlw	238
  2666  001472                     u1997:
  2667  001472  2EE8               	decfsz	wreg,f,c
  2668  001474  D7FE               	bra	u1997
  2669  001476  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2670  001478  D7FC               	bra	u1997
  2671  00147A  D000               	nop2	
  2672  00147C                     
  2673                           ;uart_interface.c: 93:     EUSART1_Write(v2);
  2674  00147C  0E0F               	movlw	15
  2675  00147E  EC4E  F00D         	call	_EUSART1_Write
  2676  001482                     
  2677                           ;uart_interface.c: 94:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2678  001482  0E41               	movlw	65
  2679  001484  6E3D               	movwf	??_motorControllerTemp^0,c
  2680  001486  0EEE               	movlw	238
  2681  001488                     u2007:
  2682  001488  2EE8               	decfsz	wreg,f,c
  2683  00148A  D7FE               	bra	u2007
  2684  00148C  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2685  00148E  D7FC               	bra	u2007
  2686  001490  D000               	nop2	
  2687  001492                     
  2688                           ;uart_interface.c: 95:     EUSART1_Write(v3);
  2689  001492  0E01               	movlw	1
  2690  001494  EC4E  F00D         	call	_EUSART1_Write
  2691  001498                     
  2692                           ;uart_interface.c: 96:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2693  001498  0E41               	movlw	65
  2694  00149A  6E3D               	movwf	??_motorControllerTemp^0,c
  2695  00149C  0EEE               	movlw	238
  2696  00149E                     u2017:
  2697  00149E  2EE8               	decfsz	wreg,f,c
  2698  0014A0  D7FE               	bra	u2017
  2699  0014A2  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2700  0014A4  D7FC               	bra	u2017
  2701  0014A6  D000               	nop2	
  2702  0014A8                     
  2703                           ;uart_interface.c: 97:     EUSART1_Write(v4);
  2704  0014A8  0E00               	movlw	0
  2705  0014AA  EC4E  F00D         	call	_EUSART1_Write
  2706  0014AE                     
  2707                           ;uart_interface.c: 98:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2708  0014AE  0E41               	movlw	65
  2709  0014B0  6E3D               	movwf	??_motorControllerTemp^0,c
  2710  0014B2  0EEE               	movlw	238
  2711  0014B4                     u2027:
  2712  0014B4  2EE8               	decfsz	wreg,f,c
  2713  0014B6  D7FE               	bra	u2027
  2714  0014B8  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2715  0014BA  D7FC               	bra	u2027
  2716  0014BC  D000               	nop2	
  2717  0014BE                     
  2718                           ;uart_interface.c: 99:     EUSART1_Write(value);
  2719  0014BE  503B               	movf	motorControllerTemp@value^0,w,c
  2720  0014C0  EC4E  F00D         	call	_EUSART1_Write
  2721  0014C4                     
  2722                           ;uart_interface.c: 100:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2723  0014C4  0E41               	movlw	65
  2724  0014C6  6E3D               	movwf	??_motorControllerTemp^0,c
  2725  0014C8  0EEE               	movlw	238
  2726  0014CA                     u2037:
  2727  0014CA  2EE8               	decfsz	wreg,f,c
  2728  0014CC  D7FE               	bra	u2037
  2729  0014CE  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2730  0014D0  D7FC               	bra	u2037
  2731  0014D2  D000               	nop2	
  2732  0014D4                     
  2733                           ;uart_interface.c: 101:     EUSART1_Write(checksum);
  2734  0014D4  503E               	movf	motorControllerTemp@checksum^0,w,c
  2735  0014D6  EC4E  F00D         	call	_EUSART1_Write
  2736  0014DA  0012               	return		;funcret
  2737  0014DC                     __end_of_motorControllerTemp:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _leftTurnIndicator *****************
  2741 ;; Defined at:
  2742 ;;		line 4 in file "uart_interface.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  value           2    3[COMRAM] int 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  v4              2   12[COMRAM] int 
  2747 ;;  v3              2   10[COMRAM] int 
  2748 ;;  v2              2    8[COMRAM] int 
  2749 ;;  v1              2    0        int 
  2750 ;;  checksum        2    6[COMRAM] int 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2761 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2763 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2764 ;;Total ram usage:       11 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 4
  2767 ;; This function calls:
  2768 ;;		_EUSART1_Write
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;;		_init
  2772 ;;		_leftTurnSignal
  2773 ;;		_hazardTurnSignal
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text8
  2778  0014DC                     __ptext8:
  2779                           	callstack 0
  2780  0014DC                     _leftTurnIndicator:
  2781                           	callstack 26
  2782  0014DC  0E00               	movlw	0
  2783  0014DE  6E41               	movwf	(leftTurnIndicator@v2+1)^0,c
  2784  0014E0  0E13               	movlw	19
  2785  0014E2  6E40               	movwf	leftTurnIndicator@v2^0,c
  2786  0014E4  0E00               	movlw	0
  2787  0014E6  6E43               	movwf	(leftTurnIndicator@v3+1)^0,c
  2788  0014E8  0E00               	movlw	0
  2789  0014EA  6E42               	movwf	leftTurnIndicator@v3^0,c
  2790  0014EC  0E00               	movlw	0
  2791  0014EE  6E45               	movwf	(leftTurnIndicator@v4+1)^0,c
  2792  0014F0  0E00               	movlw	0
  2793  0014F2  6E44               	movwf	leftTurnIndicator@v4^0,c
  2794  0014F4                     
  2795                           ;uart_interface.c: 6:     int checksum = v1^v2^v3^v4^value;
  2796  0014F4  0E12               	movlw	18
  2797  0014F6  183B               	xorwf	leftTurnIndicator@value^0,w,c
  2798  0014F8  6E3E               	movwf	leftTurnIndicator@checksum^0,c
  2799  0014FA  503C               	movf	(leftTurnIndicator@value+1)^0,w,c
  2800  0014FC  6E3F               	movwf	(leftTurnIndicator@checksum+1)^0,c
  2801  0014FE                     
  2802                           ;uart_interface.c: 8:     EUSART1_Write(v1);
  2803  0014FE  0E01               	movlw	1
  2804  001500  EC4E  F00D         	call	_EUSART1_Write
  2805  001504                     
  2806                           ;uart_interface.c: 9:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2807  001504  0E41               	movlw	65
  2808  001506  6E3D               	movwf	??_leftTurnIndicator^0,c
  2809  001508  0EEE               	movlw	238
  2810  00150A                     u2047:
  2811  00150A  2EE8               	decfsz	wreg,f,c
  2812  00150C  D7FE               	bra	u2047
  2813  00150E  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2814  001510  D7FC               	bra	u2047
  2815  001512  D000               	nop2	
  2816  001514                     
  2817                           ;uart_interface.c: 10:     EUSART1_Write(v2);
  2818  001514  0E13               	movlw	19
  2819  001516  EC4E  F00D         	call	_EUSART1_Write
  2820  00151A                     
  2821                           ;uart_interface.c: 11:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2822  00151A  0E41               	movlw	65
  2823  00151C  6E3D               	movwf	??_leftTurnIndicator^0,c
  2824  00151E  0EEE               	movlw	238
  2825  001520                     u2057:
  2826  001520  2EE8               	decfsz	wreg,f,c
  2827  001522  D7FE               	bra	u2057
  2828  001524  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2829  001526  D7FC               	bra	u2057
  2830  001528  D000               	nop2	
  2831  00152A                     
  2832                           ;uart_interface.c: 12:     EUSART1_Write(v3);
  2833  00152A  0E00               	movlw	0
  2834  00152C  EC4E  F00D         	call	_EUSART1_Write
  2835  001530                     
  2836                           ;uart_interface.c: 13:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2837  001530  0E41               	movlw	65
  2838  001532  6E3D               	movwf	??_leftTurnIndicator^0,c
  2839  001534  0EEE               	movlw	238
  2840  001536                     u2067:
  2841  001536  2EE8               	decfsz	wreg,f,c
  2842  001538  D7FE               	bra	u2067
  2843  00153A  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2844  00153C  D7FC               	bra	u2067
  2845  00153E  D000               	nop2	
  2846  001540                     
  2847                           ;uart_interface.c: 14:     EUSART1_Write(v4);
  2848  001540  0E00               	movlw	0
  2849  001542  EC4E  F00D         	call	_EUSART1_Write
  2850  001546                     
  2851                           ;uart_interface.c: 15:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2852  001546  0E41               	movlw	65
  2853  001548  6E3D               	movwf	??_leftTurnIndicator^0,c
  2854  00154A  0EEE               	movlw	238
  2855  00154C                     u2077:
  2856  00154C  2EE8               	decfsz	wreg,f,c
  2857  00154E  D7FE               	bra	u2077
  2858  001550  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2859  001552  D7FC               	bra	u2077
  2860  001554  D000               	nop2	
  2861  001556                     
  2862                           ;uart_interface.c: 16:     EUSART1_Write(value);
  2863  001556  503B               	movf	leftTurnIndicator@value^0,w,c
  2864  001558  EC4E  F00D         	call	_EUSART1_Write
  2865  00155C                     
  2866                           ;uart_interface.c: 17:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2867  00155C  0E41               	movlw	65
  2868  00155E  6E3D               	movwf	??_leftTurnIndicator^0,c
  2869  001560  0EEE               	movlw	238
  2870  001562                     u2087:
  2871  001562  2EE8               	decfsz	wreg,f,c
  2872  001564  D7FE               	bra	u2087
  2873  001566  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2874  001568  D7FC               	bra	u2087
  2875  00156A  D000               	nop2	
  2876  00156C                     
  2877                           ;uart_interface.c: 18:     EUSART1_Write(checksum);
  2878  00156C  503E               	movf	leftTurnIndicator@checksum^0,w,c
  2879  00156E  EC4E  F00D         	call	_EUSART1_Write
  2880  001572  0012               	return		;funcret
  2881  001574                     __end_of_leftTurnIndicator:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _hazardSignal *****************
  2885 ;; Defined at:
  2886 ;;		line 119 in file "uart_interface.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  value           2    3[COMRAM] int 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  v4              2   12[COMRAM] int 
  2891 ;;  v3              2   10[COMRAM] int 
  2892 ;;  v2              2    8[COMRAM] int 
  2893 ;;  v1              2    0        int 
  2894 ;;  checksum        2    6[COMRAM] int 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2907 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;Total ram usage:       11 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 4
  2911 ;; This function calls:
  2912 ;;		_EUSART1_Write
  2913 ;; This function is called by:
  2914 ;;		_main
  2915 ;;		_init
  2916 ;;		_hazardTurnSignal
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text9
  2921  001574                     __ptext9:
  2922                           	callstack 0
  2923  001574                     _hazardSignal:
  2924                           	callstack 25
  2925  001574  0E00               	movlw	0
  2926  001576  6E41               	movwf	(hazardSignal@v2+1)^0,c
  2927  001578  0E13               	movlw	19
  2928  00157A  6E40               	movwf	hazardSignal@v2^0,c
  2929  00157C  0E00               	movlw	0
  2930  00157E  6E43               	movwf	(hazardSignal@v3+1)^0,c
  2931  001580  0E02               	movlw	2
  2932  001582  6E42               	movwf	hazardSignal@v3^0,c
  2933  001584  0E00               	movlw	0
  2934  001586  6E45               	movwf	(hazardSignal@v4+1)^0,c
  2935  001588  0E00               	movlw	0
  2936  00158A  6E44               	movwf	hazardSignal@v4^0,c
  2937  00158C                     
  2938                           ;uart_interface.c: 121:     int checksum = v1^v2^v3^v4^value;
  2939  00158C  0E10               	movlw	16
  2940  00158E  183B               	xorwf	hazardSignal@value^0,w,c
  2941  001590  6E3E               	movwf	hazardSignal@checksum^0,c
  2942  001592  503C               	movf	(hazardSignal@value+1)^0,w,c
  2943  001594  6E3F               	movwf	(hazardSignal@checksum+1)^0,c
  2944  001596                     
  2945                           ;uart_interface.c: 123:     EUSART1_Write(v1);
  2946  001596  0E01               	movlw	1
  2947  001598  EC4E  F00D         	call	_EUSART1_Write
  2948  00159C                     
  2949                           ;uart_interface.c: 124:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2950  00159C  0E41               	movlw	65
  2951  00159E  6E3D               	movwf	??_hazardSignal^0,c
  2952  0015A0  0EEE               	movlw	238
  2953  0015A2                     u2097:
  2954  0015A2  2EE8               	decfsz	wreg,f,c
  2955  0015A4  D7FE               	bra	u2097
  2956  0015A6  2E3D               	decfsz	??_hazardSignal^0,f,c
  2957  0015A8  D7FC               	bra	u2097
  2958  0015AA  D000               	nop2	
  2959  0015AC                     
  2960                           ;uart_interface.c: 125:     EUSART1_Write(v2);
  2961  0015AC  0E13               	movlw	19
  2962  0015AE  EC4E  F00D         	call	_EUSART1_Write
  2963  0015B2                     
  2964                           ;uart_interface.c: 126:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2965  0015B2  0E41               	movlw	65
  2966  0015B4  6E3D               	movwf	??_hazardSignal^0,c
  2967  0015B6  0EEE               	movlw	238
  2968  0015B8                     u2107:
  2969  0015B8  2EE8               	decfsz	wreg,f,c
  2970  0015BA  D7FE               	bra	u2107
  2971  0015BC  2E3D               	decfsz	??_hazardSignal^0,f,c
  2972  0015BE  D7FC               	bra	u2107
  2973  0015C0  D000               	nop2	
  2974  0015C2                     
  2975                           ;uart_interface.c: 127:     EUSART1_Write(v3);
  2976  0015C2  0E02               	movlw	2
  2977  0015C4  EC4E  F00D         	call	_EUSART1_Write
  2978  0015C8                     
  2979                           ;uart_interface.c: 128:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2980  0015C8  0E41               	movlw	65
  2981  0015CA  6E3D               	movwf	??_hazardSignal^0,c
  2982  0015CC  0EEE               	movlw	238
  2983  0015CE                     u2117:
  2984  0015CE  2EE8               	decfsz	wreg,f,c
  2985  0015D0  D7FE               	bra	u2117
  2986  0015D2  2E3D               	decfsz	??_hazardSignal^0,f,c
  2987  0015D4  D7FC               	bra	u2117
  2988  0015D6  D000               	nop2	
  2989  0015D8                     
  2990                           ;uart_interface.c: 129:     EUSART1_Write(v4);
  2991  0015D8  0E00               	movlw	0
  2992  0015DA  EC4E  F00D         	call	_EUSART1_Write
  2993  0015DE                     
  2994                           ;uart_interface.c: 130:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2995  0015DE  0E41               	movlw	65
  2996  0015E0  6E3D               	movwf	??_hazardSignal^0,c
  2997  0015E2  0EEE               	movlw	238
  2998  0015E4                     u2127:
  2999  0015E4  2EE8               	decfsz	wreg,f,c
  3000  0015E6  D7FE               	bra	u2127
  3001  0015E8  2E3D               	decfsz	??_hazardSignal^0,f,c
  3002  0015EA  D7FC               	bra	u2127
  3003  0015EC  D000               	nop2	
  3004  0015EE                     
  3005                           ;uart_interface.c: 131:     EUSART1_Write(value);
  3006  0015EE  503B               	movf	hazardSignal@value^0,w,c
  3007  0015F0  EC4E  F00D         	call	_EUSART1_Write
  3008  0015F4                     
  3009                           ;uart_interface.c: 132:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3010  0015F4  0E41               	movlw	65
  3011  0015F6  6E3D               	movwf	??_hazardSignal^0,c
  3012  0015F8  0EEE               	movlw	238
  3013  0015FA                     u2137:
  3014  0015FA  2EE8               	decfsz	wreg,f,c
  3015  0015FC  D7FE               	bra	u2137
  3016  0015FE  2E3D               	decfsz	??_hazardSignal^0,f,c
  3017  001600  D7FC               	bra	u2137
  3018  001602  D000               	nop2	
  3019  001604                     
  3020                           ;uart_interface.c: 133:     EUSART1_Write(checksum);
  3021  001604  503E               	movf	hazardSignal@checksum^0,w,c
  3022  001606  EC4E  F00D         	call	_EUSART1_Write
  3023  00160A  0012               	return		;funcret
  3024  00160C                     __end_of_hazardSignal:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _batteryTemp *****************
  3028 ;; Defined at:
  3029 ;;		line 103 in file "uart_interface.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  value           2    3[COMRAM] int 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  v4              2   12[COMRAM] int 
  3034 ;;  v3              2   10[COMRAM] int 
  3035 ;;  v2              2    8[COMRAM] int 
  3036 ;;  v1              2    0        int 
  3037 ;;  checksum        2    6[COMRAM] int 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3048 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3050 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3051 ;;Total ram usage:       11 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 4
  3054 ;; This function calls:
  3055 ;;		_EUSART1_Write
  3056 ;; This function is called by:
  3057 ;;		_init
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text10
  3062  00160C                     __ptext10:
  3063                           	callstack 0
  3064  00160C                     _batteryTemp:
  3065                           	callstack 25
  3066  00160C  0E00               	movlw	0
  3067  00160E  6E41               	movwf	(batteryTemp@v2+1)^0,c
  3068  001610  0E0F               	movlw	15
  3069  001612  6E40               	movwf	batteryTemp@v2^0,c
  3070  001614  0E00               	movlw	0
  3071  001616  6E43               	movwf	(batteryTemp@v3+1)^0,c
  3072  001618  0E02               	movlw	2
  3073  00161A  6E42               	movwf	batteryTemp@v3^0,c
  3074  00161C  0E00               	movlw	0
  3075  00161E  6E45               	movwf	(batteryTemp@v4+1)^0,c
  3076  001620  0E00               	movlw	0
  3077  001622  6E44               	movwf	batteryTemp@v4^0,c
  3078  001624                     
  3079                           ;uart_interface.c: 105:     int checksum = v1^v2^v3^v4^value;
  3080  001624  0E0C               	movlw	12
  3081  001626  183B               	xorwf	batteryTemp@value^0,w,c
  3082  001628  6E3E               	movwf	batteryTemp@checksum^0,c
  3083  00162A  503C               	movf	(batteryTemp@value+1)^0,w,c
  3084  00162C  6E3F               	movwf	(batteryTemp@checksum+1)^0,c
  3085  00162E                     
  3086                           ;uart_interface.c: 107:     EUSART1_Write(v1);
  3087  00162E  0E01               	movlw	1
  3088  001630  EC4E  F00D         	call	_EUSART1_Write
  3089  001634                     
  3090                           ;uart_interface.c: 108:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3091  001634  0E41               	movlw	65
  3092  001636  6E3D               	movwf	??_batteryTemp^0,c
  3093  001638  0EEE               	movlw	238
  3094  00163A                     u2147:
  3095  00163A  2EE8               	decfsz	wreg,f,c
  3096  00163C  D7FE               	bra	u2147
  3097  00163E  2E3D               	decfsz	??_batteryTemp^0,f,c
  3098  001640  D7FC               	bra	u2147
  3099  001642  D000               	nop2	
  3100  001644                     
  3101                           ;uart_interface.c: 109:     EUSART1_Write(v2);
  3102  001644  0E0F               	movlw	15
  3103  001646  EC4E  F00D         	call	_EUSART1_Write
  3104  00164A                     
  3105                           ;uart_interface.c: 110:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3106  00164A  0E41               	movlw	65
  3107  00164C  6E3D               	movwf	??_batteryTemp^0,c
  3108  00164E  0EEE               	movlw	238
  3109  001650                     u2157:
  3110  001650  2EE8               	decfsz	wreg,f,c
  3111  001652  D7FE               	bra	u2157
  3112  001654  2E3D               	decfsz	??_batteryTemp^0,f,c
  3113  001656  D7FC               	bra	u2157
  3114  001658  D000               	nop2	
  3115  00165A                     
  3116                           ;uart_interface.c: 111:     EUSART1_Write(v3);
  3117  00165A  0E02               	movlw	2
  3118  00165C  EC4E  F00D         	call	_EUSART1_Write
  3119  001660                     
  3120                           ;uart_interface.c: 112:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3121  001660  0E41               	movlw	65
  3122  001662  6E3D               	movwf	??_batteryTemp^0,c
  3123  001664  0EEE               	movlw	238
  3124  001666                     u2167:
  3125  001666  2EE8               	decfsz	wreg,f,c
  3126  001668  D7FE               	bra	u2167
  3127  00166A  2E3D               	decfsz	??_batteryTemp^0,f,c
  3128  00166C  D7FC               	bra	u2167
  3129  00166E  D000               	nop2	
  3130  001670                     
  3131                           ;uart_interface.c: 113:     EUSART1_Write(v4);
  3132  001670  0E00               	movlw	0
  3133  001672  EC4E  F00D         	call	_EUSART1_Write
  3134  001676                     
  3135                           ;uart_interface.c: 114:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3136  001676  0E41               	movlw	65
  3137  001678  6E3D               	movwf	??_batteryTemp^0,c
  3138  00167A  0EEE               	movlw	238
  3139  00167C                     u2177:
  3140  00167C  2EE8               	decfsz	wreg,f,c
  3141  00167E  D7FE               	bra	u2177
  3142  001680  2E3D               	decfsz	??_batteryTemp^0,f,c
  3143  001682  D7FC               	bra	u2177
  3144  001684  D000               	nop2	
  3145  001686                     
  3146                           ;uart_interface.c: 115:     EUSART1_Write(value);
  3147  001686  503B               	movf	batteryTemp@value^0,w,c
  3148  001688  EC4E  F00D         	call	_EUSART1_Write
  3149  00168C                     
  3150                           ;uart_interface.c: 116:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3151  00168C  0E41               	movlw	65
  3152  00168E  6E3D               	movwf	??_batteryTemp^0,c
  3153  001690  0EEE               	movlw	238
  3154  001692                     u2187:
  3155  001692  2EE8               	decfsz	wreg,f,c
  3156  001694  D7FE               	bra	u2187
  3157  001696  2E3D               	decfsz	??_batteryTemp^0,f,c
  3158  001698  D7FC               	bra	u2187
  3159  00169A  D000               	nop2	
  3160  00169C                     
  3161                           ;uart_interface.c: 117:     EUSART1_Write(checksum);
  3162  00169C  503E               	movf	batteryTemp@checksum^0,w,c
  3163  00169E  EC4E  F00D         	call	_EUSART1_Write
  3164  0016A2  0012               	return		;funcret
  3165  0016A4                     __end_of_batteryTemp:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _batterySOCGraphic *****************
  3169 ;; Defined at:
  3170 ;;		line 151 in file "uart_interface.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  value           2    3[COMRAM] int 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  v4              2   12[COMRAM] int 
  3175 ;;  v3              2   10[COMRAM] int 
  3176 ;;  v2              2    8[COMRAM] int 
  3177 ;;  v1              2    0        int 
  3178 ;;  checksum        2    6[COMRAM] int 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3189 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3191 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;Total ram usage:       11 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 4
  3195 ;; This function calls:
  3196 ;;		_EUSART1_Write
  3197 ;; This function is called by:
  3198 ;;		_init
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text11
  3203  0016A4                     __ptext11:
  3204                           	callstack 0
  3205  0016A4                     _batterySOCGraphic:
  3206                           	callstack 25
  3207  0016A4  0E00               	movlw	0
  3208  0016A6  6E41               	movwf	(batterySOCGraphic@v2+1)^0,c
  3209  0016A8  0E0F               	movlw	15
  3210  0016AA  6E40               	movwf	batterySOCGraphic@v2^0,c
  3211  0016AC  0E00               	movlw	0
  3212  0016AE  6E43               	movwf	(batterySOCGraphic@v3+1)^0,c
  3213  0016B0  0E03               	movlw	3
  3214  0016B2  6E42               	movwf	batterySOCGraphic@v3^0,c
  3215  0016B4  0E00               	movlw	0
  3216  0016B6  6E45               	movwf	(batterySOCGraphic@v4+1)^0,c
  3217  0016B8  0E00               	movlw	0
  3218  0016BA  6E44               	movwf	batterySOCGraphic@v4^0,c
  3219  0016BC                     
  3220                           ;uart_interface.c: 153:     int checksum = v1^v2^v3^v4^value;
  3221  0016BC  0E0D               	movlw	13
  3222  0016BE  183B               	xorwf	batterySOCGraphic@value^0,w,c
  3223  0016C0  6E3E               	movwf	batterySOCGraphic@checksum^0,c
  3224  0016C2  503C               	movf	(batterySOCGraphic@value+1)^0,w,c
  3225  0016C4  6E3F               	movwf	(batterySOCGraphic@checksum+1)^0,c
  3226  0016C6                     
  3227                           ;uart_interface.c: 155:     EUSART1_Write(v1);
  3228  0016C6  0E01               	movlw	1
  3229  0016C8  EC4E  F00D         	call	_EUSART1_Write
  3230  0016CC                     
  3231                           ;uart_interface.c: 156:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3232  0016CC  0E41               	movlw	65
  3233  0016CE  6E3D               	movwf	??_batterySOCGraphic^0,c
  3234  0016D0  0EEE               	movlw	238
  3235  0016D2                     u2197:
  3236  0016D2  2EE8               	decfsz	wreg,f,c
  3237  0016D4  D7FE               	bra	u2197
  3238  0016D6  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3239  0016D8  D7FC               	bra	u2197
  3240  0016DA  D000               	nop2	
  3241  0016DC                     
  3242                           ;uart_interface.c: 157:     EUSART1_Write(v2);
  3243  0016DC  0E0F               	movlw	15
  3244  0016DE  EC4E  F00D         	call	_EUSART1_Write
  3245  0016E2                     
  3246                           ;uart_interface.c: 158:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3247  0016E2  0E41               	movlw	65
  3248  0016E4  6E3D               	movwf	??_batterySOCGraphic^0,c
  3249  0016E6  0EEE               	movlw	238
  3250  0016E8                     u2207:
  3251  0016E8  2EE8               	decfsz	wreg,f,c
  3252  0016EA  D7FE               	bra	u2207
  3253  0016EC  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3254  0016EE  D7FC               	bra	u2207
  3255  0016F0  D000               	nop2	
  3256  0016F2                     
  3257                           ;uart_interface.c: 159:     EUSART1_Write(v3);
  3258  0016F2  0E03               	movlw	3
  3259  0016F4  EC4E  F00D         	call	_EUSART1_Write
  3260  0016F8                     
  3261                           ;uart_interface.c: 160:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3262  0016F8  0E41               	movlw	65
  3263  0016FA  6E3D               	movwf	??_batterySOCGraphic^0,c
  3264  0016FC  0EEE               	movlw	238
  3265  0016FE                     u2217:
  3266  0016FE  2EE8               	decfsz	wreg,f,c
  3267  001700  D7FE               	bra	u2217
  3268  001702  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3269  001704  D7FC               	bra	u2217
  3270  001706  D000               	nop2	
  3271  001708                     
  3272                           ;uart_interface.c: 161:     EUSART1_Write(v4);
  3273  001708  0E00               	movlw	0
  3274  00170A  EC4E  F00D         	call	_EUSART1_Write
  3275  00170E                     
  3276                           ;uart_interface.c: 162:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3277  00170E  0E41               	movlw	65
  3278  001710  6E3D               	movwf	??_batterySOCGraphic^0,c
  3279  001712  0EEE               	movlw	238
  3280  001714                     u2227:
  3281  001714  2EE8               	decfsz	wreg,f,c
  3282  001716  D7FE               	bra	u2227
  3283  001718  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3284  00171A  D7FC               	bra	u2227
  3285  00171C  D000               	nop2	
  3286  00171E                     
  3287                           ;uart_interface.c: 163:     EUSART1_Write(value);
  3288  00171E  503B               	movf	batterySOCGraphic@value^0,w,c
  3289  001720  EC4E  F00D         	call	_EUSART1_Write
  3290  001724                     
  3291                           ;uart_interface.c: 164:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3292  001724  0E41               	movlw	65
  3293  001726  6E3D               	movwf	??_batterySOCGraphic^0,c
  3294  001728  0EEE               	movlw	238
  3295  00172A                     u2237:
  3296  00172A  2EE8               	decfsz	wreg,f,c
  3297  00172C  D7FE               	bra	u2237
  3298  00172E  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3299  001730  D7FC               	bra	u2237
  3300  001732  D000               	nop2	
  3301  001734                     
  3302                           ;uart_interface.c: 165:     EUSART1_Write(checksum);
  3303  001734  503E               	movf	batterySOCGraphic@checksum^0,w,c
  3304  001736  EC4E  F00D         	call	_EUSART1_Write
  3305  00173A  0012               	return		;funcret
  3306  00173C                     __end_of_batterySOCGraphic:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _batterySOC *****************
  3310 ;; Defined at:
  3311 ;;		line 135 in file "uart_interface.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  value           2    3[COMRAM] int 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  v4              2   12[COMRAM] int 
  3316 ;;  v3              2   10[COMRAM] int 
  3317 ;;  v2              2    8[COMRAM] int 
  3318 ;;  v1              2    0        int 
  3319 ;;  checksum        2    6[COMRAM] int 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3330 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3333 ;;Total ram usage:       11 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; Hardware stack levels required when called: 4
  3336 ;; This function calls:
  3337 ;;		_EUSART1_Write
  3338 ;; This function is called by:
  3339 ;;		_init
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text12
  3344  00173C                     __ptext12:
  3345                           	callstack 0
  3346  00173C                     _batterySOC:
  3347                           	callstack 25
  3348  00173C  0E00               	movlw	0
  3349  00173E  6E41               	movwf	(batterySOC@v2+1)^0,c
  3350  001740  0E28               	movlw	40
  3351  001742  6E40               	movwf	batterySOC@v2^0,c
  3352  001744  0E00               	movlw	0
  3353  001746  6E43               	movwf	(batterySOC@v3+1)^0,c
  3354  001748  0E01               	movlw	1
  3355  00174A  6E42               	movwf	batterySOC@v3^0,c
  3356  00174C  0E00               	movlw	0
  3357  00174E  6E45               	movwf	(batterySOC@v4+1)^0,c
  3358  001750  0E00               	movlw	0
  3359  001752  6E44               	movwf	batterySOC@v4^0,c
  3360  001754                     
  3361                           ;uart_interface.c: 137:     int checksum = v1^v2^v3^v4^value;
  3362  001754  0E28               	movlw	40
  3363  001756  183B               	xorwf	batterySOC@value^0,w,c
  3364  001758  6E3E               	movwf	batterySOC@checksum^0,c
  3365  00175A  503C               	movf	(batterySOC@value+1)^0,w,c
  3366  00175C  6E3F               	movwf	(batterySOC@checksum+1)^0,c
  3367  00175E                     
  3368                           ;uart_interface.c: 139:     EUSART1_Write(v1);
  3369  00175E  0E01               	movlw	1
  3370  001760  EC4E  F00D         	call	_EUSART1_Write
  3371  001764                     
  3372                           ;uart_interface.c: 140:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3373  001764  0E41               	movlw	65
  3374  001766  6E3D               	movwf	??_batterySOC^0,c
  3375  001768  0EEE               	movlw	238
  3376  00176A                     u2247:
  3377  00176A  2EE8               	decfsz	wreg,f,c
  3378  00176C  D7FE               	bra	u2247
  3379  00176E  2E3D               	decfsz	??_batterySOC^0,f,c
  3380  001770  D7FC               	bra	u2247
  3381  001772  D000               	nop2	
  3382  001774                     
  3383                           ;uart_interface.c: 141:     EUSART1_Write(v2);
  3384  001774  0E28               	movlw	40
  3385  001776  EC4E  F00D         	call	_EUSART1_Write
  3386  00177A                     
  3387                           ;uart_interface.c: 142:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3388  00177A  0E41               	movlw	65
  3389  00177C  6E3D               	movwf	??_batterySOC^0,c
  3390  00177E  0EEE               	movlw	238
  3391  001780                     u2257:
  3392  001780  2EE8               	decfsz	wreg,f,c
  3393  001782  D7FE               	bra	u2257
  3394  001784  2E3D               	decfsz	??_batterySOC^0,f,c
  3395  001786  D7FC               	bra	u2257
  3396  001788  D000               	nop2	
  3397  00178A                     
  3398                           ;uart_interface.c: 143:     EUSART1_Write(v3);
  3399  00178A  0E01               	movlw	1
  3400  00178C  EC4E  F00D         	call	_EUSART1_Write
  3401  001790                     
  3402                           ;uart_interface.c: 144:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3403  001790  0E41               	movlw	65
  3404  001792  6E3D               	movwf	??_batterySOC^0,c
  3405  001794  0EEE               	movlw	238
  3406  001796                     u2267:
  3407  001796  2EE8               	decfsz	wreg,f,c
  3408  001798  D7FE               	bra	u2267
  3409  00179A  2E3D               	decfsz	??_batterySOC^0,f,c
  3410  00179C  D7FC               	bra	u2267
  3411  00179E  D000               	nop2	
  3412  0017A0                     
  3413                           ;uart_interface.c: 145:     EUSART1_Write(v4);
  3414  0017A0  0E00               	movlw	0
  3415  0017A2  EC4E  F00D         	call	_EUSART1_Write
  3416  0017A6                     
  3417                           ;uart_interface.c: 146:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3418  0017A6  0E41               	movlw	65
  3419  0017A8  6E3D               	movwf	??_batterySOC^0,c
  3420  0017AA  0EEE               	movlw	238
  3421  0017AC                     u2277:
  3422  0017AC  2EE8               	decfsz	wreg,f,c
  3423  0017AE  D7FE               	bra	u2277
  3424  0017B0  2E3D               	decfsz	??_batterySOC^0,f,c
  3425  0017B2  D7FC               	bra	u2277
  3426  0017B4  D000               	nop2	
  3427  0017B6                     
  3428                           ;uart_interface.c: 147:     EUSART1_Write(value);
  3429  0017B6  503B               	movf	batterySOC@value^0,w,c
  3430  0017B8  EC4E  F00D         	call	_EUSART1_Write
  3431  0017BC                     
  3432                           ;uart_interface.c: 148:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3433  0017BC  0E41               	movlw	65
  3434  0017BE  6E3D               	movwf	??_batterySOC^0,c
  3435  0017C0  0EEE               	movlw	238
  3436  0017C2                     u2287:
  3437  0017C2  2EE8               	decfsz	wreg,f,c
  3438  0017C4  D7FE               	bra	u2287
  3439  0017C6  2E3D               	decfsz	??_batterySOC^0,f,c
  3440  0017C8  D7FC               	bra	u2287
  3441  0017CA  D000               	nop2	
  3442  0017CC                     
  3443                           ;uart_interface.c: 149:     EUSART1_Write(checksum);
  3444  0017CC  503E               	movf	batterySOC@checksum^0,w,c
  3445  0017CE  EC4E  F00D         	call	_EUSART1_Write
  3446  0017D2  0012               	return		;funcret
  3447  0017D4                     __end_of_batterySOC:
  3448                           	callstack 0
  3449                           
  3450 ;; *************** function _auxBattConn *****************
  3451 ;; Defined at:
  3452 ;;		line 52 in file "uart_interface.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  value           2    3[COMRAM] int 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  v4              2   12[COMRAM] int 
  3457 ;;  v3              2   10[COMRAM] int 
  3458 ;;  v2              2    8[COMRAM] int 
  3459 ;;  v1              2    0        int 
  3460 ;;  checksum        2    6[COMRAM] int 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3471 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;Total ram usage:       11 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 4
  3477 ;; This function calls:
  3478 ;;		_EUSART1_Write
  3479 ;; This function is called by:
  3480 ;;		_main
  3481 ;;		_init
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text13
  3486  0017D4                     __ptext13:
  3487                           	callstack 0
  3488  0017D4                     _auxBattConn:
  3489                           	callstack 25
  3490  0017D4  0E00               	movlw	0
  3491  0017D6  6E41               	movwf	(auxBattConn@v2+1)^0,c
  3492  0017D8  0E2E               	movlw	46
  3493  0017DA  6E40               	movwf	auxBattConn@v2^0,c
  3494  0017DC  0E00               	movlw	0
  3495  0017DE  6E43               	movwf	(auxBattConn@v3+1)^0,c
  3496  0017E0  0E01               	movlw	1
  3497  0017E2  6E42               	movwf	auxBattConn@v3^0,c
  3498  0017E4  0E00               	movlw	0
  3499  0017E6  6E45               	movwf	(auxBattConn@v4+1)^0,c
  3500  0017E8  0E00               	movlw	0
  3501  0017EA  6E44               	movwf	auxBattConn@v4^0,c
  3502  0017EC                     
  3503                           ;uart_interface.c: 54:     int checksum = v1^v2^v3^v4^value;
  3504  0017EC  0E2E               	movlw	46
  3505  0017EE  183B               	xorwf	auxBattConn@value^0,w,c
  3506  0017F0  6E3E               	movwf	auxBattConn@checksum^0,c
  3507  0017F2  503C               	movf	(auxBattConn@value+1)^0,w,c
  3508  0017F4  6E3F               	movwf	(auxBattConn@checksum+1)^0,c
  3509  0017F6                     
  3510                           ;uart_interface.c: 56:     EUSART1_Write(v1);
  3511  0017F6  0E01               	movlw	1
  3512  0017F8  EC4E  F00D         	call	_EUSART1_Write
  3513  0017FC                     
  3514                           ;uart_interface.c: 57:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3515  0017FC  0E41               	movlw	65
  3516  0017FE  6E3D               	movwf	??_auxBattConn^0,c
  3517  001800  0EEE               	movlw	238
  3518  001802                     u2297:
  3519  001802  2EE8               	decfsz	wreg,f,c
  3520  001804  D7FE               	bra	u2297
  3521  001806  2E3D               	decfsz	??_auxBattConn^0,f,c
  3522  001808  D7FC               	bra	u2297
  3523  00180A  D000               	nop2	
  3524  00180C                     
  3525                           ;uart_interface.c: 58:     EUSART1_Write(v2);
  3526  00180C  0E2E               	movlw	46
  3527  00180E  EC4E  F00D         	call	_EUSART1_Write
  3528  001812                     
  3529                           ;uart_interface.c: 59:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3530  001812  0E41               	movlw	65
  3531  001814  6E3D               	movwf	??_auxBattConn^0,c
  3532  001816  0EEE               	movlw	238
  3533  001818                     u2307:
  3534  001818  2EE8               	decfsz	wreg,f,c
  3535  00181A  D7FE               	bra	u2307
  3536  00181C  2E3D               	decfsz	??_auxBattConn^0,f,c
  3537  00181E  D7FC               	bra	u2307
  3538  001820  D000               	nop2	
  3539  001822                     
  3540                           ;uart_interface.c: 60:     EUSART1_Write(v3);
  3541  001822  0E01               	movlw	1
  3542  001824  EC4E  F00D         	call	_EUSART1_Write
  3543  001828                     
  3544                           ;uart_interface.c: 61:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3545  001828  0E41               	movlw	65
  3546  00182A  6E3D               	movwf	??_auxBattConn^0,c
  3547  00182C  0EEE               	movlw	238
  3548  00182E                     u2317:
  3549  00182E  2EE8               	decfsz	wreg,f,c
  3550  001830  D7FE               	bra	u2317
  3551  001832  2E3D               	decfsz	??_auxBattConn^0,f,c
  3552  001834  D7FC               	bra	u2317
  3553  001836  D000               	nop2	
  3554  001838                     
  3555                           ;uart_interface.c: 62:     EUSART1_Write(v4);
  3556  001838  0E00               	movlw	0
  3557  00183A  EC4E  F00D         	call	_EUSART1_Write
  3558  00183E                     
  3559                           ;uart_interface.c: 63:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3560  00183E  0E41               	movlw	65
  3561  001840  6E3D               	movwf	??_auxBattConn^0,c
  3562  001842  0EEE               	movlw	238
  3563  001844                     u2327:
  3564  001844  2EE8               	decfsz	wreg,f,c
  3565  001846  D7FE               	bra	u2327
  3566  001848  2E3D               	decfsz	??_auxBattConn^0,f,c
  3567  00184A  D7FC               	bra	u2327
  3568  00184C  D000               	nop2	
  3569  00184E                     
  3570                           ;uart_interface.c: 64:     EUSART1_Write(value);
  3571  00184E  503B               	movf	auxBattConn@value^0,w,c
  3572  001850  EC4E  F00D         	call	_EUSART1_Write
  3573  001854                     
  3574                           ;uart_interface.c: 65:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3575  001854  0E41               	movlw	65
  3576  001856  6E3D               	movwf	??_auxBattConn^0,c
  3577  001858  0EEE               	movlw	238
  3578  00185A                     u2337:
  3579  00185A  2EE8               	decfsz	wreg,f,c
  3580  00185C  D7FE               	bra	u2337
  3581  00185E  2E3D               	decfsz	??_auxBattConn^0,f,c
  3582  001860  D7FC               	bra	u2337
  3583  001862  D000               	nop2	
  3584  001864                     
  3585                           ;uart_interface.c: 66:     EUSART1_Write(checksum);
  3586  001864  503E               	movf	auxBattConn@checksum^0,w,c
  3587  001866  EC4E  F00D         	call	_EUSART1_Write
  3588  00186A  0012               	return		;funcret
  3589  00186C                     __end_of_auxBattConn:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _EUSART1_Write *****************
  3593 ;; Defined at:
  3594 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  txData          1    wreg     unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  txData          1    2[COMRAM] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3612 ;;Total ram usage:        1 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; Hardware stack levels required when called: 3
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_leftTurnIndicator
  3619 ;;		_rightTurnIndicator
  3620 ;;		_warningLED
  3621 ;;		_auxBattConn
  3622 ;;		_motorSpeed
  3623 ;;		_motorControllerTemp
  3624 ;;		_batteryTemp
  3625 ;;		_hazardSignal
  3626 ;;		_batterySOC
  3627 ;;		_batterySOCGraphic
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text14
  3632  001A9C                     __ptext14:
  3633                           	callstack 0
  3634  001A9C                     _EUSART1_Write:
  3635                           	callstack 26
  3636                           
  3637                           ;incstack = 0
  3638                           ;EUSART1_Write@txData stored from wreg
  3639  001A9C  6E3A               	movwf	EUSART1_Write@txData^0,c
  3640  001A9E                     l67:
  3641                           
  3642                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3643  001A9E  A89E               	btfss	158,4,c	;volatile
  3644  001AA0  EF54  F00D         	goto	u1121
  3645  001AA4  EF56  F00D         	goto	u1120
  3646  001AA8                     u1121:
  3647  001AA8  EF4F  F00D         	goto	l67
  3648  001AAC                     u1120:
  3649  001AAC                     
  3650                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3651  001AAC  C03A  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3652  001AB0  0012               	return		;funcret
  3653  001AB2                     __end_of_EUSART1_Write:
  3654                           	callstack 0
  3655                           
  3656 ;; *************** function _hazardButton *****************
  3657 ;; Defined at:
  3658 ;;		line 58 in file "button_functionality.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  b2FunctionAc    2    2[COMRAM] PTR int 
  3661 ;;		 -> b2FuncActive(2), 
  3662 ;;  b2Latch         2    4[COMRAM] PTR int 
  3663 ;;		 -> latchb2(2), 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3679 ;;Total ram usage:        6 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; Hardware stack levels required when called: 3
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_main
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text15
  3690  00118C                     __ptext15:
  3691                           	callstack 0
  3692  00118C                     _hazardButton:
  3693                           	callstack 27
  3694  00118C                     
  3695                           ;button_functionality.c: 59:     switch (PORTAbits.RA1) {
  3696  00118C  EF20  F009         	goto	l4576
  3697  001190                     l4558:
  3698                           
  3699                           ;button_functionality.c: 61:         *b2Latch = 0;
  3700  001190  C03C  FFD9         	movff	hazardButton@b2Latch,fsr2l
  3701  001194  C03D  FFDA         	movff	hazardButton@b2Latch+1,fsr2h
  3702  001198  0E00               	movlw	0
  3703  00119A  6EDE               	movwf	postinc2,c
  3704  00119C  0E00               	movlw	0
  3705  00119E  6EDD               	movwf	postdec2,c
  3706                           
  3707                           ;button_functionality.c: 62:         break;
  3708  0011A0  EF3D  F009         	goto	l774
  3709  0011A4                     l4560:
  3710                           
  3711                           ;button_functionality.c: 69:                 *b2FunctionActive = 1;
  3712  0011A4  C03A  FFD9         	movff	hazardButton@b2FunctionActive,fsr2l
  3713  0011A8  C03B  FFDA         	movff	hazardButton@b2FunctionActive+1,fsr2h
  3714  0011AC  0E01               	movlw	1
  3715  0011AE  6EDE               	movwf	postinc2,c
  3716  0011B0  0E00               	movlw	0
  3717  0011B2  6EDD               	movwf	postdec2,c
  3718                           
  3719                           ;button_functionality.c: 70:                 break;
  3720  0011B4  EF00  F009         	goto	l4568
  3721  0011B8                     l4562:
  3722                           
  3723                           ;button_functionality.c: 73:                 *b2FunctionActive = 0;
  3724  0011B8  C03A  FFD9         	movff	hazardButton@b2FunctionActive,fsr2l
  3725  0011BC  C03B  FFDA         	movff	hazardButton@b2FunctionActive+1,fsr2h
  3726  0011C0  0E00               	movlw	0
  3727  0011C2  6EDE               	movwf	postinc2,c
  3728  0011C4  0E00               	movlw	0
  3729  0011C6  6EDD               	movwf	postdec2,c
  3730                           
  3731                           ;button_functionality.c: 74:                 break;
  3732  0011C8  EF00  F009         	goto	l4568
  3733  0011CC                     l4566:
  3734  0011CC  C03A  FFD9         	movff	hazardButton@b2FunctionActive,fsr2l
  3735  0011D0  C03B  FFDA         	movff	hazardButton@b2FunctionActive+1,fsr2h
  3736  0011D4  CFDE F03E          	movff	postinc2,??_hazardButton
  3737  0011D8  CFDD F03F          	movff	postdec2,??_hazardButton+1
  3738                           
  3739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3740                           ; Switch size 1, requested type "simple"
  3741                           ; Number of cases is 1, Range of values is 0 to 0
  3742                           ; switch strategies available:
  3743                           ; Name         Instructions Cycles
  3744                           ; simple_byte            4     3 (average)
  3745                           ;	Chosen strategy is simple_byte
  3746  0011DC  503F               	movf	(??_hazardButton+1)^0,w,c
  3747  0011DE  0A00               	xorlw	0	; case 0
  3748  0011E0  B4D8               	btfsc	status,2,c
  3749  0011E2  EFF5  F008         	goto	l5048
  3750  0011E6  EF00  F009         	goto	l4568
  3751  0011EA                     l5048:
  3752                           
  3753                           ; Switch size 1, requested type "simple"
  3754                           ; Number of cases is 2, Range of values is 0 to 1
  3755                           ; switch strategies available:
  3756                           ; Name         Instructions Cycles
  3757                           ; simple_byte            7     4 (average)
  3758                           ;	Chosen strategy is simple_byte
  3759  0011EA  503E               	movf	??_hazardButton^0,w,c
  3760  0011EC  0A00               	xorlw	0	; case 0
  3761  0011EE  B4D8               	btfsc	status,2,c
  3762  0011F0  EFD2  F008         	goto	l4560
  3763  0011F4  0A01               	xorlw	1	; case 1
  3764  0011F6  B4D8               	btfsc	status,2,c
  3765  0011F8  EFDC  F008         	goto	l4562
  3766  0011FC  EF00  F009         	goto	l4568
  3767  001200                     l4568:
  3768                           
  3769                           ;button_functionality.c: 76:             *b2Latch = 1;
  3770  001200  C03C  FFD9         	movff	hazardButton@b2Latch,fsr2l
  3771  001204  C03D  FFDA         	movff	hazardButton@b2Latch+1,fsr2h
  3772  001208  0E01               	movlw	1
  3773  00120A  6EDE               	movwf	postinc2,c
  3774  00120C  0E00               	movlw	0
  3775  00120E  6EDD               	movwf	postdec2,c
  3776                           
  3777                           ;button_functionality.c: 77:             break;
  3778  001210  EF3D  F009         	goto	l774
  3779  001214                     l4572:
  3780  001214  C03C  FFD9         	movff	hazardButton@b2Latch,fsr2l
  3781  001218  C03D  FFDA         	movff	hazardButton@b2Latch+1,fsr2h
  3782  00121C  CFDE F03E          	movff	postinc2,??_hazardButton
  3783  001220  CFDD F03F          	movff	postdec2,??_hazardButton+1
  3784                           
  3785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3786                           ; Switch size 1, requested type "simple"
  3787                           ; Number of cases is 1, Range of values is 0 to 0
  3788                           ; switch strategies available:
  3789                           ; Name         Instructions Cycles
  3790                           ; simple_byte            4     3 (average)
  3791                           ;	Chosen strategy is simple_byte
  3792  001224  503F               	movf	(??_hazardButton+1)^0,w,c
  3793  001226  0A00               	xorlw	0	; case 0
  3794  001228  B4D8               	btfsc	status,2,c
  3795  00122A  EF19  F009         	goto	l5050
  3796  00122E  EF3D  F009         	goto	l774
  3797  001232                     l5050:
  3798                           
  3799                           ; Switch size 1, requested type "simple"
  3800                           ; Number of cases is 1, Range of values is 0 to 0
  3801                           ; switch strategies available:
  3802                           ; Name         Instructions Cycles
  3803                           ; simple_byte            4     3 (average)
  3804                           ;	Chosen strategy is simple_byte
  3805  001232  503E               	movf	??_hazardButton^0,w,c
  3806  001234  0A00               	xorlw	0	; case 0
  3807  001236  B4D8               	btfsc	status,2,c
  3808  001238  EFE6  F008         	goto	l4566
  3809  00123C  EF3D  F009         	goto	l774
  3810  001240                     l4576:
  3811  001240  B280               	btfsc	128,1,c	;volatile
  3812  001242  EF25  F009         	goto	u1311
  3813  001246  EF28  F009         	goto	u1310
  3814  00124A                     u1311:
  3815  00124A  0E01               	movlw	1
  3816  00124C  EF29  F009         	goto	u1320
  3817  001250                     u1310:
  3818  001250  0E00               	movlw	0
  3819  001252                     u1320:
  3820  001252  6E3E               	movwf	??_hazardButton^0,c
  3821  001254  6A3F               	clrf	(??_hazardButton+1)^0,c
  3822                           
  3823                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3824                           ; Switch size 1, requested type "simple"
  3825                           ; Number of cases is 1, Range of values is 0 to 0
  3826                           ; switch strategies available:
  3827                           ; Name         Instructions Cycles
  3828                           ; simple_byte            4     3 (average)
  3829                           ;	Chosen strategy is simple_byte
  3830  001256  503F               	movf	(??_hazardButton+1)^0,w,c
  3831  001258  0A00               	xorlw	0	; case 0
  3832  00125A  B4D8               	btfsc	status,2,c
  3833  00125C  EF32  F009         	goto	l5052
  3834  001260  EF3D  F009         	goto	l774
  3835  001264                     l5052:
  3836                           
  3837                           ; Switch size 1, requested type "simple"
  3838                           ; Number of cases is 2, Range of values is 0 to 1
  3839                           ; switch strategies available:
  3840                           ; Name         Instructions Cycles
  3841                           ; simple_byte            7     4 (average)
  3842                           ;	Chosen strategy is simple_byte
  3843  001264  503E               	movf	??_hazardButton^0,w,c
  3844  001266  0A00               	xorlw	0	; case 0
  3845  001268  B4D8               	btfsc	status,2,c
  3846  00126A  EFC8  F008         	goto	l4558
  3847  00126E  0A01               	xorlw	1	; case 1
  3848  001270  B4D8               	btfsc	status,2,c
  3849  001272  EF0A  F009         	goto	l4572
  3850  001276  EF3D  F009         	goto	l774
  3851  00127A                     l774:
  3852  00127A  0012               	return		;funcret
  3853  00127C                     __end_of_hazardButton:
  3854                           	callstack 0
  3855                           
  3856 ;; *************** function _canRightSignal *****************
  3857 ;; Defined at:
  3858 ;;		line 15 in file "can_interface.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  number          2   26[COMRAM] int 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;Total ram usage:        2 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 5
  3879 ;; This function calls:
  3880 ;;		_CAN_transmit
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text16
  3887  0019D4                     __ptext16:
  3888                           	callstack 0
  3889  0019D4                     _canRightSignal:
  3890                           	callstack 25
  3891  0019D4                     
  3892                           ;can_interface.c: 16:  tx1.frame.idType = 1;
  3893  0019D4  0E01               	movlw	1
  3894  0019D6  0100               	movlb	0	; () banked
  3895  0019D8  6FB4               	movwf	_tx1& (0+255),b
  3896                           
  3897                           ;can_interface.c: 17:  tx1.frame.id = 0x62;
  3898  0019DA  0E62               	movlw	98
  3899  0019DC  6FB5               	movwf	(_tx1+1)& (0+255),b
  3900  0019DE  0E00               	movlw	0
  3901  0019E0  6FB6               	movwf	(_tx1+2)& (0+255),b
  3902  0019E2  0E00               	movlw	0
  3903  0019E4  6FB7               	movwf	(_tx1+3)& (0+255),b
  3904  0019E6  0E00               	movlw	0
  3905  0019E8  6FB8               	movwf	(_tx1+4)& (0+255),b
  3906                           
  3907                           ;can_interface.c: 18:  tx1.frame.dlc = 0x01;
  3908  0019EA  0E01               	movlw	1
  3909  0019EC  6FB9               	movwf	(_tx1+5)& (0+255),b
  3910  0019EE                     
  3911                           ; BSR set to: 0
  3912                           ;can_interface.c: 19:  tx1.frame.data0 = number;
  3913  0019EE  C052  F0BA         	movff	canRightSignal@number,_tx1+6
  3914  0019F2                     
  3915                           ; BSR set to: 0
  3916                           ;can_interface.c: 20:  CAN_transmit(&tx1);
  3917  0019F2  0EB4               	movlw	low _tx1
  3918  0019F4  6E4C               	movwf	CAN_transmit@tempCanMsg^0,c
  3919  0019F6  0E00               	movlw	high _tx1
  3920  0019F8  6E4D               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
  3921  0019FA  ECF6  F002         	call	_CAN_transmit	;wreg free
  3922  0019FE  0012               	return		;funcret
  3923  001A00                     __end_of_canRightSignal:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _canLeftSignal *****************
  3927 ;; Defined at:
  3928 ;;		line 23 in file "can_interface.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  number          2   26[COMRAM] int 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;Total ram usage:        2 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 5
  3949 ;; This function calls:
  3950 ;;		_CAN_transmit
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text17
  3957  001A00                     __ptext17:
  3958                           	callstack 0
  3959  001A00                     _canLeftSignal:
  3960                           	callstack 25
  3961  001A00                     
  3962                           ;can_interface.c: 24:  tx2.frame.idType = 1;
  3963  001A00  0E01               	movlw	1
  3964  001A02  0100               	movlb	0	; () banked
  3965  001A04  6FA6               	movwf	_tx2& (0+255),b
  3966                           
  3967                           ;can_interface.c: 25:  tx2.frame.id = 0x63;
  3968  001A06  0E63               	movlw	99
  3969  001A08  6FA7               	movwf	(_tx2+1)& (0+255),b
  3970  001A0A  0E00               	movlw	0
  3971  001A0C  6FA8               	movwf	(_tx2+2)& (0+255),b
  3972  001A0E  0E00               	movlw	0
  3973  001A10  6FA9               	movwf	(_tx2+3)& (0+255),b
  3974  001A12  0E00               	movlw	0
  3975  001A14  6FAA               	movwf	(_tx2+4)& (0+255),b
  3976                           
  3977                           ;can_interface.c: 26:  tx2.frame.dlc = 0x01;
  3978  001A16  0E01               	movlw	1
  3979  001A18  6FAB               	movwf	(_tx2+5)& (0+255),b
  3980  001A1A                     
  3981                           ; BSR set to: 0
  3982                           ;can_interface.c: 27:  tx2.frame.data0 = number;
  3983  001A1A  C052  F0AC         	movff	canLeftSignal@number,_tx2+6
  3984  001A1E                     
  3985                           ; BSR set to: 0
  3986                           ;can_interface.c: 28:  CAN_transmit(&tx2);
  3987  001A1E  0EA6               	movlw	low _tx2
  3988  001A20  6E4C               	movwf	CAN_transmit@tempCanMsg^0,c
  3989  001A22  0E00               	movlw	high _tx2
  3990  001A24  6E4D               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
  3991  001A26  ECF6  F002         	call	_CAN_transmit	;wreg free
  3992  001A2A  0012               	return		;funcret
  3993  001A2C                     __end_of_canLeftSignal:
  3994                           	callstack 0
  3995                           
  3996 ;; *************** function _canHazardSignal *****************
  3997 ;; Defined at:
  3998 ;;		line 31 in file "can_interface.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  number          2   26[COMRAM] int 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;		None
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4015 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4016 ;;Total ram usage:        2 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 5
  4019 ;; This function calls:
  4020 ;;		_CAN_transmit
  4021 ;; This function is called by:
  4022 ;;		_main
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text18
  4027  001A2C                     __ptext18:
  4028                           	callstack 0
  4029  001A2C                     _canHazardSignal:
  4030                           	callstack 25
  4031  001A2C                     
  4032                           ;can_interface.c: 32:  tx3.frame.idType = 1;
  4033  001A2C  0E01               	movlw	1
  4034  001A2E  0100               	movlb	0	; () banked
  4035  001A30  6F98               	movwf	_tx3& (0+255),b
  4036                           
  4037                           ;can_interface.c: 33:  tx3.frame.id = 0x61;
  4038  001A32  0E61               	movlw	97
  4039  001A34  6F99               	movwf	(_tx3+1)& (0+255),b
  4040  001A36  0E00               	movlw	0
  4041  001A38  6F9A               	movwf	(_tx3+2)& (0+255),b
  4042  001A3A  0E00               	movlw	0
  4043  001A3C  6F9B               	movwf	(_tx3+3)& (0+255),b
  4044  001A3E  0E00               	movlw	0
  4045  001A40  6F9C               	movwf	(_tx3+4)& (0+255),b
  4046                           
  4047                           ;can_interface.c: 34:  tx3.frame.dlc = 0x01;
  4048  001A42  0E01               	movlw	1
  4049  001A44  6F9D               	movwf	(_tx3+5)& (0+255),b
  4050  001A46                     
  4051                           ; BSR set to: 0
  4052                           ;can_interface.c: 35:  tx3.frame.data0 = number;
  4053  001A46  C052  F09E         	movff	canHazardSignal@number,_tx3+6
  4054  001A4A                     
  4055                           ; BSR set to: 0
  4056                           ;can_interface.c: 36:  CAN_transmit(&tx3);
  4057  001A4A  0E98               	movlw	low _tx3
  4058  001A4C  6E4C               	movwf	CAN_transmit@tempCanMsg^0,c
  4059  001A4E  0E00               	movlw	high _tx3
  4060  001A50  6E4D               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
  4061  001A52  ECF6  F002         	call	_CAN_transmit	;wreg free
  4062  001A56  0012               	return		;funcret
  4063  001A58                     __end_of_canHazardSignal:
  4064                           	callstack 0
  4065                           
  4066 ;; *************** function _CAN_transmit *****************
  4067 ;; Defined at:
  4068 ;;		line 236 in file "mcc_generated_files/ecan.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  tempCanMsg      2   20[COMRAM] PTR struct .
  4071 ;;		 -> tx7(14), tx6(14), tx5(14), tx4(14), 
  4072 ;;		 -> tx3(14), tx2(14), tx1(14), 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  tempSIDL        1   25[COMRAM] unsigned char 
  4075 ;;  tempSIDH        1   24[COMRAM] unsigned char 
  4076 ;;  tempEIDL        1   23[COMRAM] unsigned char 
  4077 ;;  tempEIDH        1   22[COMRAM] unsigned char 
  4078 ;;  returnValue     1    0        unsigned char 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      unsigned char 
  4081 ;; Registers used:
  4082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4089 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4091 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4092 ;;Total ram usage:        6 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; Hardware stack levels required when called: 4
  4095 ;; This function calls:
  4096 ;;		_convertCANid2Reg
  4097 ;; This function is called by:
  4098 ;;		_canRightSignal
  4099 ;;		_canLeftSignal
  4100 ;;		_canHazardSignal
  4101 ;;		_canFrontSignal
  4102 ;;		_canBackSignal
  4103 ;;		_requestSpeed
  4104 ;;		_func99
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text19
  4109  0005EC                     __ptext19:
  4110                           	callstack 0
  4111  0005EC                     _CAN_transmit:
  4112                           	callstack 25
  4113  0005EC                     
  4114                           ;mcc_generated_files/ecan.c: 236: uint8_t CAN_transmit(uCAN_MSG *tempCanMsg);mcc_generat
      +                          ed_files/ecan.c: 237: {;mcc_generated_files/ecan.c: 238:     uint8_t tempEIDH = 0;
  4115  0005EC  0E00               	movlw	0
  4116  0005EE  6E4E               	movwf	CAN_transmit@tempEIDH^0,c
  4117                           
  4118                           ;mcc_generated_files/ecan.c: 239:     uint8_t tempEIDL = 0;
  4119  0005F0  0E00               	movlw	0
  4120  0005F2  6E4F               	movwf	CAN_transmit@tempEIDL^0,c
  4121                           
  4122                           ;mcc_generated_files/ecan.c: 240:     uint8_t tempSIDH = 0;
  4123  0005F4  0E00               	movlw	0
  4124  0005F6  6E50               	movwf	CAN_transmit@tempSIDH^0,c
  4125                           
  4126                           ;mcc_generated_files/ecan.c: 241:     uint8_t tempSIDL = 0;
  4127  0005F8  0E00               	movlw	0
  4128  0005FA  6E51               	movwf	CAN_transmit@tempSIDL^0,c
  4129  0005FC                     
  4130                           ;mcc_generated_files/ecan.c: 244:     if (TXB0CONbits.TXREQ != 1)
  4131  0005FC  010F               	movlb	15	; () banked
  4132  0005FE  B720               	btfsc	32,3,b	;volatile
  4133  000600  EF04  F003         	goto	u1181
  4134  000604  EF06  F003         	goto	u1180
  4135  000608                     u1181:
  4136  000608  EF80  F003         	goto	l511
  4137  00060C                     u1180:
  4138  00060C                     
  4139                           ; BSR set to: 15
  4140                           ;mcc_generated_files/ecan.c: 245:     {;mcc_generated_files/ecan.c: 246:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  4141  00060C  EE20 F001          	lfsr	2,1
  4142  000610  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4143  000612  26D9               	addwf	fsr2l,f,c
  4144  000614  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4145  000616  22DA               	addwfc	fsr2h,f,c
  4146  000618  CFDE F03A          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4147  00061C  CFDE F03B          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4148  000620  CFDE F03C          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4149  000624  CFDE F03D          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4150  000628  C04C  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4151  00062C  C04D  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4152  000630  50DF               	movf	indf2,w,c
  4153  000632  6E3E               	movwf	convertCANid2Reg@canIdType^0,c
  4154  000634  0E4E               	movlw	low CAN_transmit@tempEIDH
  4155  000636  6E3F               	movwf	convertCANid2Reg@passedInEIDH^0,c
  4156  000638  0E00               	movlw	high CAN_transmit@tempEIDH
  4157  00063A  6E40               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
  4158  00063C  0E4F               	movlw	low CAN_transmit@tempEIDL
  4159  00063E  6E41               	movwf	convertCANid2Reg@passedInEIDL^0,c
  4160  000640  0E00               	movlw	high CAN_transmit@tempEIDL
  4161  000642  6E42               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
  4162  000644  0E50               	movlw	low CAN_transmit@tempSIDH
  4163  000646  6E43               	movwf	convertCANid2Reg@passedInSIDH^0,c
  4164  000648  0E00               	movlw	high CAN_transmit@tempSIDH
  4165  00064A  6E44               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
  4166  00064C  0E51               	movlw	low CAN_transmit@tempSIDL
  4167  00064E  6E45               	movwf	convertCANid2Reg@passedInSIDL^0,c
  4168  000650  0E00               	movlw	high CAN_transmit@tempSIDL
  4169  000652  6E46               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
  4170  000654  EC7F  F006         	call	_convertCANid2Reg	;wreg free
  4171  000658                     
  4172                           ;mcc_generated_files/ecan.c: 248:         TXB0EIDH = tempEIDH;
  4173  000658  C04E  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  4174  00065C                     
  4175                           ;mcc_generated_files/ecan.c: 249:         TXB0EIDL = tempEIDL;
  4176  00065C  C04F  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  4177  000660                     
  4178                           ;mcc_generated_files/ecan.c: 250:         TXB0SIDH = tempSIDH;
  4179  000660  C050  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  4180  000664                     
  4181                           ;mcc_generated_files/ecan.c: 251:         TXB0SIDL = tempSIDL;
  4182  000664  C051  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  4183  000668                     
  4184                           ;mcc_generated_files/ecan.c: 252:         TXB0DLC = tempCanMsg->frame.dlc;
  4185  000668  EE20 F005          	lfsr	2,5
  4186  00066C  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4187  00066E  26D9               	addwf	fsr2l,f,c
  4188  000670  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4189  000672  22DA               	addwfc	fsr2h,f,c
  4190  000674  50DF               	movf	indf2,w,c
  4191  000676  010F               	movlb	15	; () banked
  4192  000678  6F25               	movwf	37,b	;volatile
  4193  00067A                     
  4194                           ; BSR set to: 15
  4195                           ;mcc_generated_files/ecan.c: 253:         TXB0D0 = tempCanMsg->frame.data0;
  4196  00067A  EE20 F006          	lfsr	2,6
  4197  00067E  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4198  000680  26D9               	addwf	fsr2l,f,c
  4199  000682  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4200  000684  22DA               	addwfc	fsr2h,f,c
  4201  000686  50DF               	movf	indf2,w,c
  4202  000688  6F26               	movwf	38,b	;volatile
  4203  00068A                     
  4204                           ; BSR set to: 15
  4205                           ;mcc_generated_files/ecan.c: 254:         TXB0D1 = tempCanMsg->frame.data1;
  4206  00068A  EE20 F007          	lfsr	2,7
  4207  00068E  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4208  000690  26D9               	addwf	fsr2l,f,c
  4209  000692  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4210  000694  22DA               	addwfc	fsr2h,f,c
  4211  000696  50DF               	movf	indf2,w,c
  4212  000698  6F27               	movwf	39,b	;volatile
  4213  00069A                     
  4214                           ; BSR set to: 15
  4215                           ;mcc_generated_files/ecan.c: 255:         TXB0D2 = tempCanMsg->frame.data2;
  4216  00069A  EE20 F008          	lfsr	2,8
  4217  00069E  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4218  0006A0  26D9               	addwf	fsr2l,f,c
  4219  0006A2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4220  0006A4  22DA               	addwfc	fsr2h,f,c
  4221  0006A6  50DF               	movf	indf2,w,c
  4222  0006A8  6F28               	movwf	40,b	;volatile
  4223  0006AA                     
  4224                           ; BSR set to: 15
  4225                           ;mcc_generated_files/ecan.c: 256:         TXB0D3 = tempCanMsg->frame.data3;
  4226  0006AA  EE20 F009          	lfsr	2,9
  4227  0006AE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4228  0006B0  26D9               	addwf	fsr2l,f,c
  4229  0006B2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4230  0006B4  22DA               	addwfc	fsr2h,f,c
  4231  0006B6  50DF               	movf	indf2,w,c
  4232  0006B8  6F29               	movwf	41,b	;volatile
  4233  0006BA                     
  4234                           ; BSR set to: 15
  4235                           ;mcc_generated_files/ecan.c: 257:         TXB0D4 = tempCanMsg->frame.data4;
  4236  0006BA  EE20 F00A          	lfsr	2,10
  4237  0006BE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4238  0006C0  26D9               	addwf	fsr2l,f,c
  4239  0006C2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4240  0006C4  22DA               	addwfc	fsr2h,f,c
  4241  0006C6  50DF               	movf	indf2,w,c
  4242  0006C8  6F2A               	movwf	42,b	;volatile
  4243  0006CA                     
  4244                           ; BSR set to: 15
  4245                           ;mcc_generated_files/ecan.c: 258:         TXB0D5 = tempCanMsg->frame.data5;
  4246  0006CA  EE20 F00B          	lfsr	2,11
  4247  0006CE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4248  0006D0  26D9               	addwf	fsr2l,f,c
  4249  0006D2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4250  0006D4  22DA               	addwfc	fsr2h,f,c
  4251  0006D6  50DF               	movf	indf2,w,c
  4252  0006D8  6F2B               	movwf	43,b	;volatile
  4253  0006DA                     
  4254                           ; BSR set to: 15
  4255                           ;mcc_generated_files/ecan.c: 259:         TXB0D6 = tempCanMsg->frame.data6;
  4256  0006DA  EE20 F00C          	lfsr	2,12
  4257  0006DE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4258  0006E0  26D9               	addwf	fsr2l,f,c
  4259  0006E2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4260  0006E4  22DA               	addwfc	fsr2h,f,c
  4261  0006E6  50DF               	movf	indf2,w,c
  4262  0006E8  6F2C               	movwf	44,b	;volatile
  4263  0006EA                     
  4264                           ; BSR set to: 15
  4265                           ;mcc_generated_files/ecan.c: 260:         TXB0D7 = tempCanMsg->frame.data7;
  4266  0006EA  EE20 F00D          	lfsr	2,13
  4267  0006EE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4268  0006F0  26D9               	addwf	fsr2l,f,c
  4269  0006F2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4270  0006F4  22DA               	addwfc	fsr2h,f,c
  4271  0006F6  50DF               	movf	indf2,w,c
  4272  0006F8  6F2D               	movwf	45,b	;volatile
  4273  0006FA                     
  4274                           ; BSR set to: 15
  4275                           ;mcc_generated_files/ecan.c: 262:         TXB0CONbits.TXREQ = 1;
  4276  0006FA  8720               	bsf	32,3,b	;volatile
  4277  0006FC                     l4020:
  4278                           
  4279                           ; BSR set to: 15
  4280                           ;mcc_generated_files/ecan.c: 265:     }
  4281  0006FC  EF82  F004         	goto	l516
  4282  000700                     l511:
  4283                           
  4284                           ; BSR set to: 15
  4285  000700  B710               	btfsc	16,3,b	;volatile
  4286  000702  EF85  F003         	goto	u1191
  4287  000706  EF87  F003         	goto	u1190
  4288  00070A                     u1191:
  4289  00070A  EF01  F004         	goto	l513
  4290  00070E                     u1190:
  4291  00070E                     
  4292                           ; BSR set to: 15
  4293                           ;mcc_generated_files/ecan.c: 267:     {;mcc_generated_files/ecan.c: 269:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  4294  00070E  EE20 F001          	lfsr	2,1
  4295  000712  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4296  000714  26D9               	addwf	fsr2l,f,c
  4297  000716  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4298  000718  22DA               	addwfc	fsr2h,f,c
  4299  00071A  CFDE F03A          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4300  00071E  CFDE F03B          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4301  000722  CFDE F03C          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4302  000726  CFDE F03D          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4303  00072A  C04C  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4304  00072E  C04D  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4305  000732  50DF               	movf	indf2,w,c
  4306  000734  6E3E               	movwf	convertCANid2Reg@canIdType^0,c
  4307  000736  0E4E               	movlw	low CAN_transmit@tempEIDH
  4308  000738  6E3F               	movwf	convertCANid2Reg@passedInEIDH^0,c
  4309  00073A  0E00               	movlw	high CAN_transmit@tempEIDH
  4310  00073C  6E40               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
  4311  00073E  0E4F               	movlw	low CAN_transmit@tempEIDL
  4312  000740  6E41               	movwf	convertCANid2Reg@passedInEIDL^0,c
  4313  000742  0E00               	movlw	high CAN_transmit@tempEIDL
  4314  000744  6E42               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
  4315  000746  0E50               	movlw	low CAN_transmit@tempSIDH
  4316  000748  6E43               	movwf	convertCANid2Reg@passedInSIDH^0,c
  4317  00074A  0E00               	movlw	high CAN_transmit@tempSIDH
  4318  00074C  6E44               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
  4319  00074E  0E51               	movlw	low CAN_transmit@tempSIDL
  4320  000750  6E45               	movwf	convertCANid2Reg@passedInSIDL^0,c
  4321  000752  0E00               	movlw	high CAN_transmit@tempSIDL
  4322  000754  6E46               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
  4323  000756  EC7F  F006         	call	_convertCANid2Reg	;wreg free
  4324  00075A                     
  4325                           ;mcc_generated_files/ecan.c: 271:         TXB1EIDH = tempEIDH;
  4326  00075A  C04E  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  4327  00075E                     
  4328                           ;mcc_generated_files/ecan.c: 272:         TXB1EIDL = tempEIDL;
  4329  00075E  C04F  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  4330  000762                     
  4331                           ;mcc_generated_files/ecan.c: 273:         TXB1SIDH = tempSIDH;
  4332  000762  C050  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  4333  000766                     
  4334                           ;mcc_generated_files/ecan.c: 274:         TXB1SIDL = tempSIDL;
  4335  000766  C051  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  4336  00076A                     
  4337                           ;mcc_generated_files/ecan.c: 275:         TXB1DLC = tempCanMsg->frame.dlc;
  4338  00076A  EE20 F005          	lfsr	2,5
  4339  00076E  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4340  000770  26D9               	addwf	fsr2l,f,c
  4341  000772  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4342  000774  22DA               	addwfc	fsr2h,f,c
  4343  000776  50DF               	movf	indf2,w,c
  4344  000778  010F               	movlb	15	; () banked
  4345  00077A  6F15               	movwf	21,b	;volatile
  4346  00077C                     
  4347                           ; BSR set to: 15
  4348                           ;mcc_generated_files/ecan.c: 276:         TXB1D0 = tempCanMsg->frame.data0;
  4349  00077C  EE20 F006          	lfsr	2,6
  4350  000780  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4351  000782  26D9               	addwf	fsr2l,f,c
  4352  000784  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4353  000786  22DA               	addwfc	fsr2h,f,c
  4354  000788  50DF               	movf	indf2,w,c
  4355  00078A  6F16               	movwf	22,b	;volatile
  4356  00078C                     
  4357                           ; BSR set to: 15
  4358                           ;mcc_generated_files/ecan.c: 277:         TXB1D1 = tempCanMsg->frame.data1;
  4359  00078C  EE20 F007          	lfsr	2,7
  4360  000790  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4361  000792  26D9               	addwf	fsr2l,f,c
  4362  000794  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4363  000796  22DA               	addwfc	fsr2h,f,c
  4364  000798  50DF               	movf	indf2,w,c
  4365  00079A  6F17               	movwf	23,b	;volatile
  4366  00079C                     
  4367                           ; BSR set to: 15
  4368                           ;mcc_generated_files/ecan.c: 278:         TXB1D2 = tempCanMsg->frame.data2;
  4369  00079C  EE20 F008          	lfsr	2,8
  4370  0007A0  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4371  0007A2  26D9               	addwf	fsr2l,f,c
  4372  0007A4  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4373  0007A6  22DA               	addwfc	fsr2h,f,c
  4374  0007A8  50DF               	movf	indf2,w,c
  4375  0007AA  6F18               	movwf	24,b	;volatile
  4376  0007AC                     
  4377                           ; BSR set to: 15
  4378                           ;mcc_generated_files/ecan.c: 279:         TXB1D3 = tempCanMsg->frame.data3;
  4379  0007AC  EE20 F009          	lfsr	2,9
  4380  0007B0  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4381  0007B2  26D9               	addwf	fsr2l,f,c
  4382  0007B4  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4383  0007B6  22DA               	addwfc	fsr2h,f,c
  4384  0007B8  50DF               	movf	indf2,w,c
  4385  0007BA  6F19               	movwf	25,b	;volatile
  4386  0007BC                     
  4387                           ; BSR set to: 15
  4388                           ;mcc_generated_files/ecan.c: 280:         TXB1D4 = tempCanMsg->frame.data4;
  4389  0007BC  EE20 F00A          	lfsr	2,10
  4390  0007C0  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4391  0007C2  26D9               	addwf	fsr2l,f,c
  4392  0007C4  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4393  0007C6  22DA               	addwfc	fsr2h,f,c
  4394  0007C8  50DF               	movf	indf2,w,c
  4395  0007CA  6F1A               	movwf	26,b	;volatile
  4396  0007CC                     
  4397                           ; BSR set to: 15
  4398                           ;mcc_generated_files/ecan.c: 281:         TXB1D5 = tempCanMsg->frame.data5;
  4399  0007CC  EE20 F00B          	lfsr	2,11
  4400  0007D0  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4401  0007D2  26D9               	addwf	fsr2l,f,c
  4402  0007D4  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4403  0007D6  22DA               	addwfc	fsr2h,f,c
  4404  0007D8  50DF               	movf	indf2,w,c
  4405  0007DA  6F1B               	movwf	27,b	;volatile
  4406  0007DC                     
  4407                           ; BSR set to: 15
  4408                           ;mcc_generated_files/ecan.c: 282:         TXB1D6 = tempCanMsg->frame.data6;
  4409  0007DC  EE20 F00C          	lfsr	2,12
  4410  0007E0  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4411  0007E2  26D9               	addwf	fsr2l,f,c
  4412  0007E4  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4413  0007E6  22DA               	addwfc	fsr2h,f,c
  4414  0007E8  50DF               	movf	indf2,w,c
  4415  0007EA  6F1C               	movwf	28,b	;volatile
  4416  0007EC                     
  4417                           ; BSR set to: 15
  4418                           ;mcc_generated_files/ecan.c: 283:         TXB1D7 = tempCanMsg->frame.data7;
  4419  0007EC  EE20 F00D          	lfsr	2,13
  4420  0007F0  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4421  0007F2  26D9               	addwf	fsr2l,f,c
  4422  0007F4  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4423  0007F6  22DA               	addwfc	fsr2h,f,c
  4424  0007F8  50DF               	movf	indf2,w,c
  4425  0007FA  6F1D               	movwf	29,b	;volatile
  4426  0007FC                     
  4427                           ; BSR set to: 15
  4428                           ;mcc_generated_files/ecan.c: 285:         TXB1CONbits.TXREQ = 1;
  4429  0007FC  8710               	bsf	16,3,b	;volatile
  4430  0007FE  EF7E  F003         	goto	l4020
  4431  000802                     l513:
  4432                           
  4433                           ; BSR set to: 15
  4434  000802  B700               	btfsc	0,3,b	;volatile
  4435  000804  EF06  F004         	goto	u1201
  4436  000808  EF08  F004         	goto	u1200
  4437  00080C                     u1201:
  4438  00080C  EF82  F004         	goto	l512
  4439  000810                     u1200:
  4440  000810                     
  4441                           ; BSR set to: 15
  4442                           ;mcc_generated_files/ecan.c: 289:     {;mcc_generated_files/ecan.c: 291:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  4443  000810  EE20 F001          	lfsr	2,1
  4444  000814  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4445  000816  26D9               	addwf	fsr2l,f,c
  4446  000818  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4447  00081A  22DA               	addwfc	fsr2h,f,c
  4448  00081C  CFDE F03A          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4449  000820  CFDE F03B          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4450  000824  CFDE F03C          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4451  000828  CFDE F03D          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4452  00082C  C04C  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4453  000830  C04D  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4454  000834  50DF               	movf	indf2,w,c
  4455  000836  6E3E               	movwf	convertCANid2Reg@canIdType^0,c
  4456  000838  0E4E               	movlw	low CAN_transmit@tempEIDH
  4457  00083A  6E3F               	movwf	convertCANid2Reg@passedInEIDH^0,c
  4458  00083C  0E00               	movlw	high CAN_transmit@tempEIDH
  4459  00083E  6E40               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
  4460  000840  0E4F               	movlw	low CAN_transmit@tempEIDL
  4461  000842  6E41               	movwf	convertCANid2Reg@passedInEIDL^0,c
  4462  000844  0E00               	movlw	high CAN_transmit@tempEIDL
  4463  000846  6E42               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
  4464  000848  0E50               	movlw	low CAN_transmit@tempSIDH
  4465  00084A  6E43               	movwf	convertCANid2Reg@passedInSIDH^0,c
  4466  00084C  0E00               	movlw	high CAN_transmit@tempSIDH
  4467  00084E  6E44               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
  4468  000850  0E51               	movlw	low CAN_transmit@tempSIDL
  4469  000852  6E45               	movwf	convertCANid2Reg@passedInSIDL^0,c
  4470  000854  0E00               	movlw	high CAN_transmit@tempSIDL
  4471  000856  6E46               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
  4472  000858  EC7F  F006         	call	_convertCANid2Reg	;wreg free
  4473  00085C                     
  4474                           ;mcc_generated_files/ecan.c: 293:         TXB2EIDH = tempEIDH;
  4475  00085C  C04E  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  4476  000860                     
  4477                           ;mcc_generated_files/ecan.c: 294:         TXB2EIDL = tempEIDL;
  4478  000860  C04F  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  4479  000864                     
  4480                           ;mcc_generated_files/ecan.c: 295:         TXB2SIDH = tempSIDH;
  4481  000864  C050  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  4482  000868                     
  4483                           ;mcc_generated_files/ecan.c: 296:         TXB2SIDL = tempSIDL;
  4484  000868  C051  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  4485  00086C                     
  4486                           ;mcc_generated_files/ecan.c: 297:         TXB2DLC = tempCanMsg->frame.dlc;
  4487  00086C  EE20 F005          	lfsr	2,5
  4488  000870  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4489  000872  26D9               	addwf	fsr2l,f,c
  4490  000874  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4491  000876  22DA               	addwfc	fsr2h,f,c
  4492  000878  50DF               	movf	indf2,w,c
  4493  00087A  010F               	movlb	15	; () banked
  4494  00087C  6F05               	movwf	5,b	;volatile
  4495  00087E                     
  4496                           ; BSR set to: 15
  4497                           ;mcc_generated_files/ecan.c: 298:         TXB2D0 = tempCanMsg->frame.data0;
  4498  00087E  EE20 F006          	lfsr	2,6
  4499  000882  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4500  000884  26D9               	addwf	fsr2l,f,c
  4501  000886  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4502  000888  22DA               	addwfc	fsr2h,f,c
  4503  00088A  50DF               	movf	indf2,w,c
  4504  00088C  6F06               	movwf	6,b	;volatile
  4505  00088E                     
  4506                           ; BSR set to: 15
  4507                           ;mcc_generated_files/ecan.c: 299:         TXB2D1 = tempCanMsg->frame.data1;
  4508  00088E  EE20 F007          	lfsr	2,7
  4509  000892  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4510  000894  26D9               	addwf	fsr2l,f,c
  4511  000896  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4512  000898  22DA               	addwfc	fsr2h,f,c
  4513  00089A  50DF               	movf	indf2,w,c
  4514  00089C  6F07               	movwf	7,b	;volatile
  4515  00089E                     
  4516                           ; BSR set to: 15
  4517                           ;mcc_generated_files/ecan.c: 300:         TXB2D2 = tempCanMsg->frame.data2;
  4518  00089E  EE20 F008          	lfsr	2,8
  4519  0008A2  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4520  0008A4  26D9               	addwf	fsr2l,f,c
  4521  0008A6  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4522  0008A8  22DA               	addwfc	fsr2h,f,c
  4523  0008AA  50DF               	movf	indf2,w,c
  4524  0008AC  6F08               	movwf	8,b	;volatile
  4525  0008AE                     
  4526                           ; BSR set to: 15
  4527                           ;mcc_generated_files/ecan.c: 301:         TXB2D3 = tempCanMsg->frame.data3;
  4528  0008AE  EE20 F009          	lfsr	2,9
  4529  0008B2  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4530  0008B4  26D9               	addwf	fsr2l,f,c
  4531  0008B6  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4532  0008B8  22DA               	addwfc	fsr2h,f,c
  4533  0008BA  50DF               	movf	indf2,w,c
  4534  0008BC  6F09               	movwf	9,b	;volatile
  4535  0008BE                     
  4536                           ; BSR set to: 15
  4537                           ;mcc_generated_files/ecan.c: 302:         TXB2D4 = tempCanMsg->frame.data4;
  4538  0008BE  EE20 F00A          	lfsr	2,10
  4539  0008C2  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4540  0008C4  26D9               	addwf	fsr2l,f,c
  4541  0008C6  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4542  0008C8  22DA               	addwfc	fsr2h,f,c
  4543  0008CA  50DF               	movf	indf2,w,c
  4544  0008CC  6F0A               	movwf	10,b	;volatile
  4545  0008CE                     
  4546                           ; BSR set to: 15
  4547                           ;mcc_generated_files/ecan.c: 303:         TXB2D5 = tempCanMsg->frame.data5;
  4548  0008CE  EE20 F00B          	lfsr	2,11
  4549  0008D2  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4550  0008D4  26D9               	addwf	fsr2l,f,c
  4551  0008D6  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4552  0008D8  22DA               	addwfc	fsr2h,f,c
  4553  0008DA  50DF               	movf	indf2,w,c
  4554  0008DC  6F0B               	movwf	11,b	;volatile
  4555  0008DE                     
  4556                           ; BSR set to: 15
  4557                           ;mcc_generated_files/ecan.c: 304:         TXB2D6 = tempCanMsg->frame.data6;
  4558  0008DE  EE20 F00C          	lfsr	2,12
  4559  0008E2  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4560  0008E4  26D9               	addwf	fsr2l,f,c
  4561  0008E6  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4562  0008E8  22DA               	addwfc	fsr2h,f,c
  4563  0008EA  50DF               	movf	indf2,w,c
  4564  0008EC  6F0C               	movwf	12,b	;volatile
  4565  0008EE                     
  4566                           ; BSR set to: 15
  4567                           ;mcc_generated_files/ecan.c: 305:         TXB2D7 = tempCanMsg->frame.data7;
  4568  0008EE  EE20 F00D          	lfsr	2,13
  4569  0008F2  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4570  0008F4  26D9               	addwf	fsr2l,f,c
  4571  0008F6  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4572  0008F8  22DA               	addwfc	fsr2h,f,c
  4573  0008FA  50DF               	movf	indf2,w,c
  4574  0008FC  6F0D               	movwf	13,b	;volatile
  4575  0008FE                     
  4576                           ; BSR set to: 15
  4577                           ;mcc_generated_files/ecan.c: 307:         TXB2CONbits.TXREQ = 1;
  4578  0008FE  8700               	bsf	0,3,b	;volatile
  4579  000900  EF7E  F003         	goto	l4020
  4580  000904                     l512:
  4581  000904                     l516:
  4582                           
  4583                           ; BSR set to: 15
  4584  000904  0012               	return		;funcret
  4585  000906                     __end_of_CAN_transmit:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _convertCANid2Reg *****************
  4589 ;; Defined at:
  4590 ;;		line 463 in file "mcc_generated_files/ecan.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  tempPassedIn    4    2[COMRAM] unsigned long 
  4593 ;;  canIdType       1    6[COMRAM] unsigned char 
  4594 ;;  passedInEIDH    2    7[COMRAM] PTR unsigned char 
  4595 ;;		 -> CAN_transmit@tempEIDH(1), 
  4596 ;;  passedInEIDL    2    9[COMRAM] PTR unsigned char 
  4597 ;;		 -> CAN_transmit@tempEIDL(1), 
  4598 ;;  passedInSIDH    2   11[COMRAM] PTR unsigned char 
  4599 ;;		 -> CAN_transmit@tempSIDH(1), 
  4600 ;;  passedInSIDL    2   13[COMRAM] PTR unsigned char 
  4601 ;;		 -> CAN_transmit@tempSIDL(1), 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  wipSIDL         1   19[COMRAM] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4613 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4615 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4616 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4617 ;;Total ram usage:       18 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; Hardware stack levels required when called: 3
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_CAN_transmit
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text20
  4628  000CFE                     __ptext20:
  4629                           	callstack 0
  4630  000CFE                     _convertCANid2Reg:
  4631                           	callstack 25
  4632  000CFE                     
  4633                           ;mcc_generated_files/ecan.c: 466:     if (canIdType == 2) {
  4634  000CFE  0E02               	movlw	2
  4635  000D00  183E               	xorwf	convertCANid2Reg@canIdType^0,w,c
  4636  000D02  A4D8               	btfss	status,2,c
  4637  000D04  EF86  F006         	goto	u1131
  4638  000D08  EF88  F006         	goto	u1130
  4639  000D0C                     u1131:
  4640  000D0C  EF0B  F007         	goto	l3924
  4641  000D10                     u1130:
  4642  000D10                     
  4643                           ;mcc_generated_files/ecan.c: 469:         *passedInEIDL = 0xFF & tempPassedInID;
  4644  000D10  C041  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  4645  000D14  C042  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  4646  000D18  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4647  000D1C                     
  4648                           ;mcc_generated_files/ecan.c: 470:         tempPassedInID = tempPassedInID >> 8;
  4649  000D1C  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4650  000D20  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4651  000D24  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4652  000D28  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4653  000D2C  C048  F047         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4654  000D30  C049  F048         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4655  000D34  C04A  F049         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4656  000D38  6A4A               	clrf	(??_convertCANid2Reg+3)^0,c
  4657  000D3A  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4658  000D3E  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4659  000D42  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4660  000D46  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4661  000D4A                     
  4662                           ;mcc_generated_files/ecan.c: 473:         *passedInEIDH = 0xFF & tempPassedInID;
  4663  000D4A  C03F  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  4664  000D4E  C040  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  4665  000D52  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4666                           
  4667                           ;mcc_generated_files/ecan.c: 474:         tempPassedInID = tempPassedInID >> 8;
  4668  000D56  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4669  000D5A  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4670  000D5E  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4671  000D62  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4672  000D66  C048  F047         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4673  000D6A  C049  F048         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4674  000D6E  C04A  F049         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4675  000D72  6A4A               	clrf	(??_convertCANid2Reg+3)^0,c
  4676  000D74  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4677  000D78  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4678  000D7C  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4679  000D80  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4680  000D84                     
  4681                           ;mcc_generated_files/ecan.c: 478:         wipSIDL = 0x03 & tempPassedInID;
  4682  000D84  503A               	movf	convertCANid2Reg@tempPassedInID^0,w,c
  4683  000D86  0B03               	andlw	3
  4684  000D88  6E4B               	movwf	convertCANid2Reg@wipSIDL^0,c
  4685  000D8A                     
  4686                           ;mcc_generated_files/ecan.c: 479:         tempPassedInID = tempPassedInID << 3;
  4687  000D8A  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4688  000D8E  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4689  000D92  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4690  000D96  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4691  000D9A  0E03               	movlw	3
  4692  000D9C                     u1145:
  4693  000D9C  90D8               	bcf	status,0,c
  4694  000D9E  3647               	rlcf	??_convertCANid2Reg^0,f,c
  4695  000DA0  3648               	rlcf	(??_convertCANid2Reg+1)^0,f,c
  4696  000DA2  3649               	rlcf	(??_convertCANid2Reg+2)^0,f,c
  4697  000DA4  364A               	rlcf	(??_convertCANid2Reg+3)^0,f,c
  4698  000DA6  2EE8               	decfsz	wreg,f,c
  4699  000DA8  EFCE  F006         	goto	u1145
  4700  000DAC  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4701  000DB0  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4702  000DB4  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4703  000DB8  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4704  000DBC                     
  4705                           ;mcc_generated_files/ecan.c: 480:         wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  4706  000DBC  503A               	movf	convertCANid2Reg@tempPassedInID^0,w,c
  4707  000DBE  0BE0               	andlw	224
  4708  000DC0  244B               	addwf	convertCANid2Reg@wipSIDL^0,w,c
  4709  000DC2  6E4B               	movwf	convertCANid2Reg@wipSIDL^0,c
  4710  000DC4                     
  4711                           ;mcc_generated_files/ecan.c: 481:         wipSIDL = (uint8_t)(wipSIDL + 0x08);
  4712  000DC4  504B               	movf	convertCANid2Reg@wipSIDL^0,w,c
  4713  000DC6  0F08               	addlw	8
  4714  000DC8  6E4B               	movwf	convertCANid2Reg@wipSIDL^0,c
  4715  000DCA                     
  4716                           ;mcc_generated_files/ecan.c: 482:         *passedInSIDL = (uint8_t)(0xEB & wipSIDL);
  4717  000DCA  504B               	movf	convertCANid2Reg@wipSIDL^0,w,c
  4718  000DCC  0BEB               	andlw	235
  4719  000DCE  C045  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  4720  000DD2  C046  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  4721  000DD6  6EDF               	movwf	indf2,c
  4722  000DD8                     l3920:
  4723                           
  4724                           ;mcc_generated_files/ecan.c: 485:         tempPassedInID = tempPassedInID >> 8;
  4725  000DD8  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4726  000DDC  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4727  000DE0  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4728  000DE4  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4729  000DE8  C048  F047         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4730  000DEC  C049  F048         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4731  000DF0  C04A  F049         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4732  000DF4  6A4A               	clrf	(??_convertCANid2Reg+3)^0,c
  4733  000DF6  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4734  000DFA  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4735  000DFE  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4736  000E02  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4737  000E06                     
  4738                           ;mcc_generated_files/ecan.c: 486:         *passedInSIDH = 0xFF & tempPassedInID;
  4739  000E06  C043  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  4740  000E0A  C044  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  4741  000E0E  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4742                           
  4743                           ;mcc_generated_files/ecan.c: 487:     } else
  4744  000E12  EF38  F007         	goto	l554
  4745  000E16                     l3924:
  4746                           
  4747                           ;mcc_generated_files/ecan.c: 488:     {;mcc_generated_files/ecan.c: 489:         *passed
      +                          InEIDH = 0;
  4748  000E16  C03F  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  4749  000E1A  C040  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  4750  000E1E  0E00               	movlw	0
  4751  000E20  6EDF               	movwf	indf2,c
  4752                           
  4753                           ;mcc_generated_files/ecan.c: 490:         *passedInEIDL = 0;
  4754  000E22  C041  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  4755  000E26  C042  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  4756  000E2A  0E00               	movlw	0
  4757  000E2C  6EDF               	movwf	indf2,c
  4758  000E2E                     
  4759                           ;mcc_generated_files/ecan.c: 491:         tempPassedInID = tempPassedInID << 5;
  4760  000E2E  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4761  000E32  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4762  000E36  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4763  000E3A  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4764  000E3E  0E05               	movlw	5
  4765  000E40                     u1155:
  4766  000E40  90D8               	bcf	status,0,c
  4767  000E42  3647               	rlcf	??_convertCANid2Reg^0,f,c
  4768  000E44  3648               	rlcf	(??_convertCANid2Reg+1)^0,f,c
  4769  000E46  3649               	rlcf	(??_convertCANid2Reg+2)^0,f,c
  4770  000E48  364A               	rlcf	(??_convertCANid2Reg+3)^0,f,c
  4771  000E4A  2EE8               	decfsz	wreg,f,c
  4772  000E4C  EF20  F007         	goto	u1155
  4773  000E50  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4774  000E54  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4775  000E58  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4776  000E5C  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4777  000E60                     
  4778                           ;mcc_generated_files/ecan.c: 492:         *passedInSIDL = 0xFF & tempPassedInID;
  4779  000E60  C045  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  4780  000E64  C046  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  4781  000E68  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4782  000E6C  EFEC  F006         	goto	l3920
  4783  000E70                     l554:
  4784  000E70  0012               	return		;funcret
  4785  000E72                     __end_of_convertCANid2Reg:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function _SYSTEM_Initialize *****************
  4789 ;; Defined at:
  4790 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; Hardware stack levels required when called: 5
  4811 ;; This function calls:
  4812 ;;		_ECAN_Initialize
  4813 ;;		_EUSART1_Initialize
  4814 ;;		_INTERRUPT_Initialize
  4815 ;;		_OSCILLATOR_Initialize
  4816 ;;		_PIN_MANAGER_Initialize
  4817 ;; This function is called by:
  4818 ;;		_main
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text21
  4823  001AB2                     __ptext21:
  4824                           	callstack 0
  4825  001AB2                     _SYSTEM_Initialize:
  4826                           	callstack 25
  4827  001AB2                     
  4828                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4829  001AB2  EC81  F00D         	call	_INTERRUPT_Initialize	;wreg free
  4830  001AB6                     
  4831                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4832  001AB6  ECCE  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  4833  001ABA                     
  4834                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4835  001ABA  EC64  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  4836  001ABE                     
  4837                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  4838  001ABE  ECAF  F00C         	call	_EUSART1_Initialize	;wreg free
  4839  001AC2                     
  4840                           ;mcc_generated_files/mcc.c: 57:     ECAN_Initialize();
  4841  001AC2  ECAD  F005         	call	_ECAN_Initialize	;wreg free
  4842  001AC6  0012               	return		;funcret
  4843  001AC8                     __end_of_SYSTEM_Initialize:
  4844                           	callstack 0
  4845                           
  4846 ;; *************** function _PIN_MANAGER_Initialize *****************
  4847 ;; Defined at:
  4848 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4866 ;;Total ram usage:        0 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; Hardware stack levels required when called: 3
  4869 ;; This function calls:
  4870 ;;		Nothing
  4871 ;; This function is called by:
  4872 ;;		_SYSTEM_Initialize
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text22
  4877  00199C                     __ptext22:
  4878                           	callstack 0
  4879  00199C                     _PIN_MANAGER_Initialize:
  4880                           	callstack 26
  4881  00199C                     
  4882                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4883  00199C  0E00               	movlw	0
  4884  00199E  6E8D               	movwf	141,c	;volatile
  4885                           
  4886                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4887  0019A0  0E00               	movlw	0
  4888  0019A2  6E8C               	movwf	140,c	;volatile
  4889                           
  4890                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4891  0019A4  0E00               	movlw	0
  4892  0019A6  6E89               	movwf	137,c	;volatile
  4893                           
  4894                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4895  0019A8  0E00               	movlw	0
  4896  0019AA  6E8A               	movwf	138,c	;volatile
  4897                           
  4898                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4899  0019AC  0E00               	movlw	0
  4900  0019AE  6E8B               	movwf	139,c	;volatile
  4901                           
  4902                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  4903  0019B0  0E07               	movlw	7
  4904  0019B2  6E96               	movwf	150,c	;volatile
  4905                           
  4906                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xCF;
  4907  0019B4  0ECF               	movlw	207
  4908  0019B6  6E92               	movwf	146,c	;volatile
  4909                           
  4910                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFB;
  4911  0019B8  0EFB               	movlw	251
  4912  0019BA  6E93               	movwf	147,c	;volatile
  4913                           
  4914                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  4915  0019BC  0EBF               	movlw	191
  4916  0019BE  6E94               	movwf	148,c	;volatile
  4917  0019C0                     
  4918                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  4919  0019C0  6895               	setf	149,c	;volatile
  4920                           
  4921                           ;mcc_generated_files/pin_manager.c: 78:     ANCON0 = 0xF0;
  4922  0019C2  0EF0               	movlw	240
  4923  0019C4  010F               	movlb	15	; () banked
  4924  0019C6  6F5D               	movwf	93,b	;volatile
  4925                           
  4926                           ;mcc_generated_files/pin_manager.c: 79:     ANCON1 = 0x67;
  4927  0019C8  0E67               	movlw	103
  4928  0019CA  6F5C               	movwf	92,b	;volatile
  4929                           
  4930                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  4931  0019CC  0E00               	movlw	0
  4932  0019CE  6F5B               	movwf	91,b	;volatile
  4933  0019D0                     
  4934                           ; BSR set to: 15
  4935                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  4936  0019D0  8EF1               	bsf	241,7,c	;volatile
  4937  0019D2                     
  4938                           ; BSR set to: 15
  4939  0019D2  0012               	return		;funcret
  4940  0019D4                     __end_of_PIN_MANAGER_Initialize:
  4941                           	callstack 0
  4942                           
  4943 ;; *************** function _OSCILLATOR_Initialize *****************
  4944 ;; Defined at:
  4945 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; Hardware stack levels required when called: 3
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_SYSTEM_Initialize
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text23
  4974  001AC8                     __ptext23:
  4975                           	callstack 0
  4976  001AC8                     _OSCILLATOR_Initialize:
  4977                           	callstack 26
  4978  001AC8                     
  4979                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  4980  001AC8  0E60               	movlw	96
  4981  001ACA  6ED3               	movwf	211,c	;volatile
  4982                           
  4983                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
  4984  001ACC  0E00               	movlw	0
  4985  001ACE  6ED2               	movwf	210,c	;volatile
  4986                           
  4987                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  4988  001AD0  0E00               	movlw	0
  4989  001AD2  6E9B               	movwf	155,c	;volatile
  4990                           
  4991                           ;mcc_generated_files/mcc.c: 69:     REFOCON = 0x00;
  4992  001AD4  0E00               	movlw	0
  4993  001AD6  6E9A               	movwf	154,c	;volatile
  4994  001AD8  0012               	return		;funcret
  4995  001ADA                     __end_of_OSCILLATOR_Initialize:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function _INTERRUPT_Initialize *****************
  4999 ;; Defined at:
  5000 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;		None
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;		None
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      void 
  5007 ;; Registers used:
  5008 ;;		None
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5018 ;;Total ram usage:        0 bytes
  5019 ;; Hardware stack levels used: 1
  5020 ;; Hardware stack levels required when called: 3
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_SYSTEM_Initialize
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text24
  5029  001B02                     __ptext24:
  5030                           	callstack 0
  5031  001B02                     _INTERRUPT_Initialize:
  5032                           	callstack 26
  5033  001B02                     
  5034                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5035  001B02  9ED0               	bcf	208,7,c	;volatile
  5036  001B04  0012               	return		;funcret
  5037  001B06                     __end_of_INTERRUPT_Initialize:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function _EUSART1_Initialize *****************
  5041 ;; Defined at:
  5042 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;Total ram usage:        0 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; Hardware stack levels required when called: 4
  5063 ;; This function calls:
  5064 ;;		_EUSART1_SetErrorHandler
  5065 ;;		_EUSART1_SetFramingErrorHandler
  5066 ;;		_EUSART1_SetOverrunErrorHandler
  5067 ;; This function is called by:
  5068 ;;		_SYSTEM_Initialize
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text25
  5073  00195E                     __ptext25:
  5074                           	callstack 0
  5075  00195E                     _EUSART1_Initialize:
  5076                           	callstack 25
  5077  00195E                     
  5078                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5079  00195E  0E08               	movlw	8
  5080  001960  6EA7               	movwf	167,c	;volatile
  5081                           
  5082                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x80;
  5083  001962  0E80               	movlw	128
  5084  001964  6EAB               	movwf	171,c	;volatile
  5085                           
  5086                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5087  001966  0E24               	movlw	36
  5088  001968  6EAC               	movwf	172,c	;volatile
  5089                           
  5090                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x08;
  5091  00196A  0E08               	movlw	8
  5092  00196C  6EAF               	movwf	175,c	;volatile
  5093                           
  5094                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x02;
  5095  00196E  0E02               	movlw	2
  5096  001970  6E7D               	movwf	125,c	;volatile
  5097  001972                     
  5098                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5099  001972  0E00               	movlw	0
  5100  001974  6E3A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5101  001976  0E00               	movlw	0
  5102  001978  6E3B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5103  00197A  EC72  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5104  00197E                     
  5105                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5106  00197E  0E00               	movlw	0
  5107  001980  6E3A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5108  001982  0E00               	movlw	0
  5109  001984  6E3B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5110  001986  EC6D  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5111  00198A                     
  5112                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5113  00198A  0E00               	movlw	0
  5114  00198C  6E3A               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5115  00198E  0E00               	movlw	0
  5116  001990  6E3B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5117  001992  EC77  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  5118  001996                     
  5119                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5120  001996  0E00               	movlw	0
  5121  001998  6E1D               	movwf	_eusart1RxLastError^0,c	;volatile
  5122  00199A  0012               	return		;funcret
  5123  00199C                     __end_of_EUSART1_Initialize:
  5124                           	callstack 0
  5125                           
  5126 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5127 ;; Defined at:
  5128 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  5131 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      void 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5147 ;;Total ram usage:        2 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; Hardware stack levels required when called: 3
  5150 ;; This function calls:
  5151 ;;		Nothing
  5152 ;; This function is called by:
  5153 ;;		_EUSART1_Initialize
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text26
  5158  001ADA                     __ptext26:
  5159                           	callstack 0
  5160  001ADA                     _EUSART1_SetOverrunErrorHandler:
  5161                           	callstack 25
  5162  001ADA                     
  5163                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  5164  001ADA  C03A  F056         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5165  001ADE  C03B  F057         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5166  001AE2  0012               	return		;funcret
  5167  001AE4                     __end_of_EUSART1_SetOverrunErrorHandler:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5171 ;; Defined at:
  5172 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  5175 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5191 ;;Total ram usage:        2 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 3
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_EUSART1_Initialize
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text27
  5202  001AE4                     __ptext27:
  5203                           	callstack 0
  5204  001AE4                     _EUSART1_SetFramingErrorHandler:
  5205                           	callstack 25
  5206  001AE4                     
  5207                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  5208  001AE4  C03A  F058         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5209  001AE8  C03B  F059         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5210  001AEC  0012               	return		;funcret
  5211  001AEE                     __end_of_EUSART1_SetFramingErrorHandler:
  5212                           	callstack 0
  5213                           
  5214 ;; *************** function _EUSART1_SetErrorHandler *****************
  5215 ;; Defined at:
  5216 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  5219 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5235 ;;Total ram usage:        2 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; Hardware stack levels required when called: 3
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_EUSART1_Initialize
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text28
  5246  001AEE                     __ptext28:
  5247                           	callstack 0
  5248  001AEE                     _EUSART1_SetErrorHandler:
  5249                           	callstack 25
  5250  001AEE                     
  5251                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  5252  001AEE  C03A  F0C6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5253  001AF2  C03B  F0C7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5254  001AF6  0012               	return		;funcret
  5255  001AF8                     __end_of_EUSART1_SetErrorHandler:
  5256                           	callstack 0
  5257                           
  5258 ;; *************** function _ECAN_Initialize *****************
  5259 ;; Defined at:
  5260 ;;		line 65 in file "mcc_generated_files/ecan.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;Total ram usage:        1 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 4
  5281 ;; This function calls:
  5282 ;;		_ECAN_SetWakeUpInterruptHandler
  5283 ;; This function is called by:
  5284 ;;		_SYSTEM_Initialize
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text29
  5289  000B5A                     __ptext29:
  5290                           	callstack 0
  5291  000B5A                     _ECAN_Initialize:
  5292                           	callstack 25
  5293  000B5A                     
  5294                           ;mcc_generated_files/ecan.c: 67:     CANCON = 0x80;
  5295  000B5A  0E80               	movlw	128
  5296  000B5C  6E6F               	movwf	111,c	;volatile
  5297  000B5E                     l3954:
  5298  000B5E  506E               	movf	110,w,c	;volatile
  5299  000B60  0BE0               	andlw	224
  5300  000B62  0A80               	xorlw	128
  5301  000B64  A4D8               	btfss	status,2,c
  5302  000B66  EFB7  F005         	goto	u1161
  5303  000B6A  EFB9  F005         	goto	u1160
  5304  000B6E                     u1161:
  5305  000B6E  EFAF  F005         	goto	l3954
  5306  000B72                     u1160:
  5307  000B72                     
  5308                           ;mcc_generated_files/ecan.c: 73:     ECANCON = 0x40;
  5309  000B72  0E40               	movlw	64
  5310  000B74  6E72               	movwf	114,c	;volatile
  5311                           
  5312                           ;mcc_generated_files/ecan.c: 78:     CIOCON = 0x20;
  5313  000B76  0E20               	movlw	32
  5314  000B78  6E70               	movwf	112,c	;volatile
  5315                           
  5316                           ;mcc_generated_files/ecan.c: 92:     BSEL0 = 0x00;
  5317  000B7A  0E00               	movlw	0
  5318  000B7C  010E               	movlb	14	; () banked
  5319  000B7E  6F7D               	movwf	125,b	;volatile
  5320  000B80                     
  5321                           ; BSR set to: 14
  5322                           ;mcc_generated_files/ecan.c: 97:     RXM0EIDH = 0xFF;
  5323  000B80  69FA               	setf	250,b	;volatile
  5324  000B82                     
  5325                           ; BSR set to: 14
  5326                           ;mcc_generated_files/ecan.c: 98:     RXM0EIDL = 0xFF;
  5327  000B82  69FB               	setf	251,b	;volatile
  5328  000B84                     
  5329                           ; BSR set to: 14
  5330                           ;mcc_generated_files/ecan.c: 99:     RXM0SIDH = 0xFF;
  5331  000B84  69F8               	setf	248,b	;volatile
  5332                           
  5333                           ;mcc_generated_files/ecan.c: 100:     RXM0SIDL = 0xE3;
  5334  000B86  0EE3               	movlw	227
  5335  000B88  6FF9               	movwf	249,b	;volatile
  5336  000B8A                     
  5337                           ; BSR set to: 14
  5338                           ;mcc_generated_files/ecan.c: 101:     RXM1EIDH = 0xFF;
  5339  000B8A  69FE               	setf	254,b	;volatile
  5340  000B8C                     
  5341                           ; BSR set to: 14
  5342                           ;mcc_generated_files/ecan.c: 102:     RXM1EIDL = 0xFF;
  5343  000B8C  69FF               	setf	255,b	;volatile
  5344  000B8E                     
  5345                           ; BSR set to: 14
  5346                           ;mcc_generated_files/ecan.c: 103:     RXM1SIDH = 0xFF;
  5347  000B8E  69FC               	setf	252,b	;volatile
  5348                           
  5349                           ;mcc_generated_files/ecan.c: 104:     RXM1SIDL = 0xE3;
  5350  000B90  0EE3               	movlw	227
  5351  000B92  6FFD               	movwf	253,b	;volatile
  5352                           
  5353                           ;mcc_generated_files/ecan.c: 109:     RXFCON0 = 0x01;
  5354  000B94  0E01               	movlw	1
  5355  000B96  6F46               	movwf	70,b	;volatile
  5356                           
  5357                           ;mcc_generated_files/ecan.c: 110:     RXFCON1 = 0x00;
  5358  000B98  0E00               	movlw	0
  5359  000B9A  6F47               	movwf	71,b	;volatile
  5360                           
  5361                           ;mcc_generated_files/ecan.c: 114:     MSEL0 = 0x00;
  5362  000B9C  0E00               	movlw	0
  5363  000B9E  6F79               	movwf	121,b	;volatile
  5364                           
  5365                           ;mcc_generated_files/ecan.c: 115:     MSEL1 = 0x00;
  5366  000BA0  0E00               	movlw	0
  5367  000BA2  6F7A               	movwf	122,b	;volatile
  5368                           
  5369                           ;mcc_generated_files/ecan.c: 116:     MSEL2 = 0x00;
  5370  000BA4  0E00               	movlw	0
  5371  000BA6  6F7B               	movwf	123,b	;volatile
  5372                           
  5373                           ;mcc_generated_files/ecan.c: 117:     MSEL3 = 0x00;
  5374  000BA8  0E00               	movlw	0
  5375  000BAA  6F7C               	movwf	124,b	;volatile
  5376                           
  5377                           ;mcc_generated_files/ecan.c: 122:     RXFBCON0 = 0x00;
  5378  000BAC  0E00               	movlw	0
  5379  000BAE  6F71               	movwf	113,b	;volatile
  5380                           
  5381                           ;mcc_generated_files/ecan.c: 123:     RXFBCON1 = 0x00;
  5382  000BB0  0E00               	movlw	0
  5383  000BB2  6F72               	movwf	114,b	;volatile
  5384                           
  5385                           ;mcc_generated_files/ecan.c: 124:     RXFBCON2 = 0x00;
  5386  000BB4  0E00               	movlw	0
  5387  000BB6  6F73               	movwf	115,b	;volatile
  5388                           
  5389                           ;mcc_generated_files/ecan.c: 125:     RXFBCON3 = 0x00;
  5390  000BB8  0E00               	movlw	0
  5391  000BBA  6F74               	movwf	116,b	;volatile
  5392                           
  5393                           ;mcc_generated_files/ecan.c: 126:     RXFBCON4 = 0x00;
  5394  000BBC  0E00               	movlw	0
  5395  000BBE  6F75               	movwf	117,b	;volatile
  5396                           
  5397                           ;mcc_generated_files/ecan.c: 127:     RXFBCON5 = 0x00;
  5398  000BC0  0E00               	movlw	0
  5399  000BC2  6F76               	movwf	118,b	;volatile
  5400                           
  5401                           ;mcc_generated_files/ecan.c: 128:     RXFBCON6 = 0x00;
  5402  000BC4  0E00               	movlw	0
  5403  000BC6  6F77               	movwf	119,b	;volatile
  5404                           
  5405                           ;mcc_generated_files/ecan.c: 129:     RXFBCON7 = 0x00;
  5406  000BC8  0E00               	movlw	0
  5407  000BCA  6F78               	movwf	120,b	;volatile
  5408                           
  5409                           ;mcc_generated_files/ecan.c: 134:     RXF0EIDH = 0x00;
  5410  000BCC  0E00               	movlw	0
  5411  000BCE  6FE2               	movwf	226,b	;volatile
  5412                           
  5413                           ;mcc_generated_files/ecan.c: 135:     RXF0EIDL = 0x00;
  5414  000BD0  0E00               	movlw	0
  5415  000BD2  6FE3               	movwf	227,b	;volatile
  5416                           
  5417                           ;mcc_generated_files/ecan.c: 136:     RXF0SIDH = 0x02;
  5418  000BD4  0E02               	movlw	2
  5419  000BD6  6FE0               	movwf	224,b	;volatile
  5420                           
  5421                           ;mcc_generated_files/ecan.c: 137:     RXF0SIDL = 0xC0;
  5422  000BD8  0EC0               	movlw	192
  5423  000BDA  6FE1               	movwf	225,b	;volatile
  5424                           
  5425                           ;mcc_generated_files/ecan.c: 138:     RXF1EIDH = 0x00;
  5426  000BDC  0E00               	movlw	0
  5427  000BDE  6FE6               	movwf	230,b	;volatile
  5428                           
  5429                           ;mcc_generated_files/ecan.c: 139:     RXF1EIDL = 0x00;
  5430  000BE0  0E00               	movlw	0
  5431  000BE2  6FE7               	movwf	231,b	;volatile
  5432                           
  5433                           ;mcc_generated_files/ecan.c: 140:     RXF1SIDH = 0x00;
  5434  000BE4  0E00               	movlw	0
  5435  000BE6  6FE4               	movwf	228,b	;volatile
  5436                           
  5437                           ;mcc_generated_files/ecan.c: 141:     RXF1SIDL = 0x00;
  5438  000BE8  0E00               	movlw	0
  5439  000BEA  6FE5               	movwf	229,b	;volatile
  5440                           
  5441                           ;mcc_generated_files/ecan.c: 142:     RXF2EIDH = 0x00;
  5442  000BEC  0E00               	movlw	0
  5443  000BEE  6FEA               	movwf	234,b	;volatile
  5444                           
  5445                           ;mcc_generated_files/ecan.c: 143:     RXF2EIDL = 0x00;
  5446  000BF0  0E00               	movlw	0
  5447  000BF2  6FEB               	movwf	235,b	;volatile
  5448                           
  5449                           ;mcc_generated_files/ecan.c: 144:     RXF2SIDH = 0x00;
  5450  000BF4  0E00               	movlw	0
  5451  000BF6  6FE8               	movwf	232,b	;volatile
  5452                           
  5453                           ;mcc_generated_files/ecan.c: 145:     RXF2SIDL = 0x00;
  5454  000BF8  0E00               	movlw	0
  5455  000BFA  6FE9               	movwf	233,b	;volatile
  5456                           
  5457                           ;mcc_generated_files/ecan.c: 146:     RXF3EIDH = 0x00;
  5458  000BFC  0E00               	movlw	0
  5459  000BFE  6FEE               	movwf	238,b	;volatile
  5460                           
  5461                           ;mcc_generated_files/ecan.c: 147:     RXF3EIDL = 0x00;
  5462  000C00  0E00               	movlw	0
  5463  000C02  6FEF               	movwf	239,b	;volatile
  5464                           
  5465                           ;mcc_generated_files/ecan.c: 148:     RXF3SIDH = 0x00;
  5466  000C04  0E00               	movlw	0
  5467  000C06  6FEC               	movwf	236,b	;volatile
  5468                           
  5469                           ;mcc_generated_files/ecan.c: 149:     RXF3SIDL = 0x00;
  5470  000C08  0E00               	movlw	0
  5471  000C0A  6FED               	movwf	237,b	;volatile
  5472                           
  5473                           ;mcc_generated_files/ecan.c: 150:     RXF4EIDH = 0x00;
  5474  000C0C  0E00               	movlw	0
  5475  000C0E  6FF2               	movwf	242,b	;volatile
  5476                           
  5477                           ;mcc_generated_files/ecan.c: 151:     RXF4EIDL = 0x00;
  5478  000C10  0E00               	movlw	0
  5479  000C12  6FF3               	movwf	243,b	;volatile
  5480                           
  5481                           ;mcc_generated_files/ecan.c: 152:     RXF4SIDH = 0x00;
  5482  000C14  0E00               	movlw	0
  5483  000C16  6FF0               	movwf	240,b	;volatile
  5484                           
  5485                           ;mcc_generated_files/ecan.c: 153:     RXF4SIDL = 0x00;
  5486  000C18  0E00               	movlw	0
  5487  000C1A  6FF1               	movwf	241,b	;volatile
  5488                           
  5489                           ;mcc_generated_files/ecan.c: 154:     RXF5EIDH = 0x00;
  5490  000C1C  0E00               	movlw	0
  5491  000C1E  6FF6               	movwf	246,b	;volatile
  5492                           
  5493                           ;mcc_generated_files/ecan.c: 155:     RXF5EIDL = 0x00;
  5494  000C20  0E00               	movlw	0
  5495  000C22  6FF7               	movwf	247,b	;volatile
  5496                           
  5497                           ;mcc_generated_files/ecan.c: 156:     RXF5SIDH = 0x00;
  5498  000C24  0E00               	movlw	0
  5499  000C26  6FF4               	movwf	244,b	;volatile
  5500                           
  5501                           ;mcc_generated_files/ecan.c: 157:     RXF5SIDL = 0x00;
  5502  000C28  0E00               	movlw	0
  5503  000C2A  6FF5               	movwf	245,b	;volatile
  5504                           
  5505                           ;mcc_generated_files/ecan.c: 159:     RXF6EIDH = 0x00;
  5506  000C2C  0E00               	movlw	0
  5507  000C2E  6F4A               	movwf	74,b	;volatile
  5508                           
  5509                           ;mcc_generated_files/ecan.c: 160:     RXF6EIDL = 0x00;
  5510  000C30  0E00               	movlw	0
  5511  000C32  6F4B               	movwf	75,b	;volatile
  5512                           
  5513                           ;mcc_generated_files/ecan.c: 161:     RXF6SIDH = 0x00;
  5514  000C34  0E00               	movlw	0
  5515  000C36  6F48               	movwf	72,b	;volatile
  5516                           
  5517                           ;mcc_generated_files/ecan.c: 162:     RXF6SIDL = 0x00;
  5518  000C38  0E00               	movlw	0
  5519  000C3A  6F49               	movwf	73,b	;volatile
  5520                           
  5521                           ;mcc_generated_files/ecan.c: 163:     RXF7EIDH = 0x00;
  5522  000C3C  0E00               	movlw	0
  5523  000C3E  6F4E               	movwf	78,b	;volatile
  5524                           
  5525                           ;mcc_generated_files/ecan.c: 164:     RXF7EIDL = 0x00;
  5526  000C40  0E00               	movlw	0
  5527  000C42  6F4F               	movwf	79,b	;volatile
  5528                           
  5529                           ;mcc_generated_files/ecan.c: 165:     RXF7SIDH = 0x00;
  5530  000C44  0E00               	movlw	0
  5531  000C46  6F4C               	movwf	76,b	;volatile
  5532                           
  5533                           ;mcc_generated_files/ecan.c: 166:     RXF7SIDL = 0x00;
  5534  000C48  0E00               	movlw	0
  5535  000C4A  6F4D               	movwf	77,b	;volatile
  5536                           
  5537                           ;mcc_generated_files/ecan.c: 167:     RXF8EIDH = 0x00;
  5538  000C4C  0E00               	movlw	0
  5539  000C4E  6F52               	movwf	82,b	;volatile
  5540                           
  5541                           ;mcc_generated_files/ecan.c: 168:     RXF8EIDL = 0x00;
  5542  000C50  0E00               	movlw	0
  5543  000C52  6F53               	movwf	83,b	;volatile
  5544                           
  5545                           ;mcc_generated_files/ecan.c: 169:     RXF8SIDH = 0x00;
  5546  000C54  0E00               	movlw	0
  5547  000C56  6F50               	movwf	80,b	;volatile
  5548                           
  5549                           ;mcc_generated_files/ecan.c: 170:     RXF8SIDL = 0x00;
  5550  000C58  0E00               	movlw	0
  5551  000C5A  6F51               	movwf	81,b	;volatile
  5552                           
  5553                           ;mcc_generated_files/ecan.c: 171:     RXF9EIDH = 0x00;
  5554  000C5C  0E00               	movlw	0
  5555  000C5E  6F56               	movwf	86,b	;volatile
  5556                           
  5557                           ;mcc_generated_files/ecan.c: 172:     RXF9EIDL = 0x00;
  5558  000C60  0E00               	movlw	0
  5559  000C62  6F57               	movwf	87,b	;volatile
  5560                           
  5561                           ;mcc_generated_files/ecan.c: 173:     RXF9SIDH = 0x00;
  5562  000C64  0E00               	movlw	0
  5563  000C66  6F54               	movwf	84,b	;volatile
  5564                           
  5565                           ;mcc_generated_files/ecan.c: 174:     RXF9SIDL = 0x00;
  5566  000C68  0E00               	movlw	0
  5567  000C6A  6F55               	movwf	85,b	;volatile
  5568                           
  5569                           ;mcc_generated_files/ecan.c: 175:     RXF10EIDH = 0x00;
  5570  000C6C  0E00               	movlw	0
  5571  000C6E  6F5A               	movwf	90,b	;volatile
  5572                           
  5573                           ;mcc_generated_files/ecan.c: 176:     RXF10EIDL = 0x00;
  5574  000C70  0E00               	movlw	0
  5575  000C72  6F5B               	movwf	91,b	;volatile
  5576                           
  5577                           ;mcc_generated_files/ecan.c: 177:     RXF10SIDH = 0x00;
  5578  000C74  0E00               	movlw	0
  5579  000C76  6F58               	movwf	88,b	;volatile
  5580                           
  5581                           ;mcc_generated_files/ecan.c: 178:     RXF10SIDL = 0x00;
  5582  000C78  0E00               	movlw	0
  5583  000C7A  6F59               	movwf	89,b	;volatile
  5584                           
  5585                           ;mcc_generated_files/ecan.c: 179:     RXF11EIDH = 0x00;
  5586  000C7C  0E00               	movlw	0
  5587  000C7E  6F5E               	movwf	94,b	;volatile
  5588                           
  5589                           ;mcc_generated_files/ecan.c: 180:     RXF11EIDL = 0x00;
  5590  000C80  0E00               	movlw	0
  5591  000C82  6F5F               	movwf	95,b	;volatile
  5592                           
  5593                           ;mcc_generated_files/ecan.c: 181:     RXF11SIDH = 0x00;
  5594  000C84  0E00               	movlw	0
  5595  000C86  6F5C               	movwf	92,b	;volatile
  5596                           
  5597                           ;mcc_generated_files/ecan.c: 182:     RXF11SIDL = 0x00;
  5598  000C88  0E00               	movlw	0
  5599  000C8A  6F5D               	movwf	93,b	;volatile
  5600                           
  5601                           ;mcc_generated_files/ecan.c: 183:     RXF12EIDH = 0x00;
  5602  000C8C  0E00               	movlw	0
  5603  000C8E  6F62               	movwf	98,b	;volatile
  5604                           
  5605                           ;mcc_generated_files/ecan.c: 184:     RXF12EIDL = 0x00;
  5606  000C90  0E00               	movlw	0
  5607  000C92  6F63               	movwf	99,b	;volatile
  5608                           
  5609                           ;mcc_generated_files/ecan.c: 185:     RXF12SIDH = 0x00;
  5610  000C94  0E00               	movlw	0
  5611  000C96  6F60               	movwf	96,b	;volatile
  5612                           
  5613                           ;mcc_generated_files/ecan.c: 186:     RXF12SIDL = 0x00;
  5614  000C98  0E00               	movlw	0
  5615  000C9A  6F61               	movwf	97,b	;volatile
  5616                           
  5617                           ;mcc_generated_files/ecan.c: 187:     RXF13EIDH = 0x00;
  5618  000C9C  0E00               	movlw	0
  5619  000C9E  6F66               	movwf	102,b	;volatile
  5620                           
  5621                           ;mcc_generated_files/ecan.c: 188:     RXF13EIDL = 0x00;
  5622  000CA0  0E00               	movlw	0
  5623  000CA2  6F67               	movwf	103,b	;volatile
  5624                           
  5625                           ;mcc_generated_files/ecan.c: 189:     RXF13SIDH = 0x00;
  5626  000CA4  0E00               	movlw	0
  5627  000CA6  6F64               	movwf	100,b	;volatile
  5628                           
  5629                           ;mcc_generated_files/ecan.c: 190:     RXF13SIDL = 0x00;
  5630  000CA8  0E00               	movlw	0
  5631  000CAA  6F65               	movwf	101,b	;volatile
  5632                           
  5633                           ;mcc_generated_files/ecan.c: 191:     RXF14EIDH = 0x00;
  5634  000CAC  0E00               	movlw	0
  5635  000CAE  6F6A               	movwf	106,b	;volatile
  5636                           
  5637                           ;mcc_generated_files/ecan.c: 192:     RXF14EIDL = 0x00;
  5638  000CB0  0E00               	movlw	0
  5639  000CB2  6F6B               	movwf	107,b	;volatile
  5640                           
  5641                           ;mcc_generated_files/ecan.c: 193:     RXF14SIDH = 0x00;
  5642  000CB4  0E00               	movlw	0
  5643  000CB6  6F68               	movwf	104,b	;volatile
  5644                           
  5645                           ;mcc_generated_files/ecan.c: 194:     RXF14SIDL = 0x00;
  5646  000CB8  0E00               	movlw	0
  5647  000CBA  6F69               	movwf	105,b	;volatile
  5648  000CBC                     
  5649                           ; BSR set to: 14
  5650                           ;mcc_generated_files/ecan.c: 195:     RXF15EIDH = 0xFF;
  5651  000CBC  696E               	setf	110,b	;volatile
  5652  000CBE                     
  5653                           ; BSR set to: 14
  5654                           ;mcc_generated_files/ecan.c: 196:     RXF15EIDL = 0xFF;
  5655  000CBE  696F               	setf	111,b	;volatile
  5656  000CC0                     
  5657                           ; BSR set to: 14
  5658                           ;mcc_generated_files/ecan.c: 197:     RXF15SIDH = 0xFF;
  5659  000CC0  696C               	setf	108,b	;volatile
  5660                           
  5661                           ;mcc_generated_files/ecan.c: 198:     RXF15SIDL = 0xE3;
  5662  000CC2  0EE3               	movlw	227
  5663  000CC4  6F6D               	movwf	109,b	;volatile
  5664                           
  5665                           ;mcc_generated_files/ecan.c: 213:     BRGCON1 = 0x13;
  5666  000CC6  0E13               	movlw	19
  5667  000CC8  6F43               	movwf	67,b	;volatile
  5668                           
  5669                           ;mcc_generated_files/ecan.c: 214:     BRGCON2 = 0xA8;
  5670  000CCA  0EA8               	movlw	168
  5671  000CCC  6F44               	movwf	68,b	;volatile
  5672                           
  5673                           ;mcc_generated_files/ecan.c: 215:     BRGCON3 = 0x01;
  5674  000CCE  0E01               	movlw	1
  5675  000CD0  6F45               	movwf	69,b	;volatile
  5676  000CD2                     
  5677                           ; BSR set to: 14
  5678                           ;mcc_generated_files/ecan.c: 217:     ECAN_SetWakeUpInterruptHandler(WakeUpDefaultInterr
      +                          uptHandler);
  5679  000CD2  0E06               	movlw	low _WakeUpDefaultInterruptHandler
  5680  000CD4  6E3A               	movwf	ECAN_SetWakeUpInterruptHandler@handler^0,c
  5681  000CD6  0E1B               	movlw	high _WakeUpDefaultInterruptHandler
  5682  000CD8  6E3B               	movwf	(ECAN_SetWakeUpInterruptHandler@handler+1)^0,c
  5683  000CDA  EC7C  F00D         	call	_ECAN_SetWakeUpInterruptHandler	;wreg free
  5684  000CDE                     
  5685                           ;mcc_generated_files/ecan.c: 218:     PIR5bits.WAKIF = 0;
  5686  000CDE  9C77               	bcf	119,6,c	;volatile
  5687  000CE0                     
  5688                           ;mcc_generated_files/ecan.c: 219:     PIE5bits.WAKIE = 1;
  5689  000CE0  8C76               	bsf	118,6,c	;volatile
  5690  000CE2                     
  5691                           ;mcc_generated_files/ecan.c: 221:     CANCON = 0x00;
  5692  000CE2  0E00               	movlw	0
  5693  000CE4  6E6F               	movwf	111,c	;volatile
  5694  000CE6                     l3984:
  5695  000CE6  CF6E F03C          	movff	3950,??_ECAN_Initialize	;volatile
  5696  000CEA  0EE0               	movlw	224
  5697  000CEC  163C               	andwf	??_ECAN_Initialize^0,f,c
  5698  000CEE  A4D8               	btfss	status,2,c
  5699  000CF0  EF7C  F006         	goto	u1171
  5700  000CF4  EF7E  F006         	goto	u1170
  5701  000CF8                     u1171:
  5702  000CF8  EF73  F006         	goto	l3984
  5703  000CFC                     u1170:
  5704  000CFC  0012               	return		;funcret
  5705  000CFE                     __end_of_ECAN_Initialize:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function _ECAN_SetWakeUpInterruptHandler *****************
  5709 ;; Defined at:
  5710 ;;		line 498 in file "mcc_generated_files/ecan.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  handler         2    2[COMRAM] PTR FTN()void 
  5713 ;;		 -> WakeUpDefaultInterruptHandler(1), 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5729 ;;Total ram usage:        2 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; Hardware stack levels required when called: 3
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_ECAN_Initialize
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text30
  5740  001AF8                     __ptext30:
  5741                           	callstack 0
  5742  001AF8                     _ECAN_SetWakeUpInterruptHandler:
  5743                           	callstack 25
  5744  001AF8                     
  5745                           ;mcc_generated_files/ecan.c: 498: void ECAN_SetWakeUpInterruptHandler(void (*handler)(vo
      +                          id));mcc_generated_files/ecan.c: 499: {;mcc_generated_files/ecan.c: 500:     WakeUpInter
      +                          ruptHandler = handler;
  5746  001AF8  C03A  F01B         	movff	ECAN_SetWakeUpInterruptHandler@handler,_WakeUpInterruptHandler
  5747  001AFC  C03B  F01C         	movff	ECAN_SetWakeUpInterruptHandler@handler+1,_WakeUpInterruptHandler+1
  5748  001B00  0012               	return		;funcret
  5749  001B02                     __end_of_ECAN_SetWakeUpInterruptHandler:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function _CAN_receive *****************
  5753 ;; Defined at:
  5754 ;;		line 313 in file "mcc_generated_files/ecan.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  tempCanMsg      2   21[COMRAM] PTR struct .
  5757 ;;		 -> rx(14), 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  returnValue     1   23[COMRAM] unsigned char 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      unsigned char 
  5762 ;; Registers used:
  5763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5772 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5773 ;;Total ram usage:        3 bytes
  5774 ;; Hardware stack levels used: 1
  5775 ;; Hardware stack levels required when called: 4
  5776 ;; This function calls:
  5777 ;;		_convertReg2ExtendedCANid
  5778 ;;		_convertReg2StandardCANid
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text31
  5785  000906                     __ptext31:
  5786                           	callstack 0
  5787  000906                     _CAN_receive:
  5788                           	callstack 26
  5789  000906                     
  5790                           ;mcc_generated_files/ecan.c: 313: uint8_t CAN_receive(uCAN_MSG *tempCanMsg);mcc_generate
      +                          d_files/ecan.c: 314: {;mcc_generated_files/ecan.c: 315:     uint8_t returnValue = 0;
  5791  000906  0E00               	movlw	0
  5792  000908  6E4F               	movwf	CAN_receive@returnValue^0,c
  5793  00090A                     
  5794                           ;mcc_generated_files/ecan.c: 318:     if (RXB0CONbits.RXFUL != 0)
  5795  00090A  AE60               	btfss	96,7,c	;volatile
  5796  00090C  EF8A  F004         	goto	u1231
  5797  000910  EF8C  F004         	goto	u1230
  5798  000914                     u1231:
  5799  000914  EF18  F005         	goto	l519
  5800  000918                     u1230:
  5801  000918                     
  5802                           ;mcc_generated_files/ecan.c: 319:     {;mcc_generated_files/ecan.c: 320:         if ((RX
      +                          B0SIDL & 0x08) == 0x08)
  5803  000918  A662               	btfss	98,3,c	;volatile
  5804  00091A  EF91  F004         	goto	u1241
  5805  00091E  EF93  F004         	goto	u1240
  5806  000922                     u1241:
  5807  000922  EFB2  F004         	goto	l4396
  5808  000926                     u1240:
  5809  000926                     
  5810                           ;mcc_generated_files/ecan.c: 321:         {;mcc_generated_files/ecan.c: 323:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  5811  000926  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5812  00092A  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5813  00092E  0E02               	movlw	2
  5814  000930  6EDF               	movwf	indf2,c
  5815  000932                     
  5816                           ;mcc_generated_files/ecan.c: 324:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
  5817  000932  CF64 F03A          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  5818  000936  CF61 F03B          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  5819  00093A  CF62 F03C          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  5820  00093E  5063               	movf	99,w,c	;volatile
  5821  000940  EC39  F007         	call	_convertReg2ExtendedCANid
  5822  000944  EE20 F001          	lfsr	2,1
  5823  000948  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5824  00094A  26D9               	addwf	fsr2l,f,c
  5825  00094C  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5826  00094E  22DA               	addwfc	fsr2h,f,c
  5827  000950  C03A  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  5828  000954  C03B  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  5829  000958  C03C  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  5830  00095C  C03D  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  5831                           
  5832                           ;mcc_generated_files/ecan.c: 325:         }
  5833  000960  EFCB  F004         	goto	l4400
  5834  000964                     l4396:
  5835                           
  5836                           ;mcc_generated_files/ecan.c: 327:         {;mcc_generated_files/ecan.c: 329:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  5837  000964  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5838  000968  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5839  00096C  0E01               	movlw	1
  5840  00096E  6EDF               	movwf	indf2,c
  5841  000970                     
  5842                           ;mcc_generated_files/ecan.c: 330:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB0SIDH, RXB0SIDL);
  5843  000970  CF62 F03A          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  5844  000974  5061               	movf	97,w,c	;volatile
  5845  000976  EC73  F00C         	call	_convertReg2StandardCANid
  5846  00097A  EE20 F001          	lfsr	2,1
  5847  00097E  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5848  000980  26D9               	addwf	fsr2l,f,c
  5849  000982  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5850  000984  22DA               	addwfc	fsr2h,f,c
  5851  000986  C03A  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  5852  00098A  C03B  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  5853  00098E  C03C  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  5854  000992  C03D  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  5855  000996                     l4400:
  5856                           
  5857                           ;mcc_generated_files/ecan.c: 333:         tempCanMsg->frame.dlc = RXB0DLC;
  5858  000996  EE20 F005          	lfsr	2,5
  5859  00099A  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5860  00099C  26D9               	addwf	fsr2l,f,c
  5861  00099E  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5862  0009A0  22DA               	addwfc	fsr2h,f,c
  5863  0009A2  CF65 FFDF          	movff	3941,indf2	;volatile
  5864  0009A6                     
  5865                           ;mcc_generated_files/ecan.c: 334:         tempCanMsg->frame.data0 = RXB0D0;
  5866  0009A6  EE20 F006          	lfsr	2,6
  5867  0009AA  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5868  0009AC  26D9               	addwf	fsr2l,f,c
  5869  0009AE  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5870  0009B0  22DA               	addwfc	fsr2h,f,c
  5871  0009B2  CF66 FFDF          	movff	3942,indf2	;volatile
  5872  0009B6                     
  5873                           ;mcc_generated_files/ecan.c: 335:         tempCanMsg->frame.data1 = RXB0D1;
  5874  0009B6  EE20 F007          	lfsr	2,7
  5875  0009BA  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5876  0009BC  26D9               	addwf	fsr2l,f,c
  5877  0009BE  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5878  0009C0  22DA               	addwfc	fsr2h,f,c
  5879  0009C2  CF67 FFDF          	movff	3943,indf2	;volatile
  5880  0009C6                     
  5881                           ;mcc_generated_files/ecan.c: 336:         tempCanMsg->frame.data2 = RXB0D2;
  5882  0009C6  EE20 F008          	lfsr	2,8
  5883  0009CA  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5884  0009CC  26D9               	addwf	fsr2l,f,c
  5885  0009CE  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5886  0009D0  22DA               	addwfc	fsr2h,f,c
  5887  0009D2  CF68 FFDF          	movff	3944,indf2	;volatile
  5888  0009D6                     
  5889                           ;mcc_generated_files/ecan.c: 337:         tempCanMsg->frame.data3 = RXB0D3;
  5890  0009D6  EE20 F009          	lfsr	2,9
  5891  0009DA  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5892  0009DC  26D9               	addwf	fsr2l,f,c
  5893  0009DE  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5894  0009E0  22DA               	addwfc	fsr2h,f,c
  5895  0009E2  CF69 FFDF          	movff	3945,indf2	;volatile
  5896  0009E6                     
  5897                           ;mcc_generated_files/ecan.c: 338:         tempCanMsg->frame.data4 = RXB0D4;
  5898  0009E6  EE20 F00A          	lfsr	2,10
  5899  0009EA  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5900  0009EC  26D9               	addwf	fsr2l,f,c
  5901  0009EE  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5902  0009F0  22DA               	addwfc	fsr2h,f,c
  5903  0009F2  CF6A FFDF          	movff	3946,indf2	;volatile
  5904  0009F6                     
  5905                           ;mcc_generated_files/ecan.c: 339:         tempCanMsg->frame.data5 = RXB0D5;
  5906  0009F6  EE20 F00B          	lfsr	2,11
  5907  0009FA  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5908  0009FC  26D9               	addwf	fsr2l,f,c
  5909  0009FE  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5910  000A00  22DA               	addwfc	fsr2h,f,c
  5911  000A02  CF6B FFDF          	movff	3947,indf2	;volatile
  5912  000A06                     
  5913                           ;mcc_generated_files/ecan.c: 340:         tempCanMsg->frame.data6 = RXB0D6;
  5914  000A06  EE20 F00C          	lfsr	2,12
  5915  000A0A  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5916  000A0C  26D9               	addwf	fsr2l,f,c
  5917  000A0E  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5918  000A10  22DA               	addwfc	fsr2h,f,c
  5919  000A12  CF6C FFDF          	movff	3948,indf2	;volatile
  5920  000A16                     
  5921                           ;mcc_generated_files/ecan.c: 341:         tempCanMsg->frame.data7 = RXB0D7;
  5922  000A16  EE20 F00D          	lfsr	2,13
  5923  000A1A  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5924  000A1C  26D9               	addwf	fsr2l,f,c
  5925  000A1E  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5926  000A20  22DA               	addwfc	fsr2h,f,c
  5927  000A22  CF6D FFDF          	movff	3949,indf2	;volatile
  5928  000A26                     
  5929                           ;mcc_generated_files/ecan.c: 342:         RXB0CONbits.RXFUL = 0;
  5930  000A26  9E60               	bcf	96,7,c	;volatile
  5931  000A28                     l4420:
  5932                           
  5933                           ;mcc_generated_files/ecan.c: 343:         returnValue = 1;
  5934  000A28  0E01               	movlw	1
  5935  000A2A  6E4F               	movwf	CAN_receive@returnValue^0,c
  5936                           
  5937                           ;mcc_generated_files/ecan.c: 344:     }
  5938  000A2C  EFAB  F005         	goto	l4454
  5939  000A30                     l519:
  5940  000A30  010F               	movlb	15	; () banked
  5941  000A32  AF30               	btfss	48,7,b	;volatile
  5942  000A34  EF1E  F005         	goto	u1251
  5943  000A38  EF20  F005         	goto	u1250
  5944  000A3C                     u1251:
  5945  000A3C  EFAB  F005         	goto	l4454
  5946  000A40                     u1250:
  5947  000A40                     
  5948                           ; BSR set to: 15
  5949                           ;mcc_generated_files/ecan.c: 346:     {;mcc_generated_files/ecan.c: 347:         if ((RX
      +                          B1SIDL & 0x08) == 0x08)
  5950  000A40  A732               	btfss	50,3,b	;volatile
  5951  000A42  EF25  F005         	goto	u1261
  5952  000A46  EF27  F005         	goto	u1260
  5953  000A4A                     u1261:
  5954  000A4A  EF46  F005         	goto	l4428
  5955  000A4E                     u1260:
  5956  000A4E                     
  5957                           ; BSR set to: 15
  5958                           ;mcc_generated_files/ecan.c: 348:         {;mcc_generated_files/ecan.c: 350:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  5959  000A4E  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5960  000A52  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5961  000A56  0E02               	movlw	2
  5962  000A58  6EDF               	movwf	indf2,c
  5963  000A5A                     
  5964                           ; BSR set to: 15
  5965                           ;mcc_generated_files/ecan.c: 351:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
  5966  000A5A  CF34 F03A          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  5967  000A5E  CF31 F03B          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  5968  000A62  CF32 F03C          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  5969  000A66  5133               	movf	51,w,b	;volatile
  5970  000A68  EC39  F007         	call	_convertReg2ExtendedCANid
  5971  000A6C  EE20 F001          	lfsr	2,1
  5972  000A70  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5973  000A72  26D9               	addwf	fsr2l,f,c
  5974  000A74  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5975  000A76  22DA               	addwfc	fsr2h,f,c
  5976  000A78  C03A  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  5977  000A7C  C03B  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  5978  000A80  C03C  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  5979  000A84  C03D  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  5980                           
  5981                           ;mcc_generated_files/ecan.c: 352:         }
  5982  000A88  EF5F  F005         	goto	l4432
  5983  000A8C                     l4428:
  5984                           
  5985                           ; BSR set to: 15
  5986                           ;mcc_generated_files/ecan.c: 354:         {;mcc_generated_files/ecan.c: 356:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  5987  000A8C  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5988  000A90  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5989  000A94  0E01               	movlw	1
  5990  000A96  6EDF               	movwf	indf2,c
  5991  000A98                     
  5992                           ; BSR set to: 15
  5993                           ;mcc_generated_files/ecan.c: 357:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB1SIDH, RXB1SIDL);
  5994  000A98  CF32 F03A          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  5995  000A9C  5131               	movf	49,w,b	;volatile
  5996  000A9E  EC73  F00C         	call	_convertReg2StandardCANid
  5997  000AA2  EE20 F001          	lfsr	2,1
  5998  000AA6  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5999  000AA8  26D9               	addwf	fsr2l,f,c
  6000  000AAA  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6001  000AAC  22DA               	addwfc	fsr2h,f,c
  6002  000AAE  C03A  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  6003  000AB2  C03B  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  6004  000AB6  C03C  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  6005  000ABA  C03D  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  6006  000ABE                     l4432:
  6007                           
  6008                           ;mcc_generated_files/ecan.c: 360:         tempCanMsg->frame.dlc = RXB1DLC;
  6009  000ABE  EE20 F005          	lfsr	2,5
  6010  000AC2  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6011  000AC4  26D9               	addwf	fsr2l,f,c
  6012  000AC6  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6013  000AC8  22DA               	addwfc	fsr2h,f,c
  6014  000ACA  CF35 FFDF          	movff	3893,indf2	;volatile
  6015  000ACE                     
  6016                           ;mcc_generated_files/ecan.c: 361:         tempCanMsg->frame.data0 = RXB1D0;
  6017  000ACE  EE20 F006          	lfsr	2,6
  6018  000AD2  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6019  000AD4  26D9               	addwf	fsr2l,f,c
  6020  000AD6  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6021  000AD8  22DA               	addwfc	fsr2h,f,c
  6022  000ADA  CF36 FFDF          	movff	3894,indf2	;volatile
  6023  000ADE                     
  6024                           ;mcc_generated_files/ecan.c: 362:         tempCanMsg->frame.data1 = RXB1D1;
  6025  000ADE  EE20 F007          	lfsr	2,7
  6026  000AE2  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6027  000AE4  26D9               	addwf	fsr2l,f,c
  6028  000AE6  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6029  000AE8  22DA               	addwfc	fsr2h,f,c
  6030  000AEA  CF37 FFDF          	movff	3895,indf2	;volatile
  6031  000AEE                     
  6032                           ;mcc_generated_files/ecan.c: 363:         tempCanMsg->frame.data2 = RXB1D2;
  6033  000AEE  EE20 F008          	lfsr	2,8
  6034  000AF2  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6035  000AF4  26D9               	addwf	fsr2l,f,c
  6036  000AF6  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6037  000AF8  22DA               	addwfc	fsr2h,f,c
  6038  000AFA  CF38 FFDF          	movff	3896,indf2	;volatile
  6039  000AFE                     
  6040                           ;mcc_generated_files/ecan.c: 364:         tempCanMsg->frame.data3 = RXB1D3;
  6041  000AFE  EE20 F009          	lfsr	2,9
  6042  000B02  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6043  000B04  26D9               	addwf	fsr2l,f,c
  6044  000B06  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6045  000B08  22DA               	addwfc	fsr2h,f,c
  6046  000B0A  CF39 FFDF          	movff	3897,indf2	;volatile
  6047  000B0E                     
  6048                           ;mcc_generated_files/ecan.c: 365:         tempCanMsg->frame.data4 = RXB1D4;
  6049  000B0E  EE20 F00A          	lfsr	2,10
  6050  000B12  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6051  000B14  26D9               	addwf	fsr2l,f,c
  6052  000B16  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6053  000B18  22DA               	addwfc	fsr2h,f,c
  6054  000B1A  CF3A FFDF          	movff	3898,indf2	;volatile
  6055  000B1E                     
  6056                           ;mcc_generated_files/ecan.c: 366:         tempCanMsg->frame.data5 = RXB1D5;
  6057  000B1E  EE20 F00B          	lfsr	2,11
  6058  000B22  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6059  000B24  26D9               	addwf	fsr2l,f,c
  6060  000B26  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6061  000B28  22DA               	addwfc	fsr2h,f,c
  6062  000B2A  CF3B FFDF          	movff	3899,indf2	;volatile
  6063  000B2E                     
  6064                           ;mcc_generated_files/ecan.c: 367:         tempCanMsg->frame.data6 = RXB1D6;
  6065  000B2E  EE20 F00C          	lfsr	2,12
  6066  000B32  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6067  000B34  26D9               	addwf	fsr2l,f,c
  6068  000B36  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6069  000B38  22DA               	addwfc	fsr2h,f,c
  6070  000B3A  CF3C FFDF          	movff	3900,indf2	;volatile
  6071  000B3E                     
  6072                           ;mcc_generated_files/ecan.c: 368:         tempCanMsg->frame.data7 = RXB1D7;
  6073  000B3E  EE20 F00D          	lfsr	2,13
  6074  000B42  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6075  000B44  26D9               	addwf	fsr2l,f,c
  6076  000B46  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6077  000B48  22DA               	addwfc	fsr2h,f,c
  6078  000B4A  CF3D FFDF          	movff	3901,indf2	;volatile
  6079  000B4E                     
  6080                           ;mcc_generated_files/ecan.c: 369:         RXB1CONbits.RXFUL = 0;
  6081  000B4E  010F               	movlb	15	; () banked
  6082  000B50  9F30               	bcf	48,7,b	;volatile
  6083  000B52  EF14  F005         	goto	l4420
  6084  000B56                     l4454:
  6085                           
  6086                           ;mcc_generated_files/ecan.c: 372:     return (returnValue);
  6087  000B56  504F               	movf	CAN_receive@returnValue^0,w,c
  6088  000B58  0012               	return		;funcret
  6089  000B5A                     __end_of_CAN_receive:
  6090                           	callstack 0
  6091                           
  6092 ;; *************** function _convertReg2StandardCANid *****************
  6093 ;; Defined at:
  6094 ;;		line 451 in file "mcc_generated_files/ecan.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  tempRXBn_SID    1    wreg     unsigned char 
  6097 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  tempRXBn_SID    1    8[COMRAM] unsigned char 
  6100 ;;  ConvertedID     4   13[COMRAM] unsigned long 
  6101 ;;  returnValue     4    9[COMRAM] unsigned long 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  4    2[COMRAM] unsigned long 
  6104 ;; Registers used:
  6105 ;;		wreg, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6112 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6114 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6115 ;;Total ram usage:       15 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 3
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_CAN_receive
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text32
  6126  0018E6                     __ptext32:
  6127                           	callstack 0
  6128  0018E6                     _convertReg2StandardCANid:
  6129                           	callstack 26
  6130                           
  6131                           ;incstack = 0
  6132                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  6133  0018E6  6E40               	movwf	convertReg2StandardCANid@tempRXBn_SIDH^0,c
  6134  0018E8                     
  6135                           ;mcc_generated_files/ecan.c: 453:     uint32_t ConvertedID;;mcc_generated_files/ecan.c: 
      +                          457:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  6136  0018E8  5040               	movf	convertReg2StandardCANid@tempRXBn_SIDH^0,w,c
  6137  0018EA  6E3E               	movwf	??_convertReg2StandardCANid^0,c
  6138  0018EC  6A3F               	clrf	(??_convertReg2StandardCANid+1)^0,c
  6139  0018EE  90D8               	bcf	status,0,c
  6140  0018F0  363E               	rlcf	??_convertReg2StandardCANid^0,f,c
  6141  0018F2  363F               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  6142  0018F4  90D8               	bcf	status,0,c
  6143  0018F6  363E               	rlcf	??_convertReg2StandardCANid^0,f,c
  6144  0018F8  363F               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  6145  0018FA  90D8               	bcf	status,0,c
  6146  0018FC  363E               	rlcf	??_convertReg2StandardCANid^0,f,c
  6147  0018FE  363F               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  6148  001900  C03E  F045         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  6149  001904  C03F  F046         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  6150  001908  0E00               	movlw	0
  6151  00190A  BE46               	btfsc	(convertReg2StandardCANid@ConvertedID+1)^0,7,c
  6152  00190C  0EFF               	movlw	-1
  6153  00190E  6E47               	movwf	(convertReg2StandardCANid@ConvertedID+2)^0,c
  6154  001910  6E48               	movwf	(convertReg2StandardCANid@ConvertedID+3)^0,c
  6155  001912                     
  6156                           ;mcc_generated_files/ecan.c: 458:     ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SI
      +                          DL >> 5);
  6157  001912  C03A  F03E         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  6158  001916  0E05               	movlw	5
  6159  001918  6E3F               	movwf	(??_convertReg2StandardCANid+1)^0,c
  6160  00191A                     u1225:
  6161  00191A  90D8               	bcf	status,0,c
  6162  00191C  323E               	rrcf	??_convertReg2StandardCANid^0,f,c
  6163  00191E  2E3F               	decfsz	(??_convertReg2StandardCANid+1)^0,f,c
  6164  001920  EF8D  F00C         	goto	u1225
  6165  001924  503E               	movf	??_convertReg2StandardCANid^0,w,c
  6166  001926  2445               	addwf	convertReg2StandardCANid@ConvertedID^0,w,c
  6167  001928  6E45               	movwf	convertReg2StandardCANid@ConvertedID^0,c
  6168  00192A  0E00               	movlw	0
  6169  00192C  2046               	addwfc	(convertReg2StandardCANid@ConvertedID+1)^0,w,c
  6170  00192E  6E46               	movwf	(convertReg2StandardCANid@ConvertedID+1)^0,c
  6171  001930  0E00               	movlw	0
  6172  001932  2047               	addwfc	(convertReg2StandardCANid@ConvertedID+2)^0,w,c
  6173  001934  6E47               	movwf	(convertReg2StandardCANid@ConvertedID+2)^0,c
  6174  001936  0E00               	movlw	0
  6175  001938  2048               	addwfc	(convertReg2StandardCANid@ConvertedID+3)^0,w,c
  6176  00193A  6E48               	movwf	(convertReg2StandardCANid@ConvertedID+3)^0,c
  6177  00193C                     
  6178                           ;mcc_generated_files/ecan.c: 459:     returnValue = ConvertedID;
  6179  00193C  C045  F041         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  6180  001940  C046  F042         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  6181  001944  C047  F043         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  6182  001948  C048  F044         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  6183  00194C                     
  6184                           ;mcc_generated_files/ecan.c: 460:     return (returnValue);
  6185  00194C  C041  F03A         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  6186  001950  C042  F03B         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  6187  001954  C043  F03C         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  6188  001958  C044  F03D         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  6189  00195C  0012               	return		;funcret
  6190  00195E                     __end_of_convertReg2StandardCANid:
  6191                           	callstack 0
  6192                           
  6193 ;; *************** function _convertReg2ExtendedCANid *****************
  6194 ;; Defined at:
  6195 ;;		line 431 in file "mcc_generated_files/ecan.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;  tempRXBn_EID    1    wreg     unsigned char 
  6198 ;;  tempRXBn_EID    1    2[COMRAM] unsigned char 
  6199 ;;  tempRXBn_SID    1    3[COMRAM] unsigned char 
  6200 ;;  tempRXBn_SID    1    4[COMRAM] unsigned char 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  tempRXBn_EID    1   10[COMRAM] unsigned char 
  6203 ;;  ConvertedID     4   17[COMRAM] unsigned long 
  6204 ;;  returnValue     4   11[COMRAM] unsigned long 
  6205 ;;  CAN_standard    1   16[COMRAM] unsigned char 
  6206 ;;  CAN_standard    1   15[COMRAM] unsigned char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  4    2[COMRAM] unsigned long 
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, status,0
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6218 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6219 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6220 ;;Total ram usage:       19 bytes
  6221 ;; Hardware stack levels used: 1
  6222 ;; Hardware stack levels required when called: 3
  6223 ;; This function calls:
  6224 ;;		Nothing
  6225 ;; This function is called by:
  6226 ;;		_CAN_receive
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text33
  6231  000E72                     __ptext33:
  6232                           	callstack 0
  6233  000E72                     _convertReg2ExtendedCANid:
  6234                           	callstack 26
  6235                           
  6236                           ;incstack = 0
  6237                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  6238  000E72  6E42               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH^0,c
  6239  000E74                     
  6240                           ;mcc_generated_files/ecan.c: 433:     uint32_t ConvertedID = 0;
  6241  000E74  0E00               	movlw	0
  6242  000E76  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6243  000E78  0E00               	movlw	0
  6244  000E7A  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6245  000E7C  0E00               	movlw	0
  6246  000E7E  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6247  000E80  0E00               	movlw	0
  6248  000E82  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6249  000E84                     
  6250                           ;mcc_generated_files/ecan.c: 434:     uint8_t CAN_standardLo_ID_lo2bits;;mcc_generated_f
      +                          iles/ecan.c: 435:     uint8_t CAN_standardLo_ID_hi3bits;;mcc_generated_files/ecan.c: 437
      +                          :     CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  6251  000E84  503C               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL^0,w,c
  6252  000E86  0B03               	andlw	3
  6253  000E88  6E47               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits^0,c
  6254  000E8A                     
  6255                           ;mcc_generated_files/ecan.c: 438:     CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SID
      +                          L >> 5);
  6256  000E8A  383C               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL^0,w,c
  6257  000E8C  42E8               	rrncf	wreg,f,c
  6258  000E8E  0B07               	andlw	7
  6259  000E90  6E48               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits^0,c
  6260  000E92                     
  6261                           ;mcc_generated_files/ecan.c: 439:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  6262  000E92  503B               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH^0,w,c
  6263  000E94  6E3E               	movwf	??_convertReg2ExtendedCANid^0,c
  6264  000E96  6A3F               	clrf	(??_convertReg2ExtendedCANid+1)^0,c
  6265  000E98  90D8               	bcf	status,0,c
  6266  000E9A  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6267  000E9C  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6268  000E9E  90D8               	bcf	status,0,c
  6269  000EA0  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6270  000EA2  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6271  000EA4  90D8               	bcf	status,0,c
  6272  000EA6  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6273  000EA8  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6274  000EAA  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6275  000EAE  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6276  000EB2  0E00               	movlw	0
  6277  000EB4  BE4A               	btfsc	(convertReg2ExtendedCANid@ConvertedID+1)^0,7,c
  6278  000EB6  0EFF               	movlw	-1
  6279  000EB8  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6280  000EBA  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6281  000EBC                     
  6282                           ;mcc_generated_files/ecan.c: 440:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
  6283  000EBC  5048               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits^0,w,c
  6284  000EBE  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6285  000EC0  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6286  000EC2  0E00               	movlw	0
  6287  000EC4  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6288  000EC6  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6289  000EC8  0E00               	movlw	0
  6290  000ECA  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6291  000ECC  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6292  000ECE  0E00               	movlw	0
  6293  000ED0  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6294  000ED2  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6295  000ED4                     
  6296                           ;mcc_generated_files/ecan.c: 441:     ConvertedID = (ConvertedID << 2);
  6297  000ED4  C049  F03E         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  6298  000ED8  C04A  F03F         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  6299  000EDC  C04B  F040         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  6300  000EE0  C04C  F041         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  6301  000EE4  0E02               	movlw	2
  6302  000EE6                     u1215:
  6303  000EE6  90D8               	bcf	status,0,c
  6304  000EE8  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6305  000EEA  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6306  000EEC  3640               	rlcf	(??_convertReg2ExtendedCANid+2)^0,f,c
  6307  000EEE  3641               	rlcf	(??_convertReg2ExtendedCANid+3)^0,f,c
  6308  000EF0  2EE8               	decfsz	wreg,f,c
  6309  000EF2  EF73  F007         	goto	u1215
  6310  000EF6  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6311  000EFA  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6312  000EFE  C040  F04B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  6313  000F02  C041  F04C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  6314  000F06                     
  6315                           ;mcc_generated_files/ecan.c: 442:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
  6316  000F06  5047               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits^0,w,c
  6317  000F08  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6318  000F0A  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6319  000F0C  0E00               	movlw	0
  6320  000F0E  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6321  000F10  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6322  000F12  0E00               	movlw	0
  6323  000F14  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6324  000F16  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6325  000F18  0E00               	movlw	0
  6326  000F1A  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6327  000F1C  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6328                           
  6329                           ;mcc_generated_files/ecan.c: 443:     ConvertedID = (ConvertedID << 8);
  6330  000F1E  C049  F03F         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  6331  000F22  C04A  F040         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  6332  000F26  C04B  F041         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  6333  000F2A  6A3E               	clrf	??_convertReg2ExtendedCANid^0,c
  6334  000F2C  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6335  000F30  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6336  000F34  C040  F04B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  6337  000F38  C041  F04C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  6338  000F3C                     
  6339                           ;mcc_generated_files/ecan.c: 444:     ConvertedID = ConvertedID + tempRXBn_EIDH;
  6340  000F3C  5042               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH^0,w,c
  6341  000F3E  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6342  000F40  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6343  000F42  0E00               	movlw	0
  6344  000F44  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6345  000F46  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6346  000F48  0E00               	movlw	0
  6347  000F4A  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6348  000F4C  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6349  000F4E  0E00               	movlw	0
  6350  000F50  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6351  000F52  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6352  000F54                     
  6353                           ;mcc_generated_files/ecan.c: 445:     ConvertedID = (ConvertedID << 8);
  6354  000F54  C049  F03F         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  6355  000F58  C04A  F040         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  6356  000F5C  C04B  F041         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  6357  000F60  6A3E               	clrf	??_convertReg2ExtendedCANid^0,c
  6358  000F62  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6359  000F66  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6360  000F6A  C040  F04B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  6361  000F6E  C041  F04C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  6362                           
  6363                           ;mcc_generated_files/ecan.c: 446:     ConvertedID = ConvertedID + tempRXBn_EIDL;
  6364  000F72  503A               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL^0,w,c
  6365  000F74  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6366  000F76  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6367  000F78  0E00               	movlw	0
  6368  000F7A  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6369  000F7C  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6370  000F7E  0E00               	movlw	0
  6371  000F80  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6372  000F82  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6373  000F84  0E00               	movlw	0
  6374  000F86  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6375  000F88  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6376  000F8A                     
  6377                           ;mcc_generated_files/ecan.c: 447:     returnValue = ConvertedID;
  6378  000F8A  C049  F043         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  6379  000F8E  C04A  F044         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  6380  000F92  C04B  F045         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  6381  000F96  C04C  F046         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  6382  000F9A                     
  6383                           ;mcc_generated_files/ecan.c: 448:     return (returnValue);
  6384  000F9A  C043  F03A         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  6385  000F9E  C044  F03B         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  6386  000FA2  C045  F03C         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  6387  000FA6  C046  F03D         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  6388  000FAA  0012               	return		;funcret
  6389  000FAC                     __end_of_convertReg2ExtendedCANid:
  6390                           	callstack 0
  6391                           
  6392 ;; *************** function _INTERRUPT_InterruptManager *****************
  6393 ;; Defined at:
  6394 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, pcl, pclath, pclatu, tosl, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6412 ;;Total ram usage:        2 bytes
  6413 ;; Hardware stack levels used: 1
  6414 ;; Hardware stack levels required when called: 2
  6415 ;; This function calls:
  6416 ;;		_ECAN_WAKI_ISR
  6417 ;; This function is called by:
  6418 ;;		Interrupt level 2
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	intcode
  6423  000008                     __pintcode:
  6424                           	callstack 0
  6425  000008                     _INTERRUPT_InterruptManager:
  6426                           	callstack 25
  6427                           
  6428                           ;incstack = 0
  6429  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6430  00000A  CFFA F038          	movff	pclath,??_INTERRUPT_InterruptManager
  6431  00000E  CFFB F039          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6432  000012                     
  6433                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6434  000012  ACF2               	btfss	242,6,c	;volatile
  6435  000014  EF0E  F000         	goto	i2u27_41
  6436  000018  EF10  F000         	goto	i2u27_40
  6437  00001C                     i2u27_41:
  6438  00001C  EF20  F000         	goto	i2l110
  6439  000020                     i2u27_40:
  6440  000020                     
  6441                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE5bits.WAKIE == 1 && PIR5bits.WAKIF == 1)
  6442  000020  AC76               	btfss	118,6,c	;volatile
  6443  000022  EF15  F000         	goto	i2u28_41
  6444  000026  EF17  F000         	goto	i2u28_40
  6445  00002A                     i2u28_41:
  6446  00002A  EF20  F000         	goto	i2l110
  6447  00002E                     i2u28_40:
  6448  00002E  AC77               	btfss	119,6,c	;volatile
  6449  000030  EF1C  F000         	goto	i2u29_41
  6450  000034  EF1E  F000         	goto	i2u29_40
  6451  000038                     i2u29_41:
  6452  000038  EF20  F000         	goto	i2l110
  6453  00003C                     i2u29_40:
  6454  00003C                     
  6455                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ECAN_WAKI_ISR();
  6456  00003C  EC3F  F00D         	call	_ECAN_WAKI_ISR	;wreg free
  6457  000040                     i2l110:
  6458  000040  C039  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6459  000044  C038  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6460  000048  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6461  00004A  0011               	retfie		f
  6462  00004C                     __end_of_INTERRUPT_InterruptManager:
  6463                           	callstack 0
  6464                           
  6465 ;; *************** function _ECAN_WAKI_ISR *****************
  6466 ;; Defined at:
  6467 ;;		line 503 in file "mcc_generated_files/ecan.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;		None
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;		None
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  1    wreg      void 
  6474 ;; Registers used:
  6475 ;;		wreg, pcl, pclath, pclatu, tosl, cstack
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6485 ;;Total ram usage:        0 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; Hardware stack levels required when called: 1
  6488 ;; This function calls:
  6489 ;;		Absolute function
  6490 ;;		_WakeUpDefaultInterruptHandler
  6491 ;; This function is called by:
  6492 ;;		_INTERRUPT_InterruptManager
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text35
  6497  001A7E                     __ptext35:
  6498                           	callstack 0
  6499  001A7E                     _ECAN_WAKI_ISR:
  6500                           	callstack 25
  6501  001A7E                     
  6502                           ;mcc_generated_files/ecan.c: 505:     WakeUpInterruptHandler();
  6503  001A7E  D802               	call	i2u12_48
  6504  001A80  EF4C  F00D         	goto	i2u12_49
  6505  001A84                     i2u12_48:
  6506  001A84  0005               	push	
  6507  001A86  6EFA               	movwf	pclath,c
  6508  001A88  501B               	movf	_WakeUpInterruptHandler^0,w,c
  6509  001A8A  6EFD               	movwf	tosl,c
  6510  001A8C  501C               	movf	(_WakeUpInterruptHandler+1)^0,w,c
  6511  001A8E  6EFE               	movwf	tosh,c
  6512  001A90  50F8               	movf	tblptru,w,c
  6513  001A92  6EFF               	movwf	tosu,c
  6514  001A94  50FA               	movf	pclath,w,c
  6515  001A96  0012               	return		;indir
  6516  001A98                     i2u12_49:
  6517  001A98                     
  6518                           ;mcc_generated_files/ecan.c: 506:     PIR5bits.WAKIF = 0;
  6519  001A98  9C77               	bcf	119,6,c	;volatile
  6520  001A9A  0012               	return		;funcret
  6521  001A9C                     __end_of_ECAN_WAKI_ISR:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function _WakeUpDefaultInterruptHandler *****************
  6525 ;; Defined at:
  6526 ;;		line 63 in file "mcc_generated_files/ecan.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;		None
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		None
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6544 ;;Total ram usage:        0 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_ECAN_Initialize
  6550 ;;		_ECAN_WAKI_ISR
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text36
  6555  001B06                     __ptext36:
  6556                           	callstack 0
  6557  001B06                     _WakeUpDefaultInterruptHandler:
  6558                           	callstack 25
  6559  001B06  0012               	return		;funcret
  6560  001B08                     __end_of_WakeUpDefaultInterruptHandler:
  6561                           	callstack 0
  6562  0000                     
  6563                           	psect	text37
  6564  000000                     __ptext37:
  6565                           	callstack 0
  6566  000000                     
  6567                           	psect	rparam
  6568  0000                     
  6569                           	psect	temp
  6570  00005A                     btemp:
  6571                           	callstack 0
  6572  00005A                     	ds	1
  6573  0000                     int$flags	set	btemp
  6574  0000                     wtemp8	set	btemp+1
  6575  0000                     ttemp5	set	btemp+1
  6576  0000                     ttemp6	set	btemp+4
  6577  0000                     ttemp7	set	btemp+8
  6578                           
  6579                           	psect	idloc
  6580                           
  6581                           ;Config register IDLOC0 @ 0x200000
  6582                           ;	unspecified, using default values
  6583  200000                     	org	2097152
  6584  200000  FF                 	db	255
  6585                           
  6586                           ;Config register IDLOC1 @ 0x200001
  6587                           ;	unspecified, using default values
  6588  200001                     	org	2097153
  6589  200001  FF                 	db	255
  6590                           
  6591                           ;Config register IDLOC2 @ 0x200002
  6592                           ;	unspecified, using default values
  6593  200002                     	org	2097154
  6594  200002  FF                 	db	255
  6595                           
  6596                           ;Config register IDLOC3 @ 0x200003
  6597                           ;	unspecified, using default values
  6598  200003                     	org	2097155
  6599  200003  FF                 	db	255
  6600                           
  6601                           ;Config register IDLOC4 @ 0x200004
  6602                           ;	unspecified, using default values
  6603  200004                     	org	2097156
  6604  200004  FF                 	db	255
  6605                           
  6606                           ;Config register IDLOC5 @ 0x200005
  6607                           ;	unspecified, using default values
  6608  200005                     	org	2097157
  6609  200005  FF                 	db	255
  6610                           
  6611                           ;Config register IDLOC6 @ 0x200006
  6612                           ;	unspecified, using default values
  6613  200006                     	org	2097158
  6614  200006  FF                 	db	255
  6615                           
  6616                           ;Config register IDLOC7 @ 0x200007
  6617                           ;	unspecified, using default values
  6618  200007                     	org	2097159
  6619  200007  FF                 	db	255
  6620                           
  6621                           	psect	config
  6622                           
  6623                           ;Config register CONFIG1L @ 0x300000
  6624                           ;	VREG Sleep Enable bit
  6625                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  6626                           ;	LF-INTOSC Low-power Enable bit
  6627                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6628                           ;	SOSC Power Selection and mode Configuration bits
  6629                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6630                           ;	Extended Instruction Set
  6631                           ;	XINST = OFF, Disabled
  6632  300000                     	org	3145728
  6633  300000  15                 	db	21
  6634                           
  6635                           ;Config register CONFIG1H @ 0x300001
  6636                           ;	Oscillator
  6637                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  6638                           ;	PLL x4 Enable bit
  6639                           ;	PLLCFG = OFF, Disabled
  6640                           ;	Fail-Safe Clock Monitor
  6641                           ;	FCMEN = OFF, Disabled
  6642                           ;	Internal External Oscillator Switch Over Mode
  6643                           ;	IESO = OFF, Disabled
  6644  300001                     	org	3145729
  6645  300001  02                 	db	2
  6646                           
  6647                           ;Config register CONFIG2L @ 0x300002
  6648                           ;	Power Up Timer
  6649                           ;	PWRTEN = OFF, Disabled
  6650                           ;	Brown Out Detect
  6651                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  6652                           ;	Brown-out Reset Voltage bits
  6653                           ;	BORV = 3, 1.8V
  6654                           ;	BORMV Power level
  6655                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6656  300002                     	org	3145730
  6657  300002  7F                 	db	127
  6658                           
  6659                           ;Config register CONFIG2H @ 0x300003
  6660                           ;	Watchdog Timer
  6661                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6662                           ;	Watchdog Postscaler
  6663                           ;	WDTPS = 1048576, 1:1048576
  6664  300003                     	org	3145731
  6665  300003  7C                 	db	124
  6666                           
  6667                           ; Padding undefined space
  6668  300004                     	org	3145732
  6669  300004  FF                 	db	255
  6670                           
  6671                           ;Config register CONFIG3H @ 0x300005
  6672                           ;	ECAN Mux bit
  6673                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  6674                           ;	MSSP address masking
  6675                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  6676                           ;	Master Clear Enable
  6677                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  6678  300005                     	org	3145733
  6679  300005  89                 	db	137
  6680                           
  6681                           ;Config register CONFIG4L @ 0x300006
  6682                           ;	Stack Overflow Reset
  6683                           ;	STVREN = ON, Enabled
  6684                           ;	Boot Block Size
  6685                           ;	BBSIZ = BB2K, 2K word Boot Block size
  6686  300006                     	org	3145734
  6687  300006  91                 	db	145
  6688                           
  6689                           ; Padding undefined space
  6690  300007                     	org	3145735
  6691  300007  FF                 	db	255
  6692                           
  6693                           ;Config register CONFIG5L @ 0x300008
  6694                           ;	Code Protect 00800-03FFF
  6695                           ;	CP0 = OFF, Disabled
  6696                           ;	Code Protect 04000-07FFF
  6697                           ;	CP1 = OFF, Disabled
  6698                           ;	Code Protect 08000-0BFFF
  6699                           ;	CP2 = OFF, Disabled
  6700                           ;	Code Protect 0C000-0FFFF
  6701                           ;	CP3 = OFF, Disabled
  6702  300008                     	org	3145736
  6703  300008  0F                 	db	15
  6704                           
  6705                           ;Config register CONFIG5H @ 0x300009
  6706                           ;	Code Protect Boot
  6707                           ;	CPB = OFF, Disabled
  6708                           ;	Data EE Read Protect
  6709                           ;	CPD = OFF, Disabled
  6710  300009                     	org	3145737
  6711  300009  C0                 	db	192
  6712                           
  6713                           ;Config register CONFIG6L @ 0x30000A
  6714                           ;	Table Write Protect 00800-03FFF
  6715                           ;	WRT0 = OFF, Disabled
  6716                           ;	Table Write Protect 04000-07FFF
  6717                           ;	WRT1 = OFF, Disabled
  6718                           ;	Table Write Protect 08000-0BFFF
  6719                           ;	WRT2 = OFF, Disabled
  6720                           ;	Table Write Protect 0C000-0FFFF
  6721                           ;	WRT3 = OFF, Disabled
  6722  30000A                     	org	3145738
  6723  30000A  0F                 	db	15
  6724                           
  6725                           ;Config register CONFIG6H @ 0x30000B
  6726                           ;	Config. Write Protect
  6727                           ;	WRTC = OFF, Disabled
  6728                           ;	Table Write Protect Boot
  6729                           ;	WRTB = OFF, Disabled
  6730                           ;	Data EE Write Protect
  6731                           ;	WRTD = OFF, Disabled
  6732  30000B                     	org	3145739
  6733  30000B  E0                 	db	224
  6734                           
  6735                           ;Config register CONFIG7L @ 0x30000C
  6736                           ;	Table Read Protect 00800-03FFF
  6737                           ;	EBTR0 = OFF, Disabled
  6738                           ;	Table Read Protect 04000-07FFF
  6739                           ;	EBTR1 = OFF, Disabled
  6740                           ;	Table Read Protect 08000-0BFFF
  6741                           ;	EBTR2 = OFF, Disabled
  6742                           ;	Table Read Protect 0C000-0FFFF
  6743                           ;	EBTR3 = OFF, Disabled
  6744  30000C                     	org	3145740
  6745  30000C  0F                 	db	15
  6746                           
  6747                           ;Config register CONFIG7H @ 0x30000D
  6748                           ;	Table Read Protect Boot
  6749                           ;	EBTRB = OFF, Disabled
  6750  30000D                     	org	3145741
  6751  30000D  40                 	db	64
  6752                           tosu	equ	0xFFF
  6753                           tosh	equ	0xFFE
  6754                           tosl	equ	0xFFD
  6755                           stkptr	equ	0xFFC
  6756                           pclatu	equ	0xFFB
  6757                           pclath	equ	0xFFA
  6758                           pcl	equ	0xFF9
  6759                           tblptru	equ	0xFF8
  6760                           tblptrh	equ	0xFF7
  6761                           tblptrl	equ	0xFF6
  6762                           tablat	equ	0xFF5
  6763                           prodh	equ	0xFF4
  6764                           prodl	equ	0xFF3
  6765                           indf0	equ	0xFEF
  6766                           postinc0	equ	0xFEE
  6767                           postdec0	equ	0xFED
  6768                           preinc0	equ	0xFEC
  6769                           plusw0	equ	0xFEB
  6770                           fsr0h	equ	0xFEA
  6771                           fsr0l	equ	0xFE9
  6772                           wreg	equ	0xFE8
  6773                           indf1	equ	0xFE7
  6774                           postinc1	equ	0xFE6
  6775                           postdec1	equ	0xFE5
  6776                           preinc1	equ	0xFE4
  6777                           plusw1	equ	0xFE3
  6778                           fsr1h	equ	0xFE2
  6779                           fsr1l	equ	0xFE1
  6780                           bsr	equ	0xFE0
  6781                           indf2	equ	0xFDF
  6782                           postinc2	equ	0xFDE
  6783                           postdec2	equ	0xFDD
  6784                           preinc2	equ	0xFDC
  6785                           plusw2	equ	0xFDB
  6786                           fsr2h	equ	0xFDA
  6787                           fsr2l	equ	0xFD9
  6788                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         153
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      89
    BANK0           160      4     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    hazardButton@b2FunctionActive	PTR int  size(2) Largest target is 2
		 -> b2FuncActive(COMRAM[2]), 

    hazardButton@b2Latch	PTR int  size(2) Largest target is 2
		 -> latchb2(COMRAM[2]), 

    rightTurnButton@b10FunctionActive	PTR int  size(2) Largest target is 2
		 -> b10FuncActive(COMRAM[2]), 

    rightTurnButton@b10Latch	PTR int  size(2) Largest target is 2
		 -> buttonRuntime@var(COMRAM[2]), latchb10(COMRAM[2]), 

    leftTurnButton@b1FunctionActive	PTR int  size(2) Largest target is 2
		 -> b1FuncActive(COMRAM[2]), 

    leftTurnButton@b1Latch	PTR int  size(2) Largest target is 2
		 -> buttonRuntime@var(COMRAM[2]), latchb1(COMRAM[2]), 

    ECAN_SetWakeUpInterruptHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> WakeUpDefaultInterruptHandler(), 

    WakeUpInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), WakeUpDefaultInterruptHandler(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> rx(COMRAM[14]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> tx7(BANK0[14]), tx6(BANK0[14]), tx5(BANK0[14]), tx4(BANK0[14]), 
		 -> tx3(BANK0[14]), tx2(BANK0[14]), tx1(BANK0[14]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_canHazardSignal
    _main->_canLeftSignal
    _main->_canRightSignal
    _init->_auxBattConn
    _init->_batterySOC
    _init->_batterySOCGraphic
    _init->_batteryTemp
    _init->_hazardSignal
    _init->_leftTurnIndicator
    _init->_motorControllerTemp
    _init->_motorSpeed
    _init->_rightTurnIndicator
    _init->_warningLED
    _warningLED->_EUSART1_Write
    _rightTurnIndicator->_EUSART1_Write
    _motorSpeed->_EUSART1_Write
    _motorControllerTemp->_EUSART1_Write
    _leftTurnIndicator->_EUSART1_Write
    _hazardSignal->_EUSART1_Write
    _batteryTemp->_EUSART1_Write
    _batterySOCGraphic->_EUSART1_Write
    _batterySOC->_EUSART1_Write
    _auxBattConn->_EUSART1_Write
    _canRightSignal->_CAN_transmit
    _canLeftSignal->_CAN_transmit
    _canHazardSignal->_CAN_transmit
    _CAN_transmit->_convertCANid2Reg
    _SYSTEM_Initialize->_ECAN_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _ECAN_Initialize->_ECAN_SetWakeUpInterruptHandler
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   31378
                                             28 COMRAM     2     2      0
                                              0 BANK0      4     4      0
                        _CAN_receive
                  _SYSTEM_Initialize
                        _auxBattConn
                    _canHazardSignal
                      _canLeftSignal
                     _canRightSignal
                       _hazardButton
                       _hazardSignal
                               _init
                     _leftTurnButton
                  _leftTurnIndicator
                         _motorSpeed
                    _rightTurnButton
                 _rightTurnIndicator
                         _warningLED
 ---------------------------------------------------------------------------------
 (1) _rightTurnButton                                      6     2      4     546
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _leftTurnButton                                       6     2      4     546
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    6660
                        _auxBattConn
                         _batterySOC
                  _batterySOCGraphic
                        _batteryTemp
                       _hazardSignal
                  _leftTurnIndicator
                _motorControllerTemp
                         _motorSpeed
                 _rightTurnIndicator
                         _warningLED
 ---------------------------------------------------------------------------------
 (1) _warningLED                                          13    11      2     558
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _rightTurnIndicator                                  13    11      2    1098
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _motorSpeed                                          13    11      2     558
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _motorControllerTemp                                 13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _leftTurnIndicator                                   13    11      2    1098
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _hazardSignal                                        13    11      2     828
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _batteryTemp                                         13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _batterySOCGraphic                                   13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _batterySOC                                          13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _auxBattConn                                         13    11      2     648
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _hazardButton                                         6     2      4     366
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _canRightSignal                                       2     0      2    5202
                                             26 COMRAM     2     0      2
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (1) _canLeftSignal                                        2     0      2    5202
                                             26 COMRAM     2     0      2
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (1) _canHazardSignal                                      2     0      2    5112
                                             26 COMRAM     2     0      2
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (2) _CAN_transmit                                         7     5      2    4901
                                             20 COMRAM     6     4      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (3) _convertCANid2Reg                                    18     5     13    2425
                                              2 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                    _ECAN_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0     121
                                              4 COMRAM     1     1      0
     _ECAN_SetWakeUpInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ECAN_SetWakeUpInterruptHandler                       2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    2358
                                             21 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     347
                                              2 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4    1075
                                              2 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                      _ECAN_WAKI_ISR
 ---------------------------------------------------------------------------------
 (5) _ECAN_WAKI_ISR                                        0     0      0       0
                   Absolute function *
      _WakeUpDefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _WakeUpDefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _SYSTEM_Initialize
     _ECAN_Initialize
       _ECAN_SetWakeUpInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _auxBattConn
     _EUSART1_Write
   _canHazardSignal
     _CAN_transmit
       _convertCANid2Reg
   _canLeftSignal
     _CAN_transmit
   _canRightSignal
     _CAN_transmit
   _hazardButton
   _hazardSignal
     _EUSART1_Write
   _init
     _auxBattConn
     _batterySOC
       _EUSART1_Write
     _batterySOCGraphic
       _EUSART1_Write
     _batteryTemp
       _EUSART1_Write
     _hazardSignal
     _leftTurnIndicator
       _EUSART1_Write
     _motorControllerTemp
       _EUSART1_Write
     _motorSpeed
       _EUSART1_Write
     _rightTurnIndicator
       _EUSART1_Write
     _warningLED
       _EUSART1_Write
   _leftTurnButton
   _leftTurnIndicator
   _motorSpeed
   _rightTurnButton
   _rightTurnIndicator
   _warningLED

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_WAKI_ISR
     Absolute function(Fake) *
     _WakeUpDefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      54        0.0%
BANK13             100      0       0      23        0.0%
BITBANK12          100      0       0      21        0.0%
BANK12             100      0       0      22        0.0%
BITBANK11          100      0       0      53        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      52        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      51        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      50        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      49        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      48        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      47        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      68       5       65.0%
BITBIGSFRllllhl     62      0       0      43        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      59       1       94.7%
BITBANK14           41      0       0      55        0.0%
BANK14              41      0       0      56        0.0%
BITBIGSFRhhhl       20      0       0      27        0.0%
BITBIGSFRhhhhlh     1D      0       0      25        0.0%
BITBIGSFRllllhh     1D      0       0      39        0.0%
BITBIGSFRhhhhh       D      0       0      24        0.0%
BITBIGSFRlhh         8      0       0      29        0.0%
BITBIGSFRlhlllh      6      0       0      33        0.0%
BITBIGSFRllh         5      0       0      36        0.0%
BITBIGSFRlhlhll      4      0       0      32        0.0%
BITBIGSFRlllhhh      3      0       0      37        0.0%
BITBIGSFRlhlhhl      3      0       0      31        0.0%
BITBIGSFRhl          3      0       0      28        0.0%
BITBIGSFRlhlhhh      2      0       0      30        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRllllhh      2      0       0      40        0.0%
BITBIGSFRlllhll      2      0       0      38        0.0%
BITBIGSFRlhllll      2      0       0      35        0.0%
BITBIGSFRllllll      2      0       0      45        0.0%
BITBIGSFRlhlllh      1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1      46        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jul 30 17:48:56 2023

                                               l43 199A                                                 l70 1AB0  
                                               l82 1AEC                                                 l67 1A9E  
                                               l85 1AE2                                                 l88 1AF6  
                                    ?_hazardButton 003A                                                 _rx 001E  
                                    ?_hazardSignal 003B                                                l101 1B04  
                                              l143 19D2                                                l502 0CFC  
                                              l511 0700                                                l512 0904  
                                              l513 0802                                                l516 0904  
                                              l700 186A                                                l526 0B58  
                                              l519 0A30                                                l703 1442  
                                              l712 160A                                                l721 18E4  
                                              l546 0FAA                                                l554 0E70  
                                              l706 14DA                                                l715 17D2  
                                              l549 195C                                                l557 1B00  
                                              l581 1AC6                                                l709 16A2  
                                              l718 173A                                                l831 1A2A  
                                              l584 1AD8                                                l760 109A  
                                              l673 05E4                                                l834 1A56  
                                              l746 118A                                                l691 1572  
                                              l828 19FE                                                l774 127A  
                                              l694 13AA                                                l697 1312  
            ECAN_SetWakeUpInterruptHandler@handler 003A                                 motorSpeed@checksum 003E  
                                              _tx1 00B4                                                _tx2 00A6  
                                              _tx3 0098                                                _tx4 008A  
                                              _tx5 007C                                                _tx6 006E  
                                              _tx7 0060                                                tosl 000FFD  
                                              wreg 000FE8                                         _TXSTA1bits 000FAC  
                       ??_convertReg2StandardCANid 003E                             batterySOCGraphic@value 003B  
                                             l4000 0668                                               l4010 06BA  
                                             l4002 067A                                               l4100 0F06  
                                             l4020 06FC                                               l4012 06CA  
                                             l4004 068A                                               l4102 0F3C  
                                             l4030 0766                                               l4022 070E  
                                             l4014 06DA                                               l4006 069A  
                                             l4104 0F54                                               l4120 194C  
                                             l4112 18E8                                               l4040 07AC  
                                             l4032 076A                                               l4024 075A  
                                             l4016 06EA                                               l4008 06AA  
                                             l4200 15F4                                               l4106 0F8A  
                                             l4114 18E8                                               l4050 07FC  
                                             l4042 07BC                                               l4034 077C  
                                             l4026 075E                                               l4018 06FA  
                                             l4202 1604                                               l4210 13D4  
                                             l4130 1336                                               l4108 0F9A  
                                             l4116 1912                                               l4124 1AC8  
                                             l4060 0864                                               l4044 07CC  
                                             l4036 078C                                               l4028 0762  
                                             l4300 14AE                                               l4220 1410  
                                             l4212 13E4                                               l4204 13AC  
                                             l4140 1368                                               l4132 133C  
                                             l4118 193C                                               l4070 089E  
                                             l4062 0868                                               l4054 0810  
                                             l4046 07DC                                               l4038 079C  
                                             l4310 1624                                               l4302 14BE  
                                             l4222 1416                                               l4214 13EA  
                                             l4206 13C4                                               l4150 13A4  
                                             l4142 1378                                               l4134 134C  
                                             l4126 1314                                               l4230 127C  
                                             l4400 0996                                               l4080 08EE  
                                             l4072 08AE                                               l4064 086C  
                                             l4056 085C                                               l4048 07EC  
                                             l4320 165A                                               l4312 162E  
                                             l4160 1514                                               l4152 14DC  
                                             l4304 14C4                                               l4224 1426  
                                             l4216 13FA                                               l4208 13CE  
                                             l4144 137E                                               l4136 1352  
                                             l4128 132C                                               l4240 12BA  
                                             l4232 1294                                               l5040 1084  
                                             l4090 0E84                                               l4410 09E6  
                                             l4402 09A6                                               l4082 08FE  
                                             l4074 08BE                                               l4066 087E  
                                             l4058 0860                                               l5050 1232  
                                             l4330 168C                                               l4322 1660  
                                             l4314 1634                                               l4170 1546  
                                             l4162 151A                                               l4154 14F4  
                                             l4306 14D4                                               l4226 142C  
                                             l4218 1400                                               l4146 138E  
                                             l4138 1362                                               l4250 12F6  
                                             l4242 12CA                                               l4234 129E  
                                             l5042 10FA                                               l4092 0E8A  
                                             l4420 0A28                                               l4412 09F6  
                                             l4404 09B6                                               l4076 08CE  
                                             l4068 088E                                               l5052 1264  
                                             l4260 17F6                                               l4340 1764  
                                             l4332 169C                                               l4324 1670  
                                             l4316 1644                                               l4308 160C  
                                             l4180 158C                                               l4172 1556  
                                             l4164 152A                                               l4156 14FE  
                                             l4228 143C                                               l4148 1394  
                                             l4252 12FC                                               l4244 12D0  
                                             l4236 12A4                                               l5044 1142  
                                             l4500 1110                                               l5036 100A  
                                             l4094 0E92                                               l4430 0A98  
                                             l4422 0A40                                               l4414 0A06  
                                             l4406 09C6                                               l4078 08DE  
                                             l4270 1828                                               l4262 17FC  
                                             l4350 17A0                                               l4342 1774  
                                             l4334 173C                                               l4326 1676  
                                             l4318 164A                                               l4190 15C2  
                                             l4182 1596                                               l4174 155C  
                                             l4166 1530                                               l4158 1504  
                                             l4254 130C                                               l4246 12E0  
                                             l4238 12B4                                               l5046 1174  
                                             l5038 1052                                               l4096 0EBC  
                                             l4088 0E74                                               l4440 0AFE  
                                             l4432 0ABE                                               l4424 0A4E  
                                             l4416 0A16                                               l4408 09D6  
                                             l5048 11EA                                               l4280 1864  
                                             l4272 1838                                               l4264 180C  
                                             l4256 17D4                                               l4352 17A6  
                                             l4344 177A                                               l4336 1754  
                                             l4360 16A4                                               l4328 1686  
                                             l4192 15C8                                               l4184 159C  
                                             l4176 156C                                               l4168 1540  
                                             l4248 12E6                                               l4504 1124  
                                             l4600 008A                                               l4098 0ED4  
                                             l4450 0B4E                                               l4442 0B0E  
                                             l4434 0ACE                                               l4426 0A5A  
                                             l4418 0A26                                               l4274 183E  
                                             l4266 1812                                               l4258 17EC  
                                             l4354 17B6                                               l4346 178A  
                                             l4338 175E                                               l4370 16E2  
                                             l4362 16BC                                               l4194 15D8  
                                             l4186 15AC                                               l4178 1574  
                                             l4290 147C                                               l4282 1444  
                                             l4522 0FAC                                               l4610 00CA  
                                             l4602 0094                                               l4444 0B1E  
                                             l4436 0ADE                                               l4428 0A8C  
                                             l4460 1AB6                                               l3900 0CFE  
                                             l4276 184E                                               l4268 1822  
                                             l4356 17BC                                               l4348 1790  
                                             l4380 171E                                               l4372 16F2  
                                             l4364 16C6                                               l4196 15DE  
                                             l4188 15B2                                               l4292 1482  
                                             l4284 145C                                               l4508 1150  
                                             l4532 0FEC                                               l4524 0FB0  
                                             l4700 0364                                               l4620 0114  
                                             l4612 00DC                                               l4604 009C  
                                             l4446 0B2E                                               l4438 0AEE  
                                             l4454 0B56                                               l4390 0918  
                                             l4462 1ABA                                               l3910 0D84  
                                             l3902 0CFE                                               l4470 19D4  
                                             l4278 1854                                               l4358 17CC  
                                             l4382 1724                                               l4374 16F8  
                                             l4366 16CC                                               l4198 15EE  
                                             l4294 1492                                               l4286 1466  
                                             l4534 1020                                               l4526 0FC4  
                                             l4542 1060                                               l4710 03AC  
                                             l4702 0374                                               l4630 0164  
                                             l4622 0124                                               l4614 00EE  
                                             l4606 00A2                                               l4448 0B3E  
                                             l4392 0926                                               l4464 1ABE  
                                             l3920 0DD8                                               l3912 0D8A  
                                             l3904 0D10                                               l4480 1A1E  
                                             l4472 19EE                                               l4560 11A4  
                                             l4384 1734                                               l4376 1708  
                                             l4368 16DC                                               l4296 1498  
                                             l4288 146C                                               l4528 0FD8  
                                             l4720 03E8                                               l4712 03BC  
                                             l4704 0386                                               l4640 01AC  
                                             l4632 0176                                               l4624 0130  
                                             l4616 0100                                               l4608 00B8  
                                             l4394 0932                                               l4386 0906  
                                             l4466 1AC2                                               l4458 1AB2  
                                             l3922 0E06                                               l3914 0DBC  
                                             l3906 0D1C                                               l4482 1A2C  
                                             l4474 19F2                                               l4562 11B8  
                                             l4378 170E                                               l4298 14A8  
                                             l4490 10A0                                               l4538 1034  
                                             l4730 044A                                               l4722 03F0  
                                             l4714 03C8                                               l4706 0398  
                                             l4650 0204                                               l4642 01B8  
                                             l4634 0188                                               l4618 0108  
                                             l4626 0140                                               l4396 0964  
                                             l4388 090A                                               l3940 198A  
                                             l3916 0DC4                                               l3908 0D4A  
                                             l3924 0E16                                               l4484 1A46  
                                             l4476 1A00                                               l4572 1214  
                                             l4556 118C                                               l4468 186C  
                                             l4492 10B4                                               l4740 0494  
                                             l4732 045E                                               l4724 0404  
                                             l4708 03A0                                               l4716 03D8  
                                             l4660 0248                                               l4652 0210  
                                             l4636 0190                                               l4628 0152  
                                             l4644 01C8                                               l4398 0970  
                                             l3942 1996                                               l3934 195E  
                                             l3950 19D0                                               l3926 0E2E  
                                             l3918 0DCA                                               l4486 1A4A  
                                             l4478 1A1A                                               l4566 11CC  
                                             l4558 1190                                               l4494 10C8  
                                             l4750 0514                                               l4742 04A4  
                                             l4734 0466                                               l4726 0418  
                                             l4718 03E0                                               l4670 0290  
                                             l4662 0258                                               l4654 0220  
                                             l4646 01DA                                               l4638 019C  
                                             l4590 0050                                               l3960 0B82  
                                             l3952 0B5A                                               l3936 1972  
                                             l3944 1B02                                               l3928 0E60  
                                             l4568 1200                                               l4576 1240  
                                             l4488 109C                                               l4760 0574  
                                             l4744 04C0                                               l4752 0530  
                                             l4736 0472                                               l4728 042C  
                                             l4680 02D8                                               l4672 029C  
                                             l4664 0264                                               l4656 022C  
                                             l4648 01EC                                               l4592 0054  
                                             l3970 0CBC                                               l3962 0B84  
                                             l3954 0B5E                                               l3890 1ADA  
                                             l3938 197E                                               l3946 199C  
                                             l4498 10DC                                               l4770 05C8  
                                             l4762 0584                                               l4754 0540  
                                             l4746 04DC                                               l4738 0478  
                                             l4690 0322                                               l4682 02E4  
                                             l4666 0274                                               l4658 023C  
                                             l4674 02AC                                               l4594 0056  
                                             l3980 0CE0                                               l3972 0CBE  
                                             l3964 0B8A                                               l3956 0B72  
                                             l3892 1AEE                                               l3948 19C0  
                                             l4772 05D8                                               l4764 0594  
                                             l4756 054C                                               l4748 04F8  
                                             l4692 0334                                               l4684 02F4  
                                             l4676 02BE                                               l4668 0280  
                                             l4596 006E                                               l3982 0CE2  
                                             l3974 0CC0                                               l3966 0B8C  
                                             l3958 0B80                                               l3990 060C  
                                             l3894 1A9E                                               l4766 05A4  
                                             l4758 0564                                               l4694 033C  
                                             l4686 0300                                               l4678 02D0  
                                             l4598 008A                                               l3984 0CE6  
                                             l3976 0CD2                                               l3968 0B8E  
                                             l3888 1AE4                                               l3992 0658  
                                             l3896 1AAC                                               l4768 05B0  
                                             l4696 0348                                               l4688 0310  
                                             l3898 1AF8                                               l3978 0CDE  
                                             l3994 065C                                               l3986 05EC  
                                             l4698 0358                                               l3996 0660  
                                             l3988 05FC                                               l3998 0664  
                                             u1200 0810                                               u1120 1AAC  
                                             u1201 080C                                               u1121 1AA8  
                                             u1130 0D10                                               u1131 0D0C  
                                             u1300 1072                                               u1230 0918  
                                             u1310 1250                                               u1215 0EE6  
                                             u1231 0914                                               u1311 124A  
                                             u2007 1488                                               u1240 0926  
                                             u1160 0B72                                               u1320 1252  
                                             u1400 0188                                               u1225 191A  
                                             u1241 0922                                               u1161 0B6E  
                                             u1145 0D9C                                               u2017 149E  
                                             u1401 0184                                               u1250 0A40  
                                             u1170 0CFC                                               u1410 01DA  
                                             u1330 00CA                                               u1251 0A3C  
                                             u1171 0CF8                                               u1155 0E40  
                                             u2107 15B8                                               u2027 14B4  
                                             u1411 01D6                                               u1331 00C6  
                                             u1260 0A4E                                               u1180 060C  
                                             u1500 045E                                               u1420 01EC  
                                             u1340 00DC                                               u1261 0A4A  
                                             u1181 0608                                               u2117 15CE  
                                             u2037 14CA                                               u1501 045A  
                                             u1421 01E8                                               u1341 00D8  
                                             _LATA 000F89                                               u1190 070E  
                                             u1270 1160                                               u1510 0494  
                                             u1430 02BE                                               u1350 00EE  
                                             _LATB 000F8A                                               u1191 070A  
                                             u2207 16E8                                               u2127 15E4  
                                             u2047 150A                                               u1271 115A  
                                             u1511 0490                                               u1431 02BA  
                                             u1351 00EA                                               _LATC 000F8B  
                                             u1280 1162                                               u1600 05C8  
                                             u1520 04A4                                               u1440 02D0  
                                             u1360 0100                                               _LATD 000F8C  
                                             u2217 16FE                                               u2137 15FA  
                                             u2057 1520                                               u1601 05C4  
                                             u1521 04A0                                               u1441 02CC  
                                             u1361 00FC                                               _LATE 000F8D  
                                             u1290 1070                                               u1530 04C0  
                                             u1450 0322                                               u1370 0152  
                                             u2307 1818                                               u2227 1714  
                                             u2147 163A                                               u2067 1536  
                                             u1291 106A                                               u1531 04BC  
                                             u1451 031E                                               u1371 014E  
                                             u1540 04DC                                               u1460 0334  
                                             u1380 0164                                               u2317 182E  
                                             u2237 172A                                               u2157 1650  
                                             u2077 154C                                               u1541 04D8  
                                             u1461 0330                                               u1381 0160  
                                             u1550 04F8                                               u1470 0386  
                                             u1390 0176                                               u2327 1844  
                                             u2247 176A                                               u2167 1666  
                                             u2087 1562                                               u1551 04F4  
                                             u1471 0382                                               u1391 0172  
                                             u1560 0514                                               u1480 0398  
                                             u2337 185A                                               u2257 1780  
                                             u2177 167C                                               u2097 15A2  
                                             u1561 0510                                               u1481 0394  
                                             u1617 0060                                               u1570 0530  
                                             u1490 044A                                               u2267 1796  
                                             u2187 1692                                               u1571 052C  
                                             u1491 0446                                               u1707 024E  
                                             u1627 007C                                               u1580 0564  
                                             u2277 17AC                                               u2197 16D2  
                                             u1581 0560                                               u1717 026A  
                                             u1637 00AC                                               u1590 0574  
                                             u2287 17C2                                               u1591 0570  
                                             u1807 0536                                               u1727 0286  
                                             u1647 011A                                               u2297 1802  
                                             u1817 057A                                               u1737 02A2  
                                             u1657 0136                                        main@counter 00C2  
                                             u1907 1358                                               u1827 059A  
                                             u1747 02EA                                               u1667 01A2  
                                             u1917 136E                                               u1837 05CE  
                                             u1757 0306                                               u1677 01BE  
                                             u1927 1384                                               u1847 12AA  
                                             u1767 034E                                               u1687 0216  
                                             u1937 139A                                               u1857 12C0  
                                             u1777 036A                                               u1697 0232  
                                             u1947 13DA                                               u1867 12D6  
                                             u1787 03B2                                               u1957 13F0  
                                             u1877 12EC                                               u1797 03CE  
                                             u1967 1406                                               u1887 1302  
                                             u1977 141C                                               u1897 1342  
                                             u1987 1432                                               u1997 1472  
                              _motorControllerTemp 1444                                               _WPUB 000F5B  
                                    _EUSART1_Write 1A9C                            rightTurnButton@b10Latch 003C  
                                             _main 0050                                               _init 186C  
                     convertCANid2Reg@passedInEIDH 003F                       convertCANid2Reg@passedInEIDL 0041  
                                             fsr2h 000FDA                                               indf2 000FDF  
                                             fsr2l 000FD9                                               btemp 005A  
                     convertCANid2Reg@passedInSIDH 0043                       convertCANid2Reg@passedInSIDL 0045  
                                             start 004C                                       warningLED@v2 0040  
                                     warningLED@v3 0042                                       warningLED@v4 0044  
                                     ___param_bank 000000                                     ??_hazardButton 003E  
                                 ?_canHazardSignal 0052                               ?_motorControllerTemp 003B  
                                   ??_hazardSignal 003D                         __end_of_rightTurnIndicator 13AC  
                    __end_of_OSCILLATOR_Initialize 1ADA                                              ?_main 0038  
                                            ?_init 0038                                              _BSEL0 000E7D  
                                            i2l110 0040                                              i2l560 1A9A  
                                            i2l493 1B06                                              _MSEL0 000E79  
                                            _MSEL1 000E7A                                              _MSEL2 000E7B  
                                            _MSEL3 000E7C                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                                     _b1FuncActive 0036                              CAN_receive@tempCanMsg 004D  
                             __end_of_CAN_transmit 0906                             leftTurnIndicator@value 003B  
                                   ?_EUSART1_Write 0038                                       _b2FuncActive 0032  
                                            pclath 000FFA                                              pclatu 000FFB  
                                            ttemp5 005B                                              ttemp6 005E  
                                            ttemp7 0062                convertReg2ExtendedCANid@ConvertedID 0049  
                                            status 000FD8                                              wtemp8 005B  
                             CAN_transmit@tempEIDH 004E                               CAN_transmit@tempEIDL 004F  
                             CAN_transmit@tempSIDH 0050                               CAN_transmit@tempSIDL 0051  
               _EUSART1_DefaultFramingErrorHandler 000000                                       _b3FuncActive 0011  
                         motorControllerTemp@value 003B                                    __initialization 1A58  
                       __end_of_EUSART1_Initialize 199C                                       __end_of_main 05EC  
                                     __end_of_init 18E6                              ??_motorControllerTemp 003D  
                                     _b4FuncActive 000F                        ?_INTERRUPT_InterruptManager 0038  
                                           ??_main 0054                                             ??_init 0046  
                                _leftTurnIndicator 14DC                                      __activetblptr 000002  
                               ?_leftTurnIndicator 003B                                       _b5FuncActive 000D  
                  ??_WakeUpDefaultInterruptHandler 0038                                  ??_ECAN_Initialize 003C  
                                 batteryTemp@value 003B                                             _CANCON 000F6F  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                           _CIOCON 000F70                                ??_leftTurnIndicator 003D  
                                     _b6FuncActive 000B                                             i2l2020 1A7E  
                                           i2l2022 1A98                                             i2l2260 0020  
                                           i2l2262 002E                                             i2l2264 003C  
                                           i2l2258 0012                                             _RCREG1 000FAE  
                                           _RCSTA1 000FAB                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB1D0 000F36                                             _RXB0D4 000F6A  
                                           _RXB1D1 000F37                                             _RXB0D5 000F6B  
                                           _RXB1D2 000F38                                             _RXB0D6 000F6C  
                                           _RXB1D3 000F39                                             _RXB0D7 000F6D  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                           _SPBRG1 000FAF                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB1D0 000F16  
                                           _TXB0D4 000F2A                                             _TXB1D1 000F17  
                                           _TXB0D5 000F2B                                             _TXB1D2 000F18  
                                           _TXB0D6 000F2C                                             _TXB1D3 000F19  
                                           _TXB0D7 000F2D                                             _TXB2D0 000F06  
                                           _TXB1D4 000F1A                                             _TXB2D1 000F07  
                                           _TXB1D5 000F1B                                             _TXB2D2 000F08  
                                           _TXB1D6 000F1C                                             _TXB2D3 000F09  
                                           _TXB1D7 000F1D                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             _TXREG1 000FAD  
                                           _TXSTA1 000FAC                               canRightSignal@number 0052  
                                     _b7FuncActive 0009                           ?_EUSART1_SetErrorHandler 003A  
                                           _lastb1 0019                                             _lastb2 0015  
                        __end_of_leftTurnIndicator 1574                                       _b8FuncActive 0007  
                                           clear_0 1A5E                                             clear_1 1A6A  
                                           isa$std 000001                   ??_EUSART1_SetOverrunErrorHandler 003C  
                  ?_EUSART1_SetOverrunErrorHandler 003A                                      _canLeftSignal 1A00  
                                     _b9FuncActive 0005                   __end_of_convertReg2StandardCANid 195E  
                                           tblptru 000FF8                                    ??_EUSART1_Write 003A  
                       rightTurnIndicator@checksum 003E                               __end_of_hazardButton 127C  
                                _SYSTEM_Initialize 1AB2                               __end_of_hazardSignal 160C  
                                       __accesstop 0060                            __end_of__initialization 1A70  
                               ?_SYSTEM_Initialize 0038                           _convertReg2ExtendedCANid 0E72  
                           CAN_receive@returnValue 004F                                      ___rparam_used 000001  
                               warningLED@checksum 003E                                     __pcstackCOMRAM 0038  
                                   _leftTurnButton 109C                                ??_SYSTEM_Initialize 003D  
                              batteryTemp@checksum 003E                                     ?_canLeftSignal 0052  
                                    _ECAN_WAKI_ISR 1A7E              convertReg2StandardCANid@tempRXBn_SIDH 0040  
            convertReg2StandardCANid@tempRXBn_SIDL 003A                              leftTurnButton@b1Latch 003C  
                        __end_of_SYSTEM_Initialize 1AC8                                         __pbssBANK0 0060  
            __end_of_WakeUpDefaultInterruptHandler 1B08                      _WakeUpDefaultInterruptHandler 1B06  
                                       __pnvCOMRAM 0056                                         _batterySOC 173C  
                                hazardSignal@value 003B                             __end_of_leftTurnButton 118C  
                  __end_of_EUSART1_SetErrorHandler 1AF8                                       _CAN_transmit 05EC  
                 rightTurnButton@b10FunctionActive 003A                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                   ??_ECAN_SetWakeUpInterruptHandler 003C  
                  ?_ECAN_SetWakeUpInterruptHandler 003A                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
           __end_of_EUSART1_SetFramingErrorHandler 1AEE                     _EUSART1_SetFramingErrorHandler 1AE4  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                   ?_ECAN_WAKI_ISR 0038                                            i2u12_48 1A84  
                                          i2u12_49 1A98                                            _RXB0DLC 000F65  
                                          i2u27_40 0020                                            i2u27_41 001C  
                                          _RXB1DLC 000F35                                            i2u28_40 002E  
                                          i2u28_41 002A                                            i2u29_40 003C  
                                          i2u29_41 0038                                            _OSCTUNE 000F9B  
                                          _SPBRGH1 000F7D                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                                          _RXFCON0 000E46                                            _RXFCON1 000E47  
                               _rightTurnIndicator 1314                                    motorSpeed@value 003B  
                        leftTurnIndicator@checksum 003E                                ?_rightTurnIndicator 003B  
                                          __Hparam 0000                                    ?_leftTurnButton 003A  
                                          __Lparam 0000                          ?_convertReg2StandardCANid 003A  
                                  _ECAN_Initialize 0B5A                                    ??_canLeftSignal 0054  
                                   hazardSignal@v2 0040                                            __pcinit 1A58  
                                   hazardSignal@v3 0042                                     hazardSignal@v4 0044  
                                          __ramtop 0F00                                            _blinkb1 0017  
                                          _blinkb2 0013                                            __ptext0 0050  
                                          __ptext1 0FAC                                            __ptext2 109C  
                                          __ptext3 186C                                            __ptext4 127C  
                                          __ptext5 1314                                            __ptext6 13AC  
                                          __ptext7 1444                                            __ptext8 14DC  
                                          __ptext9 1574                                            _lastb10 0003  
                                          _latchb1 0034                                            _latchb2 0030  
                             ??_rightTurnIndicator 003D                              _OSCILLATOR_Initialize 1AC8  
                                ??_rightTurnButton 003E                                 _EUSART1_Initialize 195E  
                                 _convertCANid2Reg 0CFE                           ??_PIN_MANAGER_Initialize 003A  
                              hazardButton@b2Latch 003C                               end_of_initialization 1A70  
                           _WakeUpInterruptHandler 001B                                ?_EUSART1_Initialize 0038  
                                    __Lmediumconst 0000                        _EUSART1_OverrunErrorHandler 0056  
                                    ??_batteryTemp 003D                                      ??_CAN_receive 004F  
                                      ?_batterySOC 003B                   fp__WakeUpDefaultInterruptHandler 0000  
                   ?_WakeUpDefaultInterruptHandler 0038                        __end_of_motorControllerTemp 14DC  
                                        _RXF10EIDH 000E5A                                          _RXF10EIDL 000E5B  
                                        _RXF11EIDH 000E5E                                          _RXF11EIDL 000E5F  
                                        _RXF12EIDH 000E62                                          _RXF12EIDL 000E63  
                                        _RXF13EIDH 000E66                                          _RXF13EIDL 000E67  
                                        _RXF14EIDH 000E6A                                          _RXF14EIDL 000E6B  
                                        _RXF15EIDH 000E6E                                          _RXF15EIDL 000E6F  
                                        _RXF10SIDH 000E58                                          _RXF10SIDL 000E59  
                                        _RXF11SIDH 000E5C                                          _RXF11SIDL 000E5D  
                                        _RXF12SIDH 000E60                                          _RXF12SIDL 000E61  
                                          postdec2 000FDD                                          _RXF13SIDH 000E64  
                                        _RXF13SIDL 000E65                                          _RXF14SIDH 000E68  
                                        _RXF14SIDL 000E69                                          _RXF15SIDH 000E6C  
                                        _RXF15SIDL 000E6D                                            postinc0 000FEE  
                                          postinc2 000FDE                                         _motorSpeed 13AC  
                             ??_EUSART1_Initialize 003C                                       _hazardButton 118C  
                                     _hazardSignal 1574                                          _PORTAbits 000F80  
                                        _PORTCbits 000F82                                      _b10FuncActive 002E  
                                  ??_ECAN_WAKI_ISR 0038                                         _warningLED 127C  
                           CAN_transmit@tempCanMsg 004C                         ??_convertReg2ExtendedCANid 003E  
                              EUSART1_Write@txData 003A                                      ??_auxBattConn 003D  
                              leftTurnIndicator@v2 0040                                leftTurnIndicator@v3 0042  
                              leftTurnIndicator@v4 0044                              motorControllerTemp@v2 0040  
                            motorControllerTemp@v3 0042                              motorControllerTemp@v4 0044  
                                    batteryTemp@v2 0040                                      batteryTemp@v3 0042  
                                    batteryTemp@v4 0044                            __end_of_ECAN_Initialize 0CFE  
                                  warningLED@value 003B                                __end_of_batteryTemp 16A4  
                     __end_of_INTERRUPT_Initialize 1B06                                __end_of_CAN_receive 0B5A  
                      motorControllerTemp@checksum 003E                             ?_OSCILLATOR_Initialize 0038  
                              start_initialization 1A58                            rightTurnIndicator@value 003B  
                             rightTurnIndicator@v2 0040                               rightTurnIndicator@v3 0042  
                             rightTurnIndicator@v4 0044                              __end_of_EUSART1_Write 1AB2  
                                ??_canHazardSignal 0054                                     _canRightSignal 19D4  
              convertReg2StandardCANid@returnValue 0041                               hazardSignal@checksum 003E  
                              __end_of_auxBattConn 186C                                        ?_motorSpeed 003B  
                                      ?_warningLED 003B                                batterySOCGraphic@v2 0040  
                              batterySOCGraphic@v3 0042                                batterySOCGraphic@v4 0044  
                                      __pbssCOMRAM 0001                                      __pcstackBANK0 00C2  
                           __end_of_canRightSignal 1A00             __end_of_ECAN_SetWakeUpInterruptHandler 1B02  
                   _ECAN_SetWakeUpInterruptHandler 1AF8                                   ??_leftTurnButton 003E  
                 ??_EUSART1_SetFramingErrorHandler 003C                    ?_EUSART1_SetFramingErrorHandler 003A  
                                      _batteryTemp 160C                                          __pnvBANK0 00C6  
                                      _CAN_receive 0906                                   ?_ECAN_Initialize 0038  
                           _PIN_MANAGER_Initialize 199C                           __end_of_convertCANid2Reg 0E72  
                                        __pintcode 0008                                auxBattConn@checksum 003E  
                                  _rightTurnButton 0FAC                       ??_INTERRUPT_InterruptManager 0038  
                                         _BAUDCON1 000FA7                                        _COMSTATbits 000F71  
               _EUSART1_DefaultOverrunErrorHandler 000000                               _EUSART1_ErrorHandler 00C6  
                 __end_of_convertReg2ExtendedCANid 0FAC                            _EUSART1_SetErrorHandler 1AEE  
                   convertCANid2Reg@tempPassedInID 003A                                    ?_canRightSignal 0052  
                             _INTERRUPT_Initialize 1B02                                        _auxBattConn 17D4  
          EUSART1_SetErrorHandler@interruptHandler 003A                                           _LATCbits 000F8B  
                                     ??_batterySOC 003D                                           _PIE5bits 000F76  
                                         _PIR1bits 000F9E                                           _PIR5bits 000F77  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RCONbits 000FD0                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDH 000F31                                           _RXF0EIDL 000EE3  
                                         _RXB1SIDL 000F32                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF6EIDH 000E4A  
                                         _RXF6EIDL 000E4B                                           _RXF0SIDH 000EE0  
                                         _RXF7EIDH 000E4E                                           _RXF0SIDL 000EE1  
                                         _RXF7EIDL 000E4F                                           _RXF1SIDH 000EE4  
                                         _RXF8EIDH 000E52                                           _TXB0EIDH 000F23  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _RXF8EIDL 000E53                                           _RXF2SIDH 000EE8  
                                         _RXF9EIDH 000E56                                           _TXB1EIDH 000F13  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _RXF9EIDL 000E57                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDH 000F03                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _RXF6SIDH 000E48  
                                         _RXF6SIDL 000E49                                           _RXM0EIDH 000EFA  
                                         _RXF7SIDH 000E4C                                           _RXM0EIDL 000EFB  
                                         _RXF7SIDL 000E4D                                           _RXM1EIDH 000EFE  
                                         _RXF8SIDH 000E50                                           _TXB0SIDH 000F21  
                                         _RXM1EIDL 000EFF                                           _RXF8SIDL 000E51  
                                         _TXB0SIDL 000F22                                           _RXF9SIDH 000E54  
                                         _TXB1SIDH 000F11                                           _RXF9SIDL 000E55  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                           _RXFBCON0 000E71  
                                         _RXFBCON1 000E72                                           _RXFBCON2 000E73  
                                         _RXFBCON3 000E74                                           _RXFBCON4 000E75  
                                         _RXFBCON5 000E76                                           _RXFBCON6 000E77  
                                         _RXFBCON7 000E78                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                       batterySOC@v2 0040  
                                     batterySOC@v3 0042                                       batterySOC@v4 0044  
                            __end_of_canLeftSignal 1A2C                                 batterySOC@checksum 003E  
                                        main@speed 00C4                                canLeftSignal@number 0052  
                               __end_of_batterySOC 17D4                                        _INTCON2bits 000FF1  
                            ?_INTERRUPT_Initialize 0038                     leftTurnButton@b1FunctionActive 003A  
                         _convertReg2StandardCANid 18E6                            __end_of_rightTurnButton 109C  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0042              convertReg2ExtendedCANid@tempRXBn_EIDL 003A  
                                _batterySOCGraphic 16A4              convertReg2ExtendedCANid@tempRXBn_SIDH 003B  
            convertReg2ExtendedCANid@tempRXBn_SIDL 003C                                           __Hrparam 0000  
                                         __Lrparam 0000                                 ?_batterySOCGraphic 003B  
                        convertCANid2Reg@canIdType 003E                            ??_OSCILLATOR_Initialize 003A  
                              ??_batterySOCGraphic 003D  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 0048  
                        ??_EUSART1_SetErrorHandler 003C                        _EUSART1_DefaultErrorHandler 000000  
                                  _canHazardSignal 1A2C  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 0047  
                          convertCANid2Reg@wipSIDL 004B                              canHazardSignal@number 0052  
                            __end_of_ECAN_WAKI_ISR 1A9C                                           _blinkb10 0001  
                                         __ptext10 160C                                           __ptext11 16A4  
                                         __ptext20 0CFE                                           __ptext12 173C  
                                         __ptext21 1AB2                                           __ptext13 17D4  
                                         __ptext30 1AF8                                           __ptext22 199C  
                                         __ptext14 1A9C                                           __ptext31 0906  
                                         __ptext23 1AC8                                           __ptext15 118C  
                                         __ptext32 18E6                                           __ptext24 1B02  
                                         __ptext16 19D4                                           __ptext33 0E72  
                                         __ptext25 195E                                           __ptext17 1A00  
                                         __ptext26 1ADA                                           __ptext18 1A2C  
                                         __ptext35 1A7E                                           __ptext27 1AE4  
                                         __ptext19 05EC                                           __ptext36 1B06  
                                         __ptext28 1AEE                                           __ptext37 0000  
                                         __ptext29 0B5A                                   auxBattConn@value 003B  
                                         _latchb10 002C                convertReg2StandardCANid@ConvertedID 0045  
                        __end_of_batterySOCGraphic 173C                          batterySOCGraphic@checksum 003E  
              convertReg2ExtendedCANid@returnValue 0043     EUSART1_SetOverrunErrorHandler@interruptHandler 003A  
                                         isa$xinst 000000                          ?_convertReg2ExtendedCANid 003A  
                                    ?_CAN_transmit 004C                                       ??_motorSpeed 003D  
                                         int$flags 005A                 __end_of_INTERRUPT_InterruptManager 004C  
                       _INTERRUPT_InterruptManager 0008                        _EUSART1_FramingErrorHandler 0058  
                                     ??_warningLED 003D                                        _RXB0CONbits 000F60  
                                      _RXB1CONbits 000F30                                         _INTCONbits 000FF2  
                           ??_INTERRUPT_Initialize 003A                                           intlevel2 0000  
                               __end_of_motorSpeed 1444                            ?_PIN_MANAGER_Initialize 0038  
                                     motorSpeed@v2 0040                                       motorSpeed@v3 0042  
                                     motorSpeed@v4 0044                                       ?_batteryTemp 003B  
           __end_of_EUSART1_SetOverrunErrorHandler 1AE4                     _EUSART1_SetOverrunErrorHandler 1ADA  
                                      _TXB0CONbits 000F20                                         _RCSTA1bits 000FAB  
                                     ?_CAN_receive 004D                                   ?_rightTurnButton 003A  
                                      _TXB1CONbits 000F10                                        _TXB2CONbits 000F00  
                               __end_of_warningLED 1314                                     ??_CAN_transmit 004E  
                                ?_convertCANid2Reg 003A     EUSART1_SetFramingErrorHandler@interruptHandler 003A  
                               ??_convertCANid2Reg 0047                            __end_of_canHazardSignal 1A58  
                               _eusart1RxLastError 001D                                   ??_canRightSignal 0054  
                                  batterySOC@value 003B                                      auxBattConn@v2 0040  
                                    auxBattConn@v3 0042                                      auxBattConn@v4 0044  
                                     ?_auxBattConn 003B                     __end_of_PIN_MANAGER_Initialize 19D4  
                     hazardButton@b2FunctionActive 003A  
