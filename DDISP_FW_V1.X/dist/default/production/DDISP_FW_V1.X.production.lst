

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Dec 05 20:19:22 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 05/05/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F46K80 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    92  0000                     
    93 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    94  0000                     
    95 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    96  0000                     _COMSTATbits	set	3953
    97  0000                     _RXB1SIDH	set	3889
    98  0000                     _RXB1SIDL	set	3890
    99  0000                     _RXB0D7	set	3949
   100  0000                     _RXB0D6	set	3948
   101  0000                     _RXB0D5	set	3947
   102  0000                     _RXB0D4	set	3946
   103  0000                     _RXB0D3	set	3945
   104  0000                     _RXB0D2	set	3944
   105  0000                     _RXB0D1	set	3943
   106  0000                     _RXB0D0	set	3942
   107  0000                     _RXB0DLC	set	3941
   108  0000                     _RXB0SIDH	set	3937
   109  0000                     _RXB0EIDL	set	3940
   110  0000                     _RXB0EIDH	set	3939
   111  0000                     _RXB0SIDL	set	3938
   112  0000                     _TXB2SIDL	set	3842
   113  0000                     _TXB2SIDH	set	3841
   114  0000                     _TXB2EIDH	set	3843
   115  0000                     _TXB2CONbits	set	3840
   116  0000                     _TXB1SIDL	set	3858
   117  0000                     _TXB1SIDH	set	3857
   118  0000                     _TXB1EIDH	set	3859
   119  0000                     _TXB1CONbits	set	3856
   120  0000                     _TXB0SIDL	set	3874
   121  0000                     _TXB0SIDH	set	3873
   122  0000                     _TXB0EIDH	set	3875
   123  0000                     _TXB0CONbits	set	3872
   124  0000                     _BRGCON3	set	3653
   125  0000                     _BRGCON2	set	3652
   126  0000                     _RXF15SIDL	set	3693
   127  0000                     _RXF15SIDH	set	3692
   128  0000                     _RXF15EIDH	set	3694
   129  0000                     _RXF14SIDL	set	3689
   130  0000                     _RXF14SIDH	set	3688
   131  0000                     _RXF14EIDL	set	3691
   132  0000                     _RXF14EIDH	set	3690
   133  0000                     _RXF13SIDL	set	3685
   134  0000                     _RXF13SIDH	set	3684
   135  0000                     _RXF13EIDL	set	3687
   136  0000                     _RXF13EIDH	set	3686
   137  0000                     _RXF12SIDL	set	3681
   138  0000                     _RXF12SIDH	set	3680
   139  0000                     _RXF12EIDL	set	3683
   140  0000                     _RXF12EIDH	set	3682
   141  0000                     _RXF11SIDL	set	3677
   142  0000                     _RXF11SIDH	set	3676
   143  0000                     _RXF11EIDL	set	3679
   144  0000                     _RXF11EIDH	set	3678
   145  0000                     _RXF10SIDL	set	3673
   146  0000                     _RXF10SIDH	set	3672
   147  0000                     _RXF10EIDL	set	3675
   148  0000                     _RXF10EIDH	set	3674
   149  0000                     _RXF9SIDL	set	3669
   150  0000                     _RXF9SIDH	set	3668
   151  0000                     _RXF9EIDL	set	3671
   152  0000                     _RXF9EIDH	set	3670
   153  0000                     _RXF8SIDL	set	3665
   154  0000                     _RXF8SIDH	set	3664
   155  0000                     _RXF8EIDL	set	3667
   156  0000                     _RXF8EIDH	set	3666
   157  0000                     _RXF7SIDL	set	3661
   158  0000                     _RXF7SIDH	set	3660
   159  0000                     _RXF7EIDL	set	3663
   160  0000                     _RXF7EIDH	set	3662
   161  0000                     _RXF6SIDL	set	3657
   162  0000                     _RXF6SIDH	set	3656
   163  0000                     _RXF6EIDL	set	3659
   164  0000                     _RXF6EIDH	set	3658
   165  0000                     _RXF5SIDL	set	3829
   166  0000                     _RXF5SIDH	set	3828
   167  0000                     _RXF5EIDL	set	3831
   168  0000                     _RXF5EIDH	set	3830
   169  0000                     _RXF4SIDL	set	3825
   170  0000                     _RXF4SIDH	set	3824
   171  0000                     _RXF4EIDL	set	3827
   172  0000                     _RXF4EIDH	set	3826
   173  0000                     _RXF3SIDL	set	3821
   174  0000                     _RXF3SIDH	set	3820
   175  0000                     _RXF3EIDL	set	3823
   176  0000                     _RXF3EIDH	set	3822
   177  0000                     _RXF2SIDL	set	3817
   178  0000                     _RXF2SIDH	set	3816
   179  0000                     _RXF2EIDL	set	3819
   180  0000                     _RXF2EIDH	set	3818
   181  0000                     _RXF1SIDL	set	3813
   182  0000                     _RXF1SIDH	set	3812
   183  0000                     _RXF1EIDL	set	3815
   184  0000                     _RXF1EIDH	set	3814
   185  0000                     _RXF0SIDL	set	3809
   186  0000                     _RXF0EIDL	set	3811
   187  0000                     _RXFBCON7	set	3704
   188  0000                     _RXFBCON6	set	3703
   189  0000                     _RXFBCON5	set	3702
   190  0000                     _RXFBCON4	set	3701
   191  0000                     _RXFBCON3	set	3700
   192  0000                     _RXFBCON2	set	3699
   193  0000                     _RXFBCON1	set	3698
   194  0000                     _RXFBCON0	set	3697
   195  0000                     _MSEL3	set	3708
   196  0000                     _MSEL2	set	3707
   197  0000                     _MSEL1	set	3706
   198  0000                     _MSEL0	set	3705
   199  0000                     _RXFCON1	set	3655
   200  0000                     _RXM1SIDL	set	3837
   201  0000                     _RXM1SIDH	set	3836
   202  0000                     _RXM1EIDL	set	3839
   203  0000                     _RXM1EIDH	set	3838
   204  0000                     _RXM0SIDL	set	3833
   205  0000                     _RXM0EIDL	set	3835
   206  0000                     _CIOCON	set	3952
   207  0000                     _ECANCON	set	3954
   208  0000                     _TRISD	set	3989
   209  0000                     _TRISC	set	3988
   210  0000                     _TRISB	set	3987
   211  0000                     _LATC	set	3979
   212  0000                     _LATB	set	3978
   213  0000                     _TXREG1	set	4013
   214  0000                     _RCREG1	set	4014
   215  0000                     _SPBRG1	set	4015
   216  0000                     _TXSTA1	set	4012
   217                           
   218                           	psect	nvCOMRAM
   219  000056                     __pnvCOMRAM:
   220                           	callstack 0
   221  000056                     _EUSART1_OverrunErrorHandler:
   222                           	callstack 0
   223  000056                     	ds	2
   224  000058                     _EUSART1_FramingErrorHandler:
   225                           	callstack 0
   226  000058                     	ds	2
   227                           
   228                           	psect	nvBANK0
   229  0000C6                     __pnvBANK0:
   230                           	callstack 0
   231  0000C6                     _EUSART1_ErrorHandler:
   232                           	callstack 0
   233  0000C6                     	ds	2
   234  0000                     _LATCbits	set	3979
   235  0000                     _RCSTA1bits	set	4011
   236  0000                     _TXSTA1bits	set	4012
   237  0000                     _BRGCON1	set	3651
   238  0000                     _RXFCON0	set	3654
   239  0000                     _BSEL0	set	3709
   240  0000                     _WPUB	set	3931
   241  0000                     _ANCON1	set	3932
   242  0000                     _ANCON0	set	3933
   243  0000                     _PIE5bits	set	3958
   244  0000                     _SPBRGH1	set	3965
   245  0000                     _BAUDCON1	set	4007
   246  0000                     _RCSTA1	set	4011
   247  0000                     _RCONbits	set	4048
   248  0000                     _PORTAbits	set	3968
   249  0000                     _LATA	set	3977
   250  0000                     _LATD	set	3980
   251  0000                     _LATE	set	3981
   252  0000                     _PIR1bits	set	3998
   253  0000                     _OSCCON2	set	4050
   254  0000                     _OSCCON	set	4051
   255  0000                     _INTCON2bits	set	4081
   256  0000                     _INTCONbits	set	4082
   257  0000                     _PIR5bits	set	3959
   258  0000                     _TRISA	set	3986
   259  0000                     _TRISE	set	3990
   260  0000                     _REFOCON	set	3994
   261  0000                     _OSCTUNE	set	3995
   262  0000                     _RXB0CONbits	set	3936
   263  0000                     _CANSTAT	set	3950
   264  0000                     _CANCON	set	3951
   265  0000                     _RXF0SIDH	set	3808
   266  0000                     _RXF0EIDH	set	3810
   267  0000                     _RXM0SIDH	set	3832
   268  0000                     _RXM0EIDH	set	3834
   269  0000                     _RXF15EIDL	set	3695
   270  0000                     _RXB1CONbits	set	3888
   271  0000                     _TXB0D7	set	3885
   272  0000                     _TXB0D6	set	3884
   273  0000                     _TXB0D5	set	3883
   274  0000                     _TXB0D4	set	3882
   275  0000                     _TXB0D3	set	3881
   276  0000                     _TXB0D2	set	3880
   277  0000                     _TXB0D1	set	3879
   278  0000                     _TXB0D0	set	3878
   279  0000                     _TXB0DLC	set	3877
   280  0000                     _TXB0EIDL	set	3876
   281  0000                     _TXB1D7	set	3869
   282  0000                     _TXB1D6	set	3868
   283  0000                     _TXB1D5	set	3867
   284  0000                     _TXB1D4	set	3866
   285  0000                     _TXB1D3	set	3865
   286  0000                     _TXB1D2	set	3864
   287  0000                     _TXB1D1	set	3863
   288  0000                     _TXB1D0	set	3862
   289  0000                     _TXB1DLC	set	3861
   290  0000                     _TXB1EIDL	set	3860
   291  0000                     _TXB2D7	set	3853
   292  0000                     _TXB2D6	set	3852
   293  0000                     _TXB2D5	set	3851
   294  0000                     _TXB2D4	set	3850
   295  0000                     _TXB2D3	set	3849
   296  0000                     _TXB2D2	set	3848
   297  0000                     _TXB2D1	set	3847
   298  0000                     _TXB2D0	set	3846
   299  0000                     _TXB2DLC	set	3845
   300  0000                     _TXB2EIDL	set	3844
   301  0000                     _RXB1D7	set	3901
   302  0000                     _RXB1D6	set	3900
   303  0000                     _RXB1D5	set	3899
   304  0000                     _RXB1D4	set	3898
   305  0000                     _RXB1D3	set	3897
   306  0000                     _RXB1D2	set	3896
   307  0000                     _RXB1D1	set	3895
   308  0000                     _RXB1D0	set	3894
   309  0000                     _RXB1DLC	set	3893
   310  0000                     _RXB1EIDL	set	3892
   311  0000                     _RXB1EIDH	set	3891
   312  0000                     _PORTCbits	set	3970
   313                           
   314                           ; #config settings
   315                           
   316                           	psect	cinit
   317  001A74                     __pcinit:
   318                           	callstack 0
   319  001A74                     start_initialization:
   320                           	callstack 0
   321  001A74                     __initialization:
   322                           	callstack 0
   323                           
   324                           ; Clear objects allocated to BANK0 (98 bytes)
   325  001A74  EE00  F060         	lfsr	0,__pbssBANK0
   326  001A78  0E62               	movlw	98
   327  001A7A                     clear_0:
   328  001A7A  6AEE               	clrf	postinc0,c
   329  001A7C  06E8               	decf	wreg,f,c
   330  001A7E  E1FD               	bnz	clear_0
   331                           
   332                           ; Clear objects allocated to COMRAM (55 bytes)
   333  001A80  EE00  F001         	lfsr	0,__pbssCOMRAM
   334  001A84  0E37               	movlw	55
   335  001A86                     clear_1:
   336  001A86  6AEE               	clrf	postinc0,c
   337  001A88  06E8               	decf	wreg,f,c
   338  001A8A  E1FD               	bnz	clear_1
   339  001A8C                     end_of_initialization:
   340                           	callstack 0
   341  001A8C                     __end_of__initialization:
   342                           	callstack 0
   343  001A8C  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   344  001A8E  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   345  001A90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   346  001A92  6EF8               	movwf	tblptru,c
   347  001A94  0100               	movlb	0
   348  001A96  EF28  F000         	goto	_main	;jump to C main() function
   349                           
   350                           	psect	bssCOMRAM
   351  000001                     __pbssCOMRAM:
   352                           	callstack 0
   353  000001                     _blinkb10:
   354                           	callstack 0
   355  000001                     	ds	2
   356  000003                     _lastb10:
   357                           	callstack 0
   358  000003                     	ds	2
   359  000005                     _b9FuncActive:
   360                           	callstack 0
   361  000005                     	ds	2
   362  000007                     _b8FuncActive:
   363                           	callstack 0
   364  000007                     	ds	2
   365  000009                     _b7FuncActive:
   366                           	callstack 0
   367  000009                     	ds	2
   368  00000B                     _b6FuncActive:
   369                           	callstack 0
   370  00000B                     	ds	2
   371  00000D                     _b5FuncActive:
   372                           	callstack 0
   373  00000D                     	ds	2
   374  00000F                     _b4FuncActive:
   375                           	callstack 0
   376  00000F                     	ds	2
   377  000011                     _b3FuncActive:
   378                           	callstack 0
   379  000011                     	ds	2
   380  000013                     _blinkb2:
   381                           	callstack 0
   382  000013                     	ds	2
   383  000015                     _lastb2:
   384                           	callstack 0
   385  000015                     	ds	2
   386  000017                     _blinkb1:
   387                           	callstack 0
   388  000017                     	ds	2
   389  000019                     _lastb1:
   390                           	callstack 0
   391  000019                     	ds	2
   392  00001B                     _WakeUpInterruptHandler:
   393                           	callstack 0
   394  00001B                     	ds	2
   395  00001D                     _eusart1RxLastError:
   396                           	callstack 0
   397  00001D                     	ds	1
   398  00001E                     _rx:
   399                           	callstack 0
   400  00001E                     	ds	14
   401  00002C                     _latchb10:
   402                           	callstack 0
   403  00002C                     	ds	2
   404  00002E                     _b10FuncActive:
   405                           	callstack 0
   406  00002E                     	ds	2
   407  000030                     _latchb2:
   408                           	callstack 0
   409  000030                     	ds	2
   410  000032                     _b2FuncActive:
   411                           	callstack 0
   412  000032                     	ds	2
   413  000034                     _latchb1:
   414                           	callstack 0
   415  000034                     	ds	2
   416  000036                     _b1FuncActive:
   417                           	callstack 0
   418  000036                     	ds	2
   419                           
   420                           	psect	bssBANK0
   421  000060                     __pbssBANK0:
   422                           	callstack 0
   423  000060                     _tx7:
   424                           	callstack 0
   425  000060                     	ds	14
   426  00006E                     _tx6:
   427                           	callstack 0
   428  00006E                     	ds	14
   429  00007C                     _tx5:
   430                           	callstack 0
   431  00007C                     	ds	14
   432  00008A                     _tx4:
   433                           	callstack 0
   434  00008A                     	ds	14
   435  000098                     _tx3:
   436                           	callstack 0
   437  000098                     	ds	14
   438  0000A6                     _tx2:
   439                           	callstack 0
   440  0000A6                     	ds	14
   441  0000B4                     _tx1:
   442                           	callstack 0
   443  0000B4                     	ds	14
   444                           
   445                           	psect	cstackBANK0
   446  0000C2                     __pcstackBANK0:
   447                           	callstack 0
   448  0000C2                     main@counter:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x0
   452  0000C2                     	ds	2
   453  0000C4                     main@speed:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x2
   457  0000C4                     	ds	2
   458                           
   459                           	psect	cstackCOMRAM
   460  000038                     __pcstackCOMRAM:
   461                           	callstack 0
   462  000038                     ??_INTERRUPT_InterruptManager:
   463  000038                     
   464                           ; 1 bytes @ 0x0
   465  000038                     	ds	2
   466  00003A                     ?_convertReg2ExtendedCANid:
   467                           	callstack 0
   468  00003A                     ?_convertReg2StandardCANid:
   469                           	callstack 0
   470  00003A                     EUSART1_Write@txData:
   471                           	callstack 0
   472  00003A                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   473                           	callstack 0
   474  00003A                     convertReg2StandardCANid@tempRXBn_SIDL:
   475                           	callstack 0
   476  00003A                     EUSART1_SetFramingErrorHandler@interruptHandler:
   477                           	callstack 0
   478  00003A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   479                           	callstack 0
   480  00003A                     EUSART1_SetErrorHandler@interruptHandler:
   481                           	callstack 0
   482  00003A                     ECAN_SetWakeUpInterruptHandler@handler:
   483                           	callstack 0
   484  00003A                     leftTurnButton@b1FunctionActive:
   485                           	callstack 0
   486  00003A                     rightTurnButton@b10FunctionActive:
   487                           	callstack 0
   488  00003A                     hazardButton@b2FunctionActive:
   489                           	callstack 0
   490  00003A                     convertCANid2Reg@tempPassedInID:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x2
   494  00003A                     	ds	1
   495  00003B                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   496                           	callstack 0
   497  00003B                     leftTurnIndicator@value:
   498                           	callstack 0
   499  00003B                     rightTurnIndicator@value:
   500                           	callstack 0
   501  00003B                     warningLED@value:
   502                           	callstack 0
   503  00003B                     auxBattConn@value:
   504                           	callstack 0
   505  00003B                     motorSpeed@value:
   506                           	callstack 0
   507  00003B                     motorControllerTemp@value:
   508                           	callstack 0
   509  00003B                     batteryTemp@value:
   510                           	callstack 0
   511  00003B                     hazardSignal@value:
   512                           	callstack 0
   513  00003B                     batterySOC@value:
   514                           	callstack 0
   515  00003B                     batterySOCGraphic@value:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x3
   519  00003B                     	ds	1
   520  00003C                     ??_ECAN_Initialize:
   521  00003C                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   522                           	callstack 0
   523  00003C                     leftTurnButton@b1Latch:
   524                           	callstack 0
   525  00003C                     rightTurnButton@b10Latch:
   526                           	callstack 0
   527  00003C                     hazardButton@b2Latch:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x4
   531  00003C                     	ds	1
   532  00003D                     ??_rightTurnIndicator:
   533  00003D                     ??_leftTurnIndicator:
   534  00003D                     ??_hazardSignal:
   535  00003D                     ??_motorSpeed:
   536  00003D                     ??_warningLED:
   537  00003D                     ??_auxBattConn:
   538  00003D                     ??_motorControllerTemp:
   539  00003D                     ??_batteryTemp:
   540  00003D                     ??_batterySOC:
   541  00003D                     ??_batterySOCGraphic:
   542                           
   543                           ; 1 bytes @ 0x5
   544  00003D                     	ds	1
   545  00003E                     ??_convertReg2ExtendedCANid:
   546  00003E                     ??_convertReg2StandardCANid:
   547  00003E                     ??_leftTurnButton:
   548  00003E                     ??_rightTurnButton:
   549  00003E                     ??_hazardButton:
   550  00003E                     convertCANid2Reg@canIdType:
   551                           	callstack 0
   552  00003E                     leftTurnIndicator@checksum:
   553                           	callstack 0
   554  00003E                     rightTurnIndicator@checksum:
   555                           	callstack 0
   556  00003E                     warningLED@checksum:
   557                           	callstack 0
   558  00003E                     auxBattConn@checksum:
   559                           	callstack 0
   560  00003E                     motorSpeed@checksum:
   561                           	callstack 0
   562  00003E                     motorControllerTemp@checksum:
   563                           	callstack 0
   564  00003E                     batteryTemp@checksum:
   565                           	callstack 0
   566  00003E                     hazardSignal@checksum:
   567                           	callstack 0
   568  00003E                     batterySOC@checksum:
   569                           	callstack 0
   570  00003E                     batterySOCGraphic@checksum:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x6
   574  00003E                     	ds	1
   575  00003F                     convertCANid2Reg@passedInEIDH:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x7
   579  00003F                     	ds	1
   580  000040                     convertReg2StandardCANid@tempRXBn_SIDH:
   581                           	callstack 0
   582  000040                     leftTurnIndicator@v2:
   583                           	callstack 0
   584  000040                     rightTurnIndicator@v2:
   585                           	callstack 0
   586  000040                     warningLED@v2:
   587                           	callstack 0
   588  000040                     auxBattConn@v2:
   589                           	callstack 0
   590  000040                     motorSpeed@v2:
   591                           	callstack 0
   592  000040                     motorControllerTemp@v2:
   593                           	callstack 0
   594  000040                     batteryTemp@v2:
   595                           	callstack 0
   596  000040                     hazardSignal@v2:
   597                           	callstack 0
   598  000040                     batterySOC@v2:
   599                           	callstack 0
   600  000040                     batterySOCGraphic@v2:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x8
   604  000040                     	ds	1
   605  000041                     convertCANid2Reg@passedInEIDL:
   606                           	callstack 0
   607  000041                     convertReg2StandardCANid@returnValue:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x9
   611  000041                     	ds	1
   612  000042                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   613                           	callstack 0
   614  000042                     leftTurnIndicator@v3:
   615                           	callstack 0
   616  000042                     rightTurnIndicator@v3:
   617                           	callstack 0
   618  000042                     warningLED@v3:
   619                           	callstack 0
   620  000042                     auxBattConn@v3:
   621                           	callstack 0
   622  000042                     motorSpeed@v3:
   623                           	callstack 0
   624  000042                     motorControllerTemp@v3:
   625                           	callstack 0
   626  000042                     batteryTemp@v3:
   627                           	callstack 0
   628  000042                     hazardSignal@v3:
   629                           	callstack 0
   630  000042                     batterySOC@v3:
   631                           	callstack 0
   632  000042                     batterySOCGraphic@v3:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0xA
   636  000042                     	ds	1
   637  000043                     convertCANid2Reg@passedInSIDH:
   638                           	callstack 0
   639  000043                     convertReg2ExtendedCANid@returnValue:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0xB
   643  000043                     	ds	1
   644  000044                     leftTurnIndicator@v4:
   645                           	callstack 0
   646  000044                     rightTurnIndicator@v4:
   647                           	callstack 0
   648  000044                     warningLED@v4:
   649                           	callstack 0
   650  000044                     auxBattConn@v4:
   651                           	callstack 0
   652  000044                     motorSpeed@v4:
   653                           	callstack 0
   654  000044                     motorControllerTemp@v4:
   655                           	callstack 0
   656  000044                     batteryTemp@v4:
   657                           	callstack 0
   658  000044                     hazardSignal@v4:
   659                           	callstack 0
   660  000044                     batterySOC@v4:
   661                           	callstack 0
   662  000044                     batterySOCGraphic@v4:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xC
   666  000044                     	ds	1
   667  000045                     convertCANid2Reg@passedInSIDL:
   668                           	callstack 0
   669  000045                     convertReg2StandardCANid@ConvertedID:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0xD
   673  000045                     	ds	1
   674  000046                     
   675                           ; 1 bytes @ 0xE
   676  000046                     	ds	1
   677  000047                     ??_convertCANid2Reg:
   678  000047                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0xF
   682  000047                     	ds	1
   683  000048                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x10
   687  000048                     	ds	1
   688  000049                     convertReg2ExtendedCANid@ConvertedID:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x11
   692  000049                     	ds	2
   693  00004B                     convertCANid2Reg@wipSIDL:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x13
   697  00004B                     	ds	1
   698  00004C                     CAN_transmit@tempCanMsg:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x14
   702  00004C                     	ds	1
   703  00004D                     CAN_receive@tempCanMsg:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x15
   707  00004D                     	ds	1
   708  00004E                     CAN_transmit@tempEIDH:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x16
   712  00004E                     	ds	1
   713  00004F                     CAN_transmit@tempEIDL:
   714                           	callstack 0
   715  00004F                     CAN_receive@returnValue:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x17
   719  00004F                     	ds	1
   720  000050                     CAN_transmit@tempSIDH:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x18
   724  000050                     	ds	1
   725  000051                     CAN_transmit@tempSIDL:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x19
   729  000051                     	ds	1
   730  000052                     canRightSignal@number:
   731                           	callstack 0
   732  000052                     canLeftSignal@number:
   733                           	callstack 0
   734  000052                     canHazardSignal@number:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x1A
   738  000052                     	ds	2
   739  000054                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x1C
   742  000054                     	ds	2
   743                           
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 50 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  speed           2    2[BANK0 ] int 
   754 ;;  counter         2    0[BANK0 ] int 
   755 ;;  tog             1    0        unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   768 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   769 ;;Total ram usage:        6 bytes
   770 ;; Hardware stack levels required when called: 6
   771 ;; This function calls:
   772 ;;		_CAN_receive
   773 ;;		_SYSTEM_Initialize
   774 ;;		_auxBattConn
   775 ;;		_canHazardSignal
   776 ;;		_canLeftSignal
   777 ;;		_canRightSignal
   778 ;;		_hazardButton
   779 ;;		_hazardSignal
   780 ;;		_init
   781 ;;		_leftTurnButton
   782 ;;		_leftTurnIndicator
   783 ;;		_motorSpeed
   784 ;;		_rightTurnButton
   785 ;;		_rightTurnIndicator
   786 ;;		_warningLED
   787 ;; This function is called by:
   788 ;;		Startup code after reset
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text0
   793  000050                     __ptext0:
   794                           	callstack 0
   795  000050                     _main:
   796                           	callstack 25
   797  000050                     
   798                           ;main.c: 51:     SYSTEM_Initialize();
   799  000050  EC67  F00D         	call	_SYSTEM_Initialize	;wreg free
   800  000054                     l4598:
   801                           
   802                           ;main.c: 54:         if (CAN_receive(&rx)){
   803  000054  0E1E               	movlw	low _rx
   804  000056  6E4D               	movwf	CAN_receive@tempCanMsg^0,c
   805  000058  0E00               	movlw	high _rx
   806  00005A  6E4E               	movwf	(CAN_receive@tempCanMsg+1)^0,c
   807  00005C  EC90  F004         	call	_CAN_receive	;wreg free
   808  000060  0900               	iorlw	0
   809  000062  B4D8               	btfsc	status,2,c
   810  000064  EF36  F000         	goto	u1411
   811  000068  EF38  F000         	goto	u1410
   812  00006C                     u1411:
   813  00006C  EF2A  F000         	goto	l4598
   814  000070                     u1410:
   815  000070                     
   816                           ;main.c: 55:             if (rx.frame.id == 0x22){
   817  000070  0E22               	movlw	34
   818  000072  181F               	xorwf	(_rx+1)^0,w,c
   819  000074  1020               	iorwf	(_rx+2)^0,w,c
   820  000076  1021               	iorwf	(_rx+3)^0,w,c
   821  000078  1022               	iorwf	(_rx+4)^0,w,c
   822  00007A  A4D8               	btfss	status,2,c
   823  00007C  EF42  F000         	goto	u1421
   824  000080  EF44  F000         	goto	u1420
   825  000084                     u1421:
   826  000084  EF46  F000         	goto	l667
   827  000088                     u1420:
   828  000088  EF48  F000         	goto	l670
   829  00008C                     l667:
   830  00008C  EF2A  F000         	goto	l4598
   831  000090                     l670:
   832  000090  8C8B               	bsf	139,6,c	;volatile
   833  000092                     
   834                           ;main.c: 64:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   835  000092  0E1A               	movlw	26
   836  000094  6E55               	movwf	(??_main+1)^0,c
   837  000096  0E5E               	movlw	94
   838  000098  6E54               	movwf	??_main^0,c
   839  00009A  0E6E               	movlw	110
   840  00009C                     u1737:
   841  00009C  2EE8               	decfsz	wreg,f,c
   842  00009E  D7FE               	bra	u1737
   843  0000A0  2E54               	decfsz	??_main^0,f,c
   844  0000A2  D7FC               	bra	u1737
   845  0000A4  2E55               	decfsz	(??_main+1)^0,f,c
   846  0000A6  D7FA               	bra	u1737
   847  0000A8  D000               	nop2	
   848  0000AA                     
   849                           ;main.c: 65:     init();
   850  0000AA  EC44  F00C         	call	_init	;wreg free
   851  0000AE                     
   852                           ;main.c: 66:     _delay((unsigned long)((500)*(20000000/4000.0)));
   853  0000AE  0E0D               	movlw	13
   854  0000B0  6E55               	movwf	(??_main+1)^0,c
   855  0000B2  0EAF               	movlw	175
   856  0000B4  6E54               	movwf	??_main^0,c
   857  0000B6  0EB6               	movlw	182
   858  0000B8                     u1747:
   859  0000B8  2EE8               	decfsz	wreg,f,c
   860  0000BA  D7FE               	bra	u1747
   861  0000BC  2E54               	decfsz	??_main^0,f,c
   862  0000BE  D7FC               	bra	u1747
   863  0000C0  2E55               	decfsz	(??_main+1)^0,f,c
   864  0000C2  D7FA               	bra	u1747
   865  0000C4  D000               	nop2	
   866  0000C6                     
   867                           ;main.c: 68:     int counter = 0;
   868  0000C6  0E00               	movlw	0
   869  0000C8  0100               	movlb	0	; () banked
   870  0000CA  6FC3               	movwf	(main@counter+1)& (0+255),b
   871  0000CC  0E00               	movlw	0
   872  0000CE  6FC2               	movwf	main@counter& (0+255),b
   873  0000D0                     
   874                           ; BSR set to: 0
   875                           ;main.c: 69:     int speed = 0;
   876  0000D0  0E00               	movlw	0
   877  0000D2  6FC5               	movwf	(main@speed+1)& (0+255),b
   878  0000D4  0E00               	movlw	0
   879  0000D6  6FC4               	movwf	main@speed& (0+255),b
   880  0000D8                     l4620:
   881                           
   882                           ;main.c: 72:         counter++;
   883  0000D8  0100               	movlb	0	; () banked
   884  0000DA  4BC2               	infsnz	main@counter& (0+255),f,b
   885  0000DC  2BC3               	incf	(main@counter+1)& (0+255),f,b
   886  0000DE                     
   887                           ; BSR set to: 0
   888                           ;main.c: 73:         _delay((unsigned long)((50)*(20000000/4000.0)));
   889  0000DE  0E02               	movlw	2
   890  0000E0  6E55               	movwf	(??_main+1)^0,c
   891  0000E2  0E45               	movlw	69
   892  0000E4  6E54               	movwf	??_main^0,c
   893  0000E6  0EAA               	movlw	170
   894  0000E8                     u1757:
   895  0000E8  2EE8               	decfsz	wreg,f,c
   896  0000EA  D7FE               	bra	u1757
   897  0000EC  2E54               	decfsz	??_main^0,f,c
   898  0000EE  D7FC               	bra	u1757
   899  0000F0  2E55               	decfsz	(??_main+1)^0,f,c
   900  0000F2  D7FA               	bra	u1757
   901  0000F4                     
   902                           ;main.c: 79:         if (b10FuncActive && !lastb10 && !blinkb1 && !blinkb2){
   903  0000F4  502E               	movf	_b10FuncActive^0,w,c
   904  0000F6  102F               	iorwf	(_b10FuncActive+1)^0,w,c
   905  0000F8  B4D8               	btfsc	status,2,c
   906  0000FA  EF81  F000         	goto	u1431
   907  0000FE  EF83  F000         	goto	u1430
   908  000102                     u1431:
   909  000102  EFBE  F000         	goto	l4642
   910  000106                     u1430:
   911  000106  5003               	movf	_lastb10^0,w,c
   912  000108  1004               	iorwf	(_lastb10+1)^0,w,c
   913  00010A  A4D8               	btfss	status,2,c
   914  00010C  EF8A  F000         	goto	u1441
   915  000110  EF8C  F000         	goto	u1440
   916  000114                     u1441:
   917  000114  EFBE  F000         	goto	l4642
   918  000118                     u1440:
   919  000118  5017               	movf	_blinkb1^0,w,c
   920  00011A  1018               	iorwf	(_blinkb1+1)^0,w,c
   921  00011C  A4D8               	btfss	status,2,c
   922  00011E  EF93  F000         	goto	u1451
   923  000122  EF95  F000         	goto	u1450
   924  000126                     u1451:
   925  000126  EFBE  F000         	goto	l4642
   926  00012A                     u1450:
   927  00012A  5013               	movf	_blinkb2^0,w,c
   928  00012C  1014               	iorwf	(_blinkb2+1)^0,w,c
   929  00012E  A4D8               	btfss	status,2,c
   930  000130  EF9C  F000         	goto	u1461
   931  000134  EF9E  F000         	goto	u1460
   932  000138                     u1461:
   933  000138  EFBE  F000         	goto	l4642
   934  00013C                     u1460:
   935  00013C                     
   936                           ;main.c: 80:             blinkb10 = 1;
   937  00013C  0E00               	movlw	0
   938  00013E  6E02               	movwf	(_blinkb10+1)^0,c
   939  000140  0E01               	movlw	1
   940  000142  6E01               	movwf	_blinkb10^0,c
   941  000144                     
   942                           ;main.c: 81:             canRightSignal(1);
   943  000144  0E00               	movlw	0
   944  000146  6E53               	movwf	(canRightSignal@number+1)^0,c
   945  000148  0E01               	movlw	1
   946  00014A  6E52               	movwf	canRightSignal@number^0,c
   947  00014C  ECF8  F00C         	call	_canRightSignal	;wreg free
   948  000150                     
   949                           ;main.c: 82:             _delay((unsigned long)((10)*(20000000/4000.0)));
   950  000150  0E41               	movlw	65
   951  000152  6E54               	movwf	??_main^0,c
   952  000154  0EEE               	movlw	238
   953  000156                     u1767:
   954  000156  2EE8               	decfsz	wreg,f,c
   955  000158  D7FE               	bra	u1767
   956  00015A  2E54               	decfsz	??_main^0,f,c
   957  00015C  D7FC               	bra	u1767
   958  00015E  D000               	nop2	
   959  000160                     
   960                           ;main.c: 83:             rightTurnIndicator(1);
   961  000160  0E00               	movlw	0
   962  000162  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
   963  000164  0E01               	movlw	1
   964  000166  6E3B               	movwf	rightTurnIndicator@value^0,c
   965  000168  EC98  F009         	call	_rightTurnIndicator	;wreg free
   966  00016C                     
   967                           ;main.c: 84:              _delay((unsigned long)((10)*(20000000/4000.0)));
   968  00016C  0E41               	movlw	65
   969  00016E  6E54               	movwf	??_main^0,c
   970  000170  0EEE               	movlw	238
   971  000172                     u1777:
   972  000172  2EE8               	decfsz	wreg,f,c
   973  000174  D7FE               	bra	u1777
   974  000176  2E54               	decfsz	??_main^0,f,c
   975  000178  D7FC               	bra	u1777
   976  00017A  D000               	nop2	
   977  00017C                     l4642:
   978                           
   979                           ;main.c: 86:         if (b1FuncActive && !lastb1 && !blinkb2 && !blinkb10){
   980  00017C  5036               	movf	_b1FuncActive^0,w,c
   981  00017E  1037               	iorwf	(_b1FuncActive+1)^0,w,c
   982  000180  B4D8               	btfsc	status,2,c
   983  000182  EFC5  F000         	goto	u1471
   984  000186  EFC7  F000         	goto	u1470
   985  00018A                     u1471:
   986  00018A  EF02  F001         	goto	l4660
   987  00018E                     u1470:
   988  00018E  5019               	movf	_lastb1^0,w,c
   989  000190  101A               	iorwf	(_lastb1+1)^0,w,c
   990  000192  A4D8               	btfss	status,2,c
   991  000194  EFCE  F000         	goto	u1481
   992  000198  EFD0  F000         	goto	u1480
   993  00019C                     u1481:
   994  00019C  EF02  F001         	goto	l4660
   995  0001A0                     u1480:
   996  0001A0  5013               	movf	_blinkb2^0,w,c
   997  0001A2  1014               	iorwf	(_blinkb2+1)^0,w,c
   998  0001A4  A4D8               	btfss	status,2,c
   999  0001A6  EFD7  F000         	goto	u1491
  1000  0001AA  EFD9  F000         	goto	u1490
  1001  0001AE                     u1491:
  1002  0001AE  EF02  F001         	goto	l4660
  1003  0001B2                     u1490:
  1004  0001B2  5001               	movf	_blinkb10^0,w,c
  1005  0001B4  1002               	iorwf	(_blinkb10+1)^0,w,c
  1006  0001B6  A4D8               	btfss	status,2,c
  1007  0001B8  EFE0  F000         	goto	u1501
  1008  0001BC  EFE2  F000         	goto	u1500
  1009  0001C0                     u1501:
  1010  0001C0  EF02  F001         	goto	l4660
  1011  0001C4                     u1500:
  1012  0001C4                     
  1013                           ;main.c: 87:             blinkb1 = 1;
  1014  0001C4  0E00               	movlw	0
  1015  0001C6  6E18               	movwf	(_blinkb1+1)^0,c
  1016  0001C8  0E01               	movlw	1
  1017  0001CA  6E17               	movwf	_blinkb1^0,c
  1018  0001CC                     
  1019                           ;main.c: 88:             canLeftSignal(1);
  1020  0001CC  0E00               	movlw	0
  1021  0001CE  6E53               	movwf	(canLeftSignal@number+1)^0,c
  1022  0001D0  0E01               	movlw	1
  1023  0001D2  6E52               	movwf	canLeftSignal@number^0,c
  1024  0001D4  EC0E  F00D         	call	_canLeftSignal	;wreg free
  1025  0001D8                     
  1026                           ;main.c: 89:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1027  0001D8  0E41               	movlw	65
  1028  0001DA  6E54               	movwf	??_main^0,c
  1029  0001DC  0EEE               	movlw	238
  1030  0001DE                     u1787:
  1031  0001DE  2EE8               	decfsz	wreg,f,c
  1032  0001E0  D7FE               	bra	u1787
  1033  0001E2  2E54               	decfsz	??_main^0,f,c
  1034  0001E4  D7FC               	bra	u1787
  1035  0001E6  D000               	nop2	
  1036  0001E8                     
  1037                           ;main.c: 90:             leftTurnIndicator(1);
  1038  0001E8  0E00               	movlw	0
  1039  0001EA  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  1040  0001EC  0E01               	movlw	1
  1041  0001EE  6E3B               	movwf	leftTurnIndicator@value^0,c
  1042  0001F0  EC7C  F00A         	call	_leftTurnIndicator	;wreg free
  1043  0001F4                     
  1044                           ;main.c: 91:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1045  0001F4  0E41               	movlw	65
  1046  0001F6  6E54               	movwf	??_main^0,c
  1047  0001F8  0EEE               	movlw	238
  1048  0001FA                     u1797:
  1049  0001FA  2EE8               	decfsz	wreg,f,c
  1050  0001FC  D7FE               	bra	u1797
  1051  0001FE  2E54               	decfsz	??_main^0,f,c
  1052  000200  D7FC               	bra	u1797
  1053  000202  D000               	nop2	
  1054  000204                     l4660:
  1055                           
  1056                           ;main.c: 93:         if (b2FuncActive && !lastb2){
  1057  000204  5032               	movf	_b2FuncActive^0,w,c
  1058  000206  1033               	iorwf	(_b2FuncActive+1)^0,w,c
  1059  000208  B4D8               	btfsc	status,2,c
  1060  00020A  EF09  F001         	goto	u1511
  1061  00020E  EF0B  F001         	goto	u1510
  1062  000212                     u1511:
  1063  000212  EF3C  F001         	goto	l4674
  1064  000216                     u1510:
  1065  000216  5015               	movf	_lastb2^0,w,c
  1066  000218  1016               	iorwf	(_lastb2+1)^0,w,c
  1067  00021A  A4D8               	btfss	status,2,c
  1068  00021C  EF12  F001         	goto	u1521
  1069  000220  EF14  F001         	goto	u1520
  1070  000224                     u1521:
  1071  000224  EF3C  F001         	goto	l4674
  1072  000228                     u1520:
  1073  000228                     
  1074                           ;main.c: 94:             blinkb2 = 1;
  1075  000228  0E00               	movlw	0
  1076  00022A  6E14               	movwf	(_blinkb2+1)^0,c
  1077  00022C  0E01               	movlw	1
  1078  00022E  6E13               	movwf	_blinkb2^0,c
  1079                           
  1080                           ;main.c: 95:             blinkb1 = 0;
  1081  000230  0E00               	movlw	0
  1082  000232  6E18               	movwf	(_blinkb1+1)^0,c
  1083  000234  0E00               	movlw	0
  1084  000236  6E17               	movwf	_blinkb1^0,c
  1085                           
  1086                           ;main.c: 96:             blinkb10 = 0;
  1087  000238  0E00               	movlw	0
  1088  00023A  6E02               	movwf	(_blinkb10+1)^0,c
  1089  00023C  0E00               	movlw	0
  1090  00023E  6E01               	movwf	_blinkb10^0,c
  1091  000240                     
  1092                           ;main.c: 108:             canHazardSignal(1);
  1093  000240  0E00               	movlw	0
  1094  000242  6E53               	movwf	(canHazardSignal@number+1)^0,c
  1095  000244  0E01               	movlw	1
  1096  000246  6E52               	movwf	canHazardSignal@number^0,c
  1097  000248  EC24  F00D         	call	_canHazardSignal	;wreg free
  1098  00024C                     
  1099                           ;main.c: 109:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1100  00024C  0E41               	movlw	65
  1101  00024E  6E54               	movwf	??_main^0,c
  1102  000250  0EEE               	movlw	238
  1103  000252                     u1807:
  1104  000252  2EE8               	decfsz	wreg,f,c
  1105  000254  D7FE               	bra	u1807
  1106  000256  2E54               	decfsz	??_main^0,f,c
  1107  000258  D7FC               	bra	u1807
  1108  00025A  D000               	nop2	
  1109  00025C                     
  1110                           ;main.c: 110:             hazardSignal(1);
  1111  00025C  0E00               	movlw	0
  1112  00025E  6E3C               	movwf	(hazardSignal@value+1)^0,c
  1113  000260  0E01               	movlw	1
  1114  000262  6E3B               	movwf	hazardSignal@value^0,c
  1115  000264  ECC8  F00A         	call	_hazardSignal	;wreg free
  1116  000268                     
  1117                           ;main.c: 111:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1118  000268  0E41               	movlw	65
  1119  00026A  6E54               	movwf	??_main^0,c
  1120  00026C  0EEE               	movlw	238
  1121  00026E                     u1817:
  1122  00026E  2EE8               	decfsz	wreg,f,c
  1123  000270  D7FE               	bra	u1817
  1124  000272  2E54               	decfsz	??_main^0,f,c
  1125  000274  D7FC               	bra	u1817
  1126  000276  D000               	nop2	
  1127  000278                     l4674:
  1128                           
  1129                           ;main.c: 115:         if (!b10FuncActive && lastb10){
  1130  000278  502E               	movf	_b10FuncActive^0,w,c
  1131  00027A  102F               	iorwf	(_b10FuncActive+1)^0,w,c
  1132  00027C  A4D8               	btfss	status,2,c
  1133  00027E  EF43  F001         	goto	u1531
  1134  000282  EF45  F001         	goto	u1530
  1135  000286                     u1531:
  1136  000286  EF6E  F001         	goto	l4688
  1137  00028A                     u1530:
  1138  00028A  5003               	movf	_lastb10^0,w,c
  1139  00028C  1004               	iorwf	(_lastb10+1)^0,w,c
  1140  00028E  B4D8               	btfsc	status,2,c
  1141  000290  EF4C  F001         	goto	u1541
  1142  000294  EF4E  F001         	goto	u1540
  1143  000298                     u1541:
  1144  000298  EF6E  F001         	goto	l4688
  1145  00029C                     u1540:
  1146  00029C                     
  1147                           ;main.c: 116:             blinkb10 = 0;
  1148  00029C  0E00               	movlw	0
  1149  00029E  6E02               	movwf	(_blinkb10+1)^0,c
  1150  0002A0  0E00               	movlw	0
  1151  0002A2  6E01               	movwf	_blinkb10^0,c
  1152  0002A4                     
  1153                           ;main.c: 117:             canRightSignal(0);
  1154  0002A4  0E00               	movlw	0
  1155  0002A6  6E53               	movwf	(canRightSignal@number+1)^0,c
  1156  0002A8  0E00               	movlw	0
  1157  0002AA  6E52               	movwf	canRightSignal@number^0,c
  1158  0002AC  ECF8  F00C         	call	_canRightSignal	;wreg free
  1159  0002B0                     
  1160                           ;main.c: 118:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1161  0002B0  0E41               	movlw	65
  1162  0002B2  6E54               	movwf	??_main^0,c
  1163  0002B4  0EEE               	movlw	238
  1164  0002B6                     u1827:
  1165  0002B6  2EE8               	decfsz	wreg,f,c
  1166  0002B8  D7FE               	bra	u1827
  1167  0002BA  2E54               	decfsz	??_main^0,f,c
  1168  0002BC  D7FC               	bra	u1827
  1169  0002BE  D000               	nop2	
  1170  0002C0                     
  1171                           ;main.c: 119:             rightTurnIndicator(0);
  1172  0002C0  0E00               	movlw	0
  1173  0002C2  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
  1174  0002C4  0E00               	movlw	0
  1175  0002C6  6E3B               	movwf	rightTurnIndicator@value^0,c
  1176  0002C8  EC98  F009         	call	_rightTurnIndicator	;wreg free
  1177  0002CC                     
  1178                           ;main.c: 120:              _delay((unsigned long)((10)*(20000000/4000.0)));
  1179  0002CC  0E41               	movlw	65
  1180  0002CE  6E54               	movwf	??_main^0,c
  1181  0002D0  0EEE               	movlw	238
  1182  0002D2                     u1837:
  1183  0002D2  2EE8               	decfsz	wreg,f,c
  1184  0002D4  D7FE               	bra	u1837
  1185  0002D6  2E54               	decfsz	??_main^0,f,c
  1186  0002D8  D7FC               	bra	u1837
  1187  0002DA  D000               	nop2	
  1188  0002DC                     l4688:
  1189                           
  1190                           ;main.c: 122:         if (!b1FuncActive && lastb1){
  1191  0002DC  5036               	movf	_b1FuncActive^0,w,c
  1192  0002DE  1037               	iorwf	(_b1FuncActive+1)^0,w,c
  1193  0002E0  A4D8               	btfss	status,2,c
  1194  0002E2  EF75  F001         	goto	u1551
  1195  0002E6  EF77  F001         	goto	u1550
  1196  0002EA                     u1551:
  1197  0002EA  EFA0  F001         	goto	l4702
  1198  0002EE                     u1550:
  1199  0002EE  5019               	movf	_lastb1^0,w,c
  1200  0002F0  101A               	iorwf	(_lastb1+1)^0,w,c
  1201  0002F2  B4D8               	btfsc	status,2,c
  1202  0002F4  EF7E  F001         	goto	u1561
  1203  0002F8  EF80  F001         	goto	u1560
  1204  0002FC                     u1561:
  1205  0002FC  EFA0  F001         	goto	l4702
  1206  000300                     u1560:
  1207  000300                     
  1208                           ;main.c: 123:             blinkb1 = 0;
  1209  000300  0E00               	movlw	0
  1210  000302  6E18               	movwf	(_blinkb1+1)^0,c
  1211  000304  0E00               	movlw	0
  1212  000306  6E17               	movwf	_blinkb1^0,c
  1213  000308                     
  1214                           ;main.c: 124:             canLeftSignal(0);
  1215  000308  0E00               	movlw	0
  1216  00030A  6E53               	movwf	(canLeftSignal@number+1)^0,c
  1217  00030C  0E00               	movlw	0
  1218  00030E  6E52               	movwf	canLeftSignal@number^0,c
  1219  000310  EC0E  F00D         	call	_canLeftSignal	;wreg free
  1220  000314                     
  1221                           ;main.c: 125:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1222  000314  0E41               	movlw	65
  1223  000316  6E54               	movwf	??_main^0,c
  1224  000318  0EEE               	movlw	238
  1225  00031A                     u1847:
  1226  00031A  2EE8               	decfsz	wreg,f,c
  1227  00031C  D7FE               	bra	u1847
  1228  00031E  2E54               	decfsz	??_main^0,f,c
  1229  000320  D7FC               	bra	u1847
  1230  000322  D000               	nop2	
  1231  000324                     
  1232                           ;main.c: 126:             leftTurnIndicator(0);
  1233  000324  0E00               	movlw	0
  1234  000326  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  1235  000328  0E00               	movlw	0
  1236  00032A  6E3B               	movwf	leftTurnIndicator@value^0,c
  1237  00032C  EC7C  F00A         	call	_leftTurnIndicator	;wreg free
  1238  000330                     
  1239                           ;main.c: 127:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1240  000330  0E41               	movlw	65
  1241  000332  6E54               	movwf	??_main^0,c
  1242  000334  0EEE               	movlw	238
  1243  000336                     u1857:
  1244  000336  2EE8               	decfsz	wreg,f,c
  1245  000338  D7FE               	bra	u1857
  1246  00033A  2E54               	decfsz	??_main^0,f,c
  1247  00033C  D7FC               	bra	u1857
  1248  00033E  D000               	nop2	
  1249  000340                     l4702:
  1250                           
  1251                           ;main.c: 129:         if (!b2FuncActive && lastb2){
  1252  000340  5032               	movf	_b2FuncActive^0,w,c
  1253  000342  1033               	iorwf	(_b2FuncActive+1)^0,w,c
  1254  000344  A4D8               	btfss	status,2,c
  1255  000346  EFA7  F001         	goto	u1571
  1256  00034A  EFA9  F001         	goto	u1570
  1257  00034E                     u1571:
  1258  00034E  EFD2  F001         	goto	l4716
  1259  000352                     u1570:
  1260  000352  5015               	movf	_lastb2^0,w,c
  1261  000354  1016               	iorwf	(_lastb2+1)^0,w,c
  1262  000356  B4D8               	btfsc	status,2,c
  1263  000358  EFB0  F001         	goto	u1581
  1264  00035C  EFB2  F001         	goto	u1580
  1265  000360                     u1581:
  1266  000360  EFD2  F001         	goto	l4716
  1267  000364                     u1580:
  1268  000364                     
  1269                           ;main.c: 130:             blinkb2 = 0;
  1270  000364  0E00               	movlw	0
  1271  000366  6E14               	movwf	(_blinkb2+1)^0,c
  1272  000368  0E00               	movlw	0
  1273  00036A  6E13               	movwf	_blinkb2^0,c
  1274  00036C                     
  1275                           ;main.c: 131:             canHazardSignal(0);
  1276  00036C  0E00               	movlw	0
  1277  00036E  6E53               	movwf	(canHazardSignal@number+1)^0,c
  1278  000370  0E00               	movlw	0
  1279  000372  6E52               	movwf	canHazardSignal@number^0,c
  1280  000374  EC24  F00D         	call	_canHazardSignal	;wreg free
  1281  000378                     
  1282                           ;main.c: 132:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1283  000378  0E41               	movlw	65
  1284  00037A  6E54               	movwf	??_main^0,c
  1285  00037C  0EEE               	movlw	238
  1286  00037E                     u1867:
  1287  00037E  2EE8               	decfsz	wreg,f,c
  1288  000380  D7FE               	bra	u1867
  1289  000382  2E54               	decfsz	??_main^0,f,c
  1290  000384  D7FC               	bra	u1867
  1291  000386  D000               	nop2	
  1292  000388                     
  1293                           ;main.c: 133:             hazardSignal(0);
  1294  000388  0E00               	movlw	0
  1295  00038A  6E3C               	movwf	(hazardSignal@value+1)^0,c
  1296  00038C  0E00               	movlw	0
  1297  00038E  6E3B               	movwf	hazardSignal@value^0,c
  1298  000390  ECC8  F00A         	call	_hazardSignal	;wreg free
  1299  000394                     
  1300                           ;main.c: 134:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1301  000394  0E41               	movlw	65
  1302  000396  6E54               	movwf	??_main^0,c
  1303  000398  0EEE               	movlw	238
  1304  00039A                     u1877:
  1305  00039A  2EE8               	decfsz	wreg,f,c
  1306  00039C  D7FE               	bra	u1877
  1307  00039E  2E54               	decfsz	??_main^0,f,c
  1308  0003A0  D7FC               	bra	u1877
  1309  0003A2  D000               	nop2	
  1310  0003A4                     l4716:
  1311                           
  1312                           ;main.c: 138:         lastb1 = b1FuncActive;
  1313  0003A4  C036  F019         	movff	_b1FuncActive,_lastb1
  1314  0003A8  C037  F01A         	movff	_b1FuncActive+1,_lastb1+1
  1315  0003AC                     
  1316                           ;main.c: 139:         lastb2 = b2FuncActive;
  1317  0003AC  C032  F015         	movff	_b2FuncActive,_lastb2
  1318  0003B0  C033  F016         	movff	_b2FuncActive+1,_lastb2+1
  1319  0003B4                     
  1320                           ;main.c: 140:         lastb10 = b10FuncActive;
  1321  0003B4  C02E  F003         	movff	_b10FuncActive,_lastb10
  1322  0003B8  C02F  F004         	movff	_b10FuncActive+1,_lastb10+1
  1323  0003BC                     
  1324                           ;main.c: 142:         leftTurnButton(&b1FuncActive, &latchb1);
  1325  0003BC  0E36               	movlw	low _b1FuncActive
  1326  0003BE  6E3A               	movwf	leftTurnButton@b1FunctionActive^0,c
  1327  0003C0  0E00               	movlw	high _b1FuncActive
  1328  0003C2  6E3B               	movwf	(leftTurnButton@b1FunctionActive+1)^0,c
  1329  0003C4  0E34               	movlw	low _latchb1
  1330  0003C6  6E3C               	movwf	leftTurnButton@b1Latch^0,c
  1331  0003C8  0E00               	movlw	high _latchb1
  1332  0003CA  6E3D               	movwf	(leftTurnButton@b1Latch+1)^0,c
  1333  0003CC  EC5C  F008         	call	_leftTurnButton	;wreg free
  1334  0003D0                     
  1335                           ;main.c: 143:         rightTurnButton(&b10FuncActive, &latchb10);
  1336  0003D0  0E2E               	movlw	low _b10FuncActive
  1337  0003D2  6E3A               	movwf	rightTurnButton@b10FunctionActive^0,c
  1338  0003D4  0E00               	movlw	high _b10FuncActive
  1339  0003D6  6E3B               	movwf	(rightTurnButton@b10FunctionActive+1)^0,c
  1340  0003D8  0E2C               	movlw	low _latchb10
  1341  0003DA  6E3C               	movwf	rightTurnButton@b10Latch^0,c
  1342  0003DC  0E00               	movlw	high _latchb10
  1343  0003DE  6E3D               	movwf	(rightTurnButton@b10Latch+1)^0,c
  1344  0003E0  ECE4  F007         	call	_rightTurnButton	;wreg free
  1345  0003E4                     
  1346                           ;main.c: 144:         hazardButton(&b2FuncActive, &latchb2);
  1347  0003E4  0E32               	movlw	low _b2FuncActive
  1348  0003E6  6E3A               	movwf	hazardButton@b2FunctionActive^0,c
  1349  0003E8  0E00               	movlw	high _b2FuncActive
  1350  0003EA  6E3B               	movwf	(hazardButton@b2FunctionActive+1)^0,c
  1351  0003EC  0E30               	movlw	low _latchb2
  1352  0003EE  6E3C               	movwf	hazardButton@b2Latch^0,c
  1353  0003F0  0E00               	movlw	high _latchb2
  1354  0003F2  6E3D               	movwf	(hazardButton@b2Latch+1)^0,c
  1355  0003F4  ECD4  F008         	call	_hazardButton	;wreg free
  1356  0003F8                     
  1357                           ;main.c: 146:         if (counter >= 10 && speed != -1){
  1358  0003F8  0100               	movlb	0	; () banked
  1359  0003FA  BFC3               	btfsc	(main@counter+1)& (0+255),7,b
  1360  0003FC  EF09  F002         	goto	u1591
  1361  000400  51C3               	movf	(main@counter+1)& (0+255),w,b
  1362  000402  E109               	bnz	u1590
  1363  000404  0E0A               	movlw	10
  1364  000406  5DC2               	subwf	main@counter& (0+255),w,b
  1365  000408  A0D8               	btfss	status,0,c
  1366  00040A  EF09  F002         	goto	u1591
  1367  00040E  EF0B  F002         	goto	u1590
  1368  000412                     u1591:
  1369  000412  EF22  F002         	goto	l4738
  1370  000416                     u1590:
  1371  000416                     
  1372                           ; BSR set to: 0
  1373  000416  29C4               	incf	main@speed& (0+255),w,b
  1374  000418  E108               	bnz	u1600
  1375  00041A  29C5               	incf	(main@speed+1)& (0+255),w,b
  1376  00041C  B4D8               	btfsc	status,2,c
  1377  00041E  EF13  F002         	goto	u1601
  1378  000422  EF15  F002         	goto	u1600
  1379  000426                     u1601:
  1380  000426  EF22  F002         	goto	l4738
  1381  00042A                     u1600:
  1382  00042A                     
  1383                           ; BSR set to: 0
  1384                           ;main.c: 147:             counter = 0;
  1385  00042A  0E00               	movlw	0
  1386  00042C  6FC3               	movwf	(main@counter+1)& (0+255),b
  1387  00042E  0E00               	movlw	0
  1388  000430  6FC2               	movwf	main@counter& (0+255),b
  1389  000432                     
  1390                           ; BSR set to: 0
  1391                           ;main.c: 148:             motorSpeed(speed);
  1392  000432  C0C4  F03B         	movff	main@speed,motorSpeed@value
  1393  000436  C0C5  F03C         	movff	main@speed+1,motorSpeed@value+1
  1394  00043A  ECE4  F009         	call	_motorSpeed	;wreg free
  1395  00043E                     
  1396                           ;main.c: 149:             speed++;
  1397  00043E  0100               	movlb	0	; () banked
  1398  000440  4BC4               	infsnz	main@speed& (0+255),f,b
  1399  000442  2BC5               	incf	(main@speed+1)& (0+255),f,b
  1400  000444                     l4738:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;main.c: 155:         if (CAN_receive(&rx)){
  1404  000444  0E1E               	movlw	low _rx
  1405  000446  6E4D               	movwf	CAN_receive@tempCanMsg^0,c
  1406  000448  0E00               	movlw	high _rx
  1407  00044A  6E4E               	movwf	(CAN_receive@tempCanMsg+1)^0,c
  1408  00044C  EC90  F004         	call	_CAN_receive	;wreg free
  1409  000450  0900               	iorlw	0
  1410  000452  B4D8               	btfsc	status,2,c
  1411  000454  EF2E  F002         	goto	u1611
  1412  000458  EF30  F002         	goto	u1610
  1413  00045C                     u1611:
  1414  00045C  EF6C  F000         	goto	l4620
  1415  000460                     u1610:
  1416  000460                     
  1417                           ;main.c: 156:             if (rx.frame.idType == 1){
  1418  000460  041E               	decf	_rx^0,w,c
  1419  000462  A4D8               	btfss	status,2,c
  1420  000464  EF36  F002         	goto	u1621
  1421  000468  EF38  F002         	goto	u1620
  1422  00046C                     u1621:
  1423  00046C  EF6C  F000         	goto	l4620
  1424  000470                     u1620:
  1425  000470                     
  1426                           ;main.c: 158:                 if (rx.frame.id == 0x02F4 || rx.frame.id == 0x04F4 || rx.f
      +                          rame.id == 0x05F4 || rx.frame.id == 0x07F4 || rx.frame.id == 0x08F4 || rx.frame.id == 0x
      +                          12){
  1427  000470  0EF4               	movlw	244
  1428  000472  181F               	xorwf	(_rx+1)^0,w,c
  1429  000474  E10B               	bnz	u1630
  1430  000476  0E02               	movlw	2
  1431  000478  1820               	xorwf	(_rx+2)^0,w,c
  1432  00047A  1021               	iorwf	(_rx+3)^0,w,c
  1433  00047C  1022               	iorwf	(_rx+4)^0,w,c
  1434  00047E  B4D8               	btfsc	status,2,c
  1435  000480  EF44  F002         	goto	u1631
  1436  000484  EF46  F002         	goto	u1630
  1437  000488                     u1631:
  1438  000488  EF8A  F002         	goto	l4754
  1439  00048C                     u1630:
  1440  00048C  0EF4               	movlw	244
  1441  00048E  181F               	xorwf	(_rx+1)^0,w,c
  1442  000490  E10B               	bnz	u1640
  1443  000492  0E04               	movlw	4
  1444  000494  1820               	xorwf	(_rx+2)^0,w,c
  1445  000496  1021               	iorwf	(_rx+3)^0,w,c
  1446  000498  1022               	iorwf	(_rx+4)^0,w,c
  1447  00049A  B4D8               	btfsc	status,2,c
  1448  00049C  EF52  F002         	goto	u1641
  1449  0004A0  EF54  F002         	goto	u1640
  1450  0004A4                     u1641:
  1451  0004A4  EF8A  F002         	goto	l4754
  1452  0004A8                     u1640:
  1453  0004A8  0EF4               	movlw	244
  1454  0004AA  181F               	xorwf	(_rx+1)^0,w,c
  1455  0004AC  E10B               	bnz	u1650
  1456  0004AE  0E05               	movlw	5
  1457  0004B0  1820               	xorwf	(_rx+2)^0,w,c
  1458  0004B2  1021               	iorwf	(_rx+3)^0,w,c
  1459  0004B4  1022               	iorwf	(_rx+4)^0,w,c
  1460  0004B6  B4D8               	btfsc	status,2,c
  1461  0004B8  EF60  F002         	goto	u1651
  1462  0004BC  EF62  F002         	goto	u1650
  1463  0004C0                     u1651:
  1464  0004C0  EF8A  F002         	goto	l4754
  1465  0004C4                     u1650:
  1466  0004C4  0EF4               	movlw	244
  1467  0004C6  181F               	xorwf	(_rx+1)^0,w,c
  1468  0004C8  E10B               	bnz	u1660
  1469  0004CA  0E07               	movlw	7
  1470  0004CC  1820               	xorwf	(_rx+2)^0,w,c
  1471  0004CE  1021               	iorwf	(_rx+3)^0,w,c
  1472  0004D0  1022               	iorwf	(_rx+4)^0,w,c
  1473  0004D2  B4D8               	btfsc	status,2,c
  1474  0004D4  EF6E  F002         	goto	u1661
  1475  0004D8  EF70  F002         	goto	u1660
  1476  0004DC                     u1661:
  1477  0004DC  EF8A  F002         	goto	l4754
  1478  0004E0                     u1660:
  1479  0004E0  0EF4               	movlw	244
  1480  0004E2  181F               	xorwf	(_rx+1)^0,w,c
  1481  0004E4  E10B               	bnz	u1670
  1482  0004E6  0E08               	movlw	8
  1483  0004E8  1820               	xorwf	(_rx+2)^0,w,c
  1484  0004EA  1021               	iorwf	(_rx+3)^0,w,c
  1485  0004EC  1022               	iorwf	(_rx+4)^0,w,c
  1486  0004EE  B4D8               	btfsc	status,2,c
  1487  0004F0  EF7C  F002         	goto	u1671
  1488  0004F4  EF7E  F002         	goto	u1670
  1489  0004F8                     u1671:
  1490  0004F8  EF8A  F002         	goto	l4754
  1491  0004FC                     u1670:
  1492  0004FC  0E12               	movlw	18
  1493  0004FE  181F               	xorwf	(_rx+1)^0,w,c
  1494  000500  1020               	iorwf	(_rx+2)^0,w,c
  1495  000502  1021               	iorwf	(_rx+3)^0,w,c
  1496  000504  1022               	iorwf	(_rx+4)^0,w,c
  1497  000506  A4D8               	btfss	status,2,c
  1498  000508  EF88  F002         	goto	u1681
  1499  00050C  EF8A  F002         	goto	u1680
  1500  000510                     u1681:
  1501  000510  EF98  F002         	goto	l4758
  1502  000514                     u1680:
  1503  000514                     l4754:
  1504                           
  1505                           ;main.c: 159:                     _delay((unsigned long)((10)*(20000000/4000.0)));
  1506  000514  0E41               	movlw	65
  1507  000516  6E54               	movwf	??_main^0,c
  1508  000518  0EEE               	movlw	238
  1509  00051A                     u1887:
  1510  00051A  2EE8               	decfsz	wreg,f,c
  1511  00051C  D7FE               	bra	u1887
  1512  00051E  2E54               	decfsz	??_main^0,f,c
  1513  000520  D7FC               	bra	u1887
  1514  000522  D000               	nop2	
  1515  000524                     
  1516                           ;main.c: 160:                     warningLED(1);
  1517  000524  0E00               	movlw	0
  1518  000526  6E3C               	movwf	(warningLED@value+1)^0,c
  1519  000528  0E01               	movlw	1
  1520  00052A  6E3B               	movwf	warningLED@value^0,c
  1521  00052C  EC4C  F009         	call	_warningLED	;wreg free
  1522  000530                     l4758:
  1523                           
  1524                           ;main.c: 163:                 if (rx.frame.id == 0x80){
  1525  000530  0E80               	movlw	128
  1526  000532  181F               	xorwf	(_rx+1)^0,w,c
  1527  000534  1020               	iorwf	(_rx+2)^0,w,c
  1528  000536  1021               	iorwf	(_rx+3)^0,w,c
  1529  000538  1022               	iorwf	(_rx+4)^0,w,c
  1530  00053A  A4D8               	btfss	status,2,c
  1531  00053C  EFA2  F002         	goto	u1691
  1532  000540  EFA4  F002         	goto	u1690
  1533  000544                     u1691:
  1534  000544  EFCA  F002         	goto	l4770
  1535  000548                     u1690:
  1536  000548                     
  1537                           ;main.c: 164:                     if (rx.frame.data0 == 1){
  1538  000548  0424               	decf	(_rx+6)^0,w,c
  1539  00054A  A4D8               	btfss	status,2,c
  1540  00054C  EFAA  F002         	goto	u1701
  1541  000550  EFAC  F002         	goto	u1700
  1542  000554                     u1701:
  1543  000554  EFBC  F002         	goto	l4766
  1544  000558                     u1700:
  1545  000558                     
  1546                           ;main.c: 165:                         _delay((unsigned long)((10)*(20000000/4000.0)));
  1547  000558  0E41               	movlw	65
  1548  00055A  6E54               	movwf	??_main^0,c
  1549  00055C  0EEE               	movlw	238
  1550  00055E                     u1897:
  1551  00055E  2EE8               	decfsz	wreg,f,c
  1552  000560  D7FE               	bra	u1897
  1553  000562  2E54               	decfsz	??_main^0,f,c
  1554  000564  D7FC               	bra	u1897
  1555  000566  D000               	nop2	
  1556  000568                     
  1557                           ;main.c: 166:                         auxBattConn(1);
  1558  000568  0E00               	movlw	0
  1559  00056A  6E3C               	movwf	(auxBattConn@value+1)^0,c
  1560  00056C  0E01               	movlw	1
  1561  00056E  6E3B               	movwf	auxBattConn@value^0,c
  1562  000570  ECF8  F00B         	call	_auxBattConn	;wreg free
  1563                           
  1564                           ;main.c: 167:                     }
  1565  000574  EFCA  F002         	goto	l4770
  1566  000578                     l4766:
  1567                           
  1568                           ;main.c: 169:                         _delay((unsigned long)((10)*(20000000/4000.0)));
  1569  000578  0E41               	movlw	65
  1570  00057A  6E54               	movwf	??_main^0,c
  1571  00057C  0EEE               	movlw	238
  1572  00057E                     u1907:
  1573  00057E  2EE8               	decfsz	wreg,f,c
  1574  000580  D7FE               	bra	u1907
  1575  000582  2E54               	decfsz	??_main^0,f,c
  1576  000584  D7FC               	bra	u1907
  1577  000586  D000               	nop2	
  1578  000588                     
  1579                           ;main.c: 170:                         auxBattConn(0);
  1580  000588  0E00               	movlw	0
  1581  00058A  6E3C               	movwf	(auxBattConn@value+1)^0,c
  1582  00058C  0E00               	movlw	0
  1583  00058E  6E3B               	movwf	auxBattConn@value^0,c
  1584  000590  ECF8  F00B         	call	_auxBattConn	;wreg free
  1585  000594                     l4770:
  1586                           
  1587                           ;main.c: 174:                 if (rx.frame.id == 0x81){
  1588  000594  0E81               	movlw	129
  1589  000596  181F               	xorwf	(_rx+1)^0,w,c
  1590  000598  1020               	iorwf	(_rx+2)^0,w,c
  1591  00059A  1021               	iorwf	(_rx+3)^0,w,c
  1592  00059C  1022               	iorwf	(_rx+4)^0,w,c
  1593  00059E  A4D8               	btfss	status,2,c
  1594  0005A0  EFD4  F002         	goto	u1711
  1595  0005A4  EFD6  F002         	goto	u1710
  1596  0005A8                     u1711:
  1597  0005A8  EFE2  F002         	goto	l4776
  1598  0005AC                     u1710:
  1599  0005AC                     
  1600                           ;main.c: 175:                     _delay((unsigned long)((10)*(20000000/4000.0)));
  1601  0005AC  0E41               	movlw	65
  1602  0005AE  6E54               	movwf	??_main^0,c
  1603  0005B0  0EEE               	movlw	238
  1604  0005B2                     u1917:
  1605  0005B2  2EE8               	decfsz	wreg,f,c
  1606  0005B4  D7FE               	bra	u1917
  1607  0005B6  2E54               	decfsz	??_main^0,f,c
  1608  0005B8  D7FC               	bra	u1917
  1609  0005BA  D000               	nop2	
  1610  0005BC                     
  1611                           ;main.c: 176:                     speed = rx.frame.data0;
  1612  0005BC  C024  F0C4         	movff	_rx+6,main@speed
  1613  0005C0  0100               	movlb	0	; () banked
  1614  0005C2  6BC5               	clrf	(main@speed+1)& (0+255),b
  1615  0005C4                     l4776:
  1616                           
  1617                           ;main.c: 178:                 if (rx.frame.id == 0x111){
  1618  0005C4  0E11               	movlw	17
  1619  0005C6  181F               	xorwf	(_rx+1)^0,w,c
  1620  0005C8  E108               	bnz	u1721
  1621  0005CA  0420               	decf	(_rx+2)^0,w,c
  1622  0005CC  1021               	iorwf	(_rx+3)^0,w,c
  1623  0005CE  1022               	iorwf	(_rx+4)^0,w,c
  1624  0005D0  A4D8               	btfss	status,2,c
  1625  0005D2  EFED  F002         	goto	u1721
  1626  0005D6  EFEF  F002         	goto	u1720
  1627  0005DA                     u1721:
  1628  0005DA  EFFF  F002         	goto	l680
  1629  0005DE                     u1720:
  1630  0005DE                     
  1631                           ;main.c: 179:                     _delay((unsigned long)((10)*(20000000/4000.0)));
  1632  0005DE  0E41               	movlw	65
  1633  0005E0  6E54               	movwf	??_main^0,c
  1634  0005E2  0EEE               	movlw	238
  1635  0005E4                     u1927:
  1636  0005E4  2EE8               	decfsz	wreg,f,c
  1637  0005E6  D7FE               	bra	u1927
  1638  0005E8  2E54               	decfsz	??_main^0,f,c
  1639  0005EA  D7FC               	bra	u1927
  1640  0005EC  D000               	nop2	
  1641  0005EE                     
  1642                           ;main.c: 180:                     warningLED(0);
  1643  0005EE  0E00               	movlw	0
  1644  0005F0  6E3C               	movwf	(warningLED@value+1)^0,c
  1645  0005F2  0E00               	movlw	0
  1646  0005F4  6E3B               	movwf	warningLED@value^0,c
  1647  0005F6  EC4C  F009         	call	_warningLED	;wreg free
  1648  0005FA  EF6C  F000         	goto	l4620
  1649  0005FE                     l680:
  1650  0005FE  EF6C  F000         	goto	l4620
  1651  000602  EF26  F000         	goto	start
  1652  000606                     __end_of_main:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _rightTurnButton *****************
  1656 ;; Defined at:
  1657 ;;		line 33 in file "button_functionality.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  b10FunctionA    2    2[COMRAM] PTR int 
  1660 ;;		 -> b10FuncActive(2), 
  1661 ;;  b10Latch        2    4[COMRAM] PTR int 
  1662 ;;		 -> buttonRuntime@var(2), latchb10(2), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;Total ram usage:        6 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 3
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;;		_buttonRuntime
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text1
  1690  000FC8                     __ptext1:
  1691                           	callstack 0
  1692  000FC8                     _rightTurnButton:
  1693                           	callstack 27
  1694  000FC8                     
  1695                           ;button_functionality.c: 34:     switch (PORTCbits.RC1) {
  1696  000FC8  EF3E  F008         	goto	l4548
  1697  000FCC                     l4530:
  1698                           
  1699                           ;button_functionality.c: 36:         *b10Latch = 0;
  1700  000FCC  C03C  FFD9         	movff	rightTurnButton@b10Latch,fsr2l
  1701  000FD0  C03D  FFDA         	movff	rightTurnButton@b10Latch+1,fsr2h
  1702  000FD4  0E00               	movlw	0
  1703  000FD6  6EDE               	movwf	postinc2,c
  1704  000FD8  0E00               	movlw	0
  1705  000FDA  6EDD               	movwf	postdec2,c
  1706                           
  1707                           ;button_functionality.c: 37:         break;
  1708  000FDC  EF5B  F008         	goto	l768
  1709  000FE0                     l4532:
  1710                           
  1711                           ;button_functionality.c: 44:                 *b10FunctionActive = 1;
  1712  000FE0  C03A  FFD9         	movff	rightTurnButton@b10FunctionActive,fsr2l
  1713  000FE4  C03B  FFDA         	movff	rightTurnButton@b10FunctionActive+1,fsr2h
  1714  000FE8  0E01               	movlw	1
  1715  000FEA  6EDE               	movwf	postinc2,c
  1716  000FEC  0E00               	movlw	0
  1717  000FEE  6EDD               	movwf	postdec2,c
  1718                           
  1719                           ;button_functionality.c: 45:                 break;
  1720  000FF0  EF1E  F008         	goto	l4540
  1721  000FF4                     l4534:
  1722                           
  1723                           ;button_functionality.c: 48:                 *b10FunctionActive = 0;
  1724  000FF4  C03A  FFD9         	movff	rightTurnButton@b10FunctionActive,fsr2l
  1725  000FF8  C03B  FFDA         	movff	rightTurnButton@b10FunctionActive+1,fsr2h
  1726  000FFC  0E00               	movlw	0
  1727  000FFE  6EDE               	movwf	postinc2,c
  1728  001000  0E00               	movlw	0
  1729  001002  6EDD               	movwf	postdec2,c
  1730                           
  1731                           ;button_functionality.c: 49:                 break;
  1732  001004  EF1E  F008         	goto	l4540
  1733  001008                     l4538:
  1734  001008  C03A  FFD9         	movff	rightTurnButton@b10FunctionActive,fsr2l
  1735  00100C  C03B  FFDA         	movff	rightTurnButton@b10FunctionActive+1,fsr2h
  1736  001010  CFDE F03E          	movff	postinc2,??_rightTurnButton
  1737  001014  CFDD F03F          	movff	postdec2,??_rightTurnButton+1
  1738                           
  1739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 1, Range of values is 0 to 0
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte            4     3 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746  001018  503F               	movf	(??_rightTurnButton+1)^0,w,c
  1747  00101A  0A00               	xorlw	0	; case 0
  1748  00101C  B4D8               	btfsc	status,2,c
  1749  00101E  EF13  F008         	goto	l5044
  1750  001022  EF1E  F008         	goto	l4540
  1751  001026                     l5044:
  1752                           
  1753                           ; Switch size 1, requested type "simple"
  1754                           ; Number of cases is 2, Range of values is 0 to 1
  1755                           ; switch strategies available:
  1756                           ; Name         Instructions Cycles
  1757                           ; simple_byte            7     4 (average)
  1758                           ;	Chosen strategy is simple_byte
  1759  001026  503E               	movf	??_rightTurnButton^0,w,c
  1760  001028  0A00               	xorlw	0	; case 0
  1761  00102A  B4D8               	btfsc	status,2,c
  1762  00102C  EFF0  F007         	goto	l4532
  1763  001030  0A01               	xorlw	1	; case 1
  1764  001032  B4D8               	btfsc	status,2,c
  1765  001034  EFFA  F007         	goto	l4534
  1766  001038  EF1E  F008         	goto	l4540
  1767  00103C                     l4540:
  1768                           
  1769                           ;button_functionality.c: 51:             *b10Latch = 1;
  1770  00103C  C03C  FFD9         	movff	rightTurnButton@b10Latch,fsr2l
  1771  001040  C03D  FFDA         	movff	rightTurnButton@b10Latch+1,fsr2h
  1772  001044  0E01               	movlw	1
  1773  001046  6EDE               	movwf	postinc2,c
  1774  001048  0E00               	movlw	0
  1775  00104A  6EDD               	movwf	postdec2,c
  1776                           
  1777                           ;button_functionality.c: 52:             break;
  1778  00104C  EF5B  F008         	goto	l768
  1779  001050                     l4544:
  1780  001050  C03C  FFD9         	movff	rightTurnButton@b10Latch,fsr2l
  1781  001054  C03D  FFDA         	movff	rightTurnButton@b10Latch+1,fsr2h
  1782  001058  CFDE F03E          	movff	postinc2,??_rightTurnButton
  1783  00105C  CFDD F03F          	movff	postdec2,??_rightTurnButton+1
  1784                           
  1785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1786                           ; Switch size 1, requested type "simple"
  1787                           ; Number of cases is 1, Range of values is 0 to 0
  1788                           ; switch strategies available:
  1789                           ; Name         Instructions Cycles
  1790                           ; simple_byte            4     3 (average)
  1791                           ;	Chosen strategy is simple_byte
  1792  001060  503F               	movf	(??_rightTurnButton+1)^0,w,c
  1793  001062  0A00               	xorlw	0	; case 0
  1794  001064  B4D8               	btfsc	status,2,c
  1795  001066  EF37  F008         	goto	l5046
  1796  00106A  EF5B  F008         	goto	l768
  1797  00106E                     l5046:
  1798                           
  1799                           ; Switch size 1, requested type "simple"
  1800                           ; Number of cases is 1, Range of values is 0 to 0
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte            4     3 (average)
  1804                           ;	Chosen strategy is simple_byte
  1805  00106E  503E               	movf	??_rightTurnButton^0,w,c
  1806  001070  0A00               	xorlw	0	; case 0
  1807  001072  B4D8               	btfsc	status,2,c
  1808  001074  EF04  F008         	goto	l4538
  1809  001078  EF5B  F008         	goto	l768
  1810  00107C                     l4548:
  1811  00107C  B282               	btfsc	130,1,c	;volatile
  1812  00107E  EF43  F008         	goto	u1371
  1813  001082  EF46  F008         	goto	u1370
  1814  001086                     u1371:
  1815  001086  0E01               	movlw	1
  1816  001088  EF47  F008         	goto	u1380
  1817  00108C                     u1370:
  1818  00108C  0E00               	movlw	0
  1819  00108E                     u1380:
  1820  00108E  6E3E               	movwf	??_rightTurnButton^0,c
  1821  001090  6A3F               	clrf	(??_rightTurnButton+1)^0,c
  1822                           
  1823                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1824                           ; Switch size 1, requested type "simple"
  1825                           ; Number of cases is 1, Range of values is 0 to 0
  1826                           ; switch strategies available:
  1827                           ; Name         Instructions Cycles
  1828                           ; simple_byte            4     3 (average)
  1829                           ;	Chosen strategy is simple_byte
  1830  001092  503F               	movf	(??_rightTurnButton+1)^0,w,c
  1831  001094  0A00               	xorlw	0	; case 0
  1832  001096  B4D8               	btfsc	status,2,c
  1833  001098  EF50  F008         	goto	l5048
  1834  00109C  EF5B  F008         	goto	l768
  1835  0010A0                     l5048:
  1836                           
  1837                           ; Switch size 1, requested type "simple"
  1838                           ; Number of cases is 2, Range of values is 0 to 1
  1839                           ; switch strategies available:
  1840                           ; Name         Instructions Cycles
  1841                           ; simple_byte            7     4 (average)
  1842                           ;	Chosen strategy is simple_byte
  1843  0010A0  503E               	movf	??_rightTurnButton^0,w,c
  1844  0010A2  0A00               	xorlw	0	; case 0
  1845  0010A4  B4D8               	btfsc	status,2,c
  1846  0010A6  EFE6  F007         	goto	l4530
  1847  0010AA  0A01               	xorlw	1	; case 1
  1848  0010AC  B4D8               	btfsc	status,2,c
  1849  0010AE  EF28  F008         	goto	l4544
  1850  0010B2  EF5B  F008         	goto	l768
  1851  0010B6                     l768:
  1852  0010B6  0012               	return		;funcret
  1853  0010B8                     __end_of_rightTurnButton:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _leftTurnButton *****************
  1857 ;; Defined at:
  1858 ;;		line 9 in file "button_functionality.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  b1FunctionAc    2    2[COMRAM] PTR int 
  1861 ;;		 -> b1FuncActive(2), 
  1862 ;;  b1Latch         2    4[COMRAM] PTR int 
  1863 ;;		 -> buttonRuntime@var(2), latchb1(2), 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1878 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1879 ;;Total ram usage:        6 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 3
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;;		_buttonRuntime
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text2
  1891  0010B8                     __ptext2:
  1892                           	callstack 0
  1893  0010B8                     _leftTurnButton:
  1894                           	callstack 27
  1895  0010B8                     
  1896                           ;button_functionality.c: 10:     switch (PORTAbits.RA0) {
  1897  0010B8  EFB6  F008         	goto	l4514
  1898  0010BC                     l4496:
  1899                           
  1900                           ;button_functionality.c: 12:         *b1Latch = 0;
  1901  0010BC  C03C  FFD9         	movff	leftTurnButton@b1Latch,fsr2l
  1902  0010C0  C03D  FFDA         	movff	leftTurnButton@b1Latch+1,fsr2h
  1903  0010C4  0E00               	movlw	0
  1904  0010C6  6EDE               	movwf	postinc2,c
  1905  0010C8  0E00               	movlw	0
  1906  0010CA  6EDD               	movwf	postdec2,c
  1907                           
  1908                           ;button_functionality.c: 13:         break;
  1909  0010CC  EFD3  F008         	goto	l754
  1910  0010D0                     l4498:
  1911                           
  1912                           ;button_functionality.c: 20:                 *b1FunctionActive = 1;
  1913  0010D0  C03A  FFD9         	movff	leftTurnButton@b1FunctionActive,fsr2l
  1914  0010D4  C03B  FFDA         	movff	leftTurnButton@b1FunctionActive+1,fsr2h
  1915  0010D8  0E01               	movlw	1
  1916  0010DA  6EDE               	movwf	postinc2,c
  1917  0010DC  0E00               	movlw	0
  1918  0010DE  6EDD               	movwf	postdec2,c
  1919                           
  1920                           ;button_functionality.c: 21:                 break;
  1921  0010E0  EF96  F008         	goto	l4506
  1922  0010E4                     l4500:
  1923                           
  1924                           ;button_functionality.c: 24:                 *b1FunctionActive = 0;
  1925  0010E4  C03A  FFD9         	movff	leftTurnButton@b1FunctionActive,fsr2l
  1926  0010E8  C03B  FFDA         	movff	leftTurnButton@b1FunctionActive+1,fsr2h
  1927  0010EC  0E00               	movlw	0
  1928  0010EE  6EDE               	movwf	postinc2,c
  1929  0010F0  0E00               	movlw	0
  1930  0010F2  6EDD               	movwf	postdec2,c
  1931                           
  1932                           ;button_functionality.c: 25:                 break;
  1933  0010F4  EF96  F008         	goto	l4506
  1934  0010F8                     l4504:
  1935  0010F8  C03A  FFD9         	movff	leftTurnButton@b1FunctionActive,fsr2l
  1936  0010FC  C03B  FFDA         	movff	leftTurnButton@b1FunctionActive+1,fsr2h
  1937  001100  CFDE F03E          	movff	postinc2,??_leftTurnButton
  1938  001104  CFDD F03F          	movff	postdec2,??_leftTurnButton+1
  1939                           
  1940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1941                           ; Switch size 1, requested type "simple"
  1942                           ; Number of cases is 1, Range of values is 0 to 0
  1943                           ; switch strategies available:
  1944                           ; Name         Instructions Cycles
  1945                           ; simple_byte            4     3 (average)
  1946                           ;	Chosen strategy is simple_byte
  1947  001108  503F               	movf	(??_leftTurnButton+1)^0,w,c
  1948  00110A  0A00               	xorlw	0	; case 0
  1949  00110C  B4D8               	btfsc	status,2,c
  1950  00110E  EF8B  F008         	goto	l5050
  1951  001112  EF96  F008         	goto	l4506
  1952  001116                     l5050:
  1953                           
  1954                           ; Switch size 1, requested type "simple"
  1955                           ; Number of cases is 2, Range of values is 0 to 1
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte            7     4 (average)
  1959                           ;	Chosen strategy is simple_byte
  1960  001116  503E               	movf	??_leftTurnButton^0,w,c
  1961  001118  0A00               	xorlw	0	; case 0
  1962  00111A  B4D8               	btfsc	status,2,c
  1963  00111C  EF68  F008         	goto	l4498
  1964  001120  0A01               	xorlw	1	; case 1
  1965  001122  B4D8               	btfsc	status,2,c
  1966  001124  EF72  F008         	goto	l4500
  1967  001128  EF96  F008         	goto	l4506
  1968  00112C                     l4506:
  1969                           
  1970                           ;button_functionality.c: 27:             *b1Latch = 1;
  1971  00112C  C03C  FFD9         	movff	leftTurnButton@b1Latch,fsr2l
  1972  001130  C03D  FFDA         	movff	leftTurnButton@b1Latch+1,fsr2h
  1973  001134  0E01               	movlw	1
  1974  001136  6EDE               	movwf	postinc2,c
  1975  001138  0E00               	movlw	0
  1976  00113A  6EDD               	movwf	postdec2,c
  1977                           
  1978                           ;button_functionality.c: 28:             break;
  1979  00113C  EFD3  F008         	goto	l754
  1980  001140                     l4510:
  1981  001140  C03C  FFD9         	movff	leftTurnButton@b1Latch,fsr2l
  1982  001144  C03D  FFDA         	movff	leftTurnButton@b1Latch+1,fsr2h
  1983  001148  CFDE F03E          	movff	postinc2,??_leftTurnButton
  1984  00114C  CFDD F03F          	movff	postdec2,??_leftTurnButton+1
  1985                           
  1986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1987                           ; Switch size 1, requested type "simple"
  1988                           ; Number of cases is 1, Range of values is 0 to 0
  1989                           ; switch strategies available:
  1990                           ; Name         Instructions Cycles
  1991                           ; simple_byte            4     3 (average)
  1992                           ;	Chosen strategy is simple_byte
  1993  001150  503F               	movf	(??_leftTurnButton+1)^0,w,c
  1994  001152  0A00               	xorlw	0	; case 0
  1995  001154  B4D8               	btfsc	status,2,c
  1996  001156  EFAF  F008         	goto	l5052
  1997  00115A  EFD3  F008         	goto	l754
  1998  00115E                     l5052:
  1999                           
  2000                           ; Switch size 1, requested type "simple"
  2001                           ; Number of cases is 1, Range of values is 0 to 0
  2002                           ; switch strategies available:
  2003                           ; Name         Instructions Cycles
  2004                           ; simple_byte            4     3 (average)
  2005                           ;	Chosen strategy is simple_byte
  2006  00115E  503E               	movf	??_leftTurnButton^0,w,c
  2007  001160  0A00               	xorlw	0	; case 0
  2008  001162  B4D8               	btfsc	status,2,c
  2009  001164  EF7C  F008         	goto	l4504
  2010  001168  EFD3  F008         	goto	l754
  2011  00116C                     l4514:
  2012  00116C  B080               	btfsc	128,0,c	;volatile
  2013  00116E  EFBB  F008         	goto	u1351
  2014  001172  EFBE  F008         	goto	u1350
  2015  001176                     u1351:
  2016  001176  0E01               	movlw	1
  2017  001178  EFBF  F008         	goto	u1360
  2018  00117C                     u1350:
  2019  00117C  0E00               	movlw	0
  2020  00117E                     u1360:
  2021  00117E  6E3E               	movwf	??_leftTurnButton^0,c
  2022  001180  6A3F               	clrf	(??_leftTurnButton+1)^0,c
  2023                           
  2024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2025                           ; Switch size 1, requested type "simple"
  2026                           ; Number of cases is 1, Range of values is 0 to 0
  2027                           ; switch strategies available:
  2028                           ; Name         Instructions Cycles
  2029                           ; simple_byte            4     3 (average)
  2030                           ;	Chosen strategy is simple_byte
  2031  001182  503F               	movf	(??_leftTurnButton+1)^0,w,c
  2032  001184  0A00               	xorlw	0	; case 0
  2033  001186  B4D8               	btfsc	status,2,c
  2034  001188  EFC8  F008         	goto	l5054
  2035  00118C  EFD3  F008         	goto	l754
  2036  001190                     l5054:
  2037                           
  2038                           ; Switch size 1, requested type "simple"
  2039                           ; Number of cases is 2, Range of values is 0 to 1
  2040                           ; switch strategies available:
  2041                           ; Name         Instructions Cycles
  2042                           ; simple_byte            7     4 (average)
  2043                           ;	Chosen strategy is simple_byte
  2044  001190  503E               	movf	??_leftTurnButton^0,w,c
  2045  001192  0A00               	xorlw	0	; case 0
  2046  001194  B4D8               	btfsc	status,2,c
  2047  001196  EF5E  F008         	goto	l4496
  2048  00119A  0A01               	xorlw	1	; case 1
  2049  00119C  B4D8               	btfsc	status,2,c
  2050  00119E  EFA0  F008         	goto	l4510
  2051  0011A2  EFD3  F008         	goto	l754
  2052  0011A6                     l754:
  2053  0011A6  0012               	return		;funcret
  2054  0011A8                     __end_of_leftTurnButton:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _init *****************
  2058 ;; Defined at:
  2059 ;;		line 168 in file "uart_interface.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 5
  2080 ;; This function calls:
  2081 ;;		_auxBattConn
  2082 ;;		_batterySOC
  2083 ;;		_batterySOCGraphic
  2084 ;;		_batteryTemp
  2085 ;;		_hazardSignal
  2086 ;;		_leftTurnIndicator
  2087 ;;		_motorControllerTemp
  2088 ;;		_motorSpeed
  2089 ;;		_rightTurnIndicator
  2090 ;;		_warningLED
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text3
  2097  001888                     __ptext3:
  2098                           	callstack 0
  2099  001888                     _init:
  2100                           	callstack 25
  2101  001888                     
  2102                           ;uart_interface.c: 169:     leftTurnIndicator(0);
  2103  001888  0E00               	movlw	0
  2104  00188A  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  2105  00188C  0E00               	movlw	0
  2106  00188E  6E3B               	movwf	leftTurnIndicator@value^0,c
  2107  001890  EC7C  F00A         	call	_leftTurnIndicator	;wreg free
  2108                           
  2109                           ;uart_interface.c: 170:     rightTurnIndicator(0);
  2110  001894  0E00               	movlw	0
  2111  001896  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
  2112  001898  0E00               	movlw	0
  2113  00189A  6E3B               	movwf	rightTurnIndicator@value^0,c
  2114  00189C  EC98  F009         	call	_rightTurnIndicator	;wreg free
  2115                           
  2116                           ;uart_interface.c: 171:     hazardSignal(0);
  2117  0018A0  0E00               	movlw	0
  2118  0018A2  6E3C               	movwf	(hazardSignal@value+1)^0,c
  2119  0018A4  0E00               	movlw	0
  2120  0018A6  6E3B               	movwf	hazardSignal@value^0,c
  2121  0018A8  ECC8  F00A         	call	_hazardSignal	;wreg free
  2122                           
  2123                           ;uart_interface.c: 172:     batterySOC(0);
  2124  0018AC  0E00               	movlw	0
  2125  0018AE  6E3C               	movwf	(batterySOC@value+1)^0,c
  2126  0018B0  0E00               	movlw	0
  2127  0018B2  6E3B               	movwf	batterySOC@value^0,c
  2128  0018B4  ECAC  F00B         	call	_batterySOC	;wreg free
  2129                           
  2130                           ;uart_interface.c: 173:     batterySOCGraphic(0);
  2131  0018B8  0E00               	movlw	0
  2132  0018BA  6E3C               	movwf	(batterySOCGraphic@value+1)^0,c
  2133  0018BC  0E00               	movlw	0
  2134  0018BE  6E3B               	movwf	batterySOCGraphic@value^0,c
  2135  0018C0  EC60  F00B         	call	_batterySOCGraphic	;wreg free
  2136                           
  2137                           ;uart_interface.c: 174:     batteryTemp(0);
  2138  0018C4  0E00               	movlw	0
  2139  0018C6  6E3C               	movwf	(batteryTemp@value+1)^0,c
  2140  0018C8  0E00               	movlw	0
  2141  0018CA  6E3B               	movwf	batteryTemp@value^0,c
  2142  0018CC  EC14  F00B         	call	_batteryTemp	;wreg free
  2143                           
  2144                           ;uart_interface.c: 175:     warningLED(0);
  2145  0018D0  0E00               	movlw	0
  2146  0018D2  6E3C               	movwf	(warningLED@value+1)^0,c
  2147  0018D4  0E00               	movlw	0
  2148  0018D6  6E3B               	movwf	warningLED@value^0,c
  2149  0018D8  EC4C  F009         	call	_warningLED	;wreg free
  2150                           
  2151                           ;uart_interface.c: 176:     auxBattConn(0);
  2152  0018DC  0E00               	movlw	0
  2153  0018DE  6E3C               	movwf	(auxBattConn@value+1)^0,c
  2154  0018E0  0E00               	movlw	0
  2155  0018E2  6E3B               	movwf	auxBattConn@value^0,c
  2156  0018E4  ECF8  F00B         	call	_auxBattConn	;wreg free
  2157                           
  2158                           ;uart_interface.c: 177:     motorSpeed(0);
  2159  0018E8  0E00               	movlw	0
  2160  0018EA  6E3C               	movwf	(motorSpeed@value+1)^0,c
  2161  0018EC  0E00               	movlw	0
  2162  0018EE  6E3B               	movwf	motorSpeed@value^0,c
  2163  0018F0  ECE4  F009         	call	_motorSpeed	;wreg free
  2164                           
  2165                           ;uart_interface.c: 178:     motorControllerTemp(0);
  2166  0018F4  0E00               	movlw	0
  2167  0018F6  6E3C               	movwf	(motorControllerTemp@value+1)^0,c
  2168  0018F8  0E00               	movlw	0
  2169  0018FA  6E3B               	movwf	motorControllerTemp@value^0,c
  2170  0018FC  EC30  F00A         	call	_motorControllerTemp	;wreg free
  2171  001900  0012               	return		;funcret
  2172  001902                     __end_of_init:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _warningLED *****************
  2176 ;; Defined at:
  2177 ;;		line 36 in file "uart_interface.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  value           2    3[COMRAM] int 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  v4              2   12[COMRAM] int 
  2182 ;;  v3              2   10[COMRAM] int 
  2183 ;;  v2              2    8[COMRAM] int 
  2184 ;;  v1              2    0        int 
  2185 ;;  checksum        2    6[COMRAM] int 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2198 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2199 ;;Total ram usage:       11 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 4
  2202 ;; This function calls:
  2203 ;;		_EUSART1_Write
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;;		_init
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text4
  2211  001298                     __ptext4:
  2212                           	callstack 0
  2213  001298                     _warningLED:
  2214                           	callstack 26
  2215  001298  0E00               	movlw	0
  2216  00129A  6E41               	movwf	(warningLED@v2+1)^0,c
  2217  00129C  0E2E               	movlw	46
  2218  00129E  6E40               	movwf	warningLED@v2^0,c
  2219  0012A0  0E00               	movlw	0
  2220  0012A2  6E43               	movwf	(warningLED@v3+1)^0,c
  2221  0012A4  0E02               	movlw	2
  2222  0012A6  6E42               	movwf	warningLED@v3^0,c
  2223  0012A8  0E00               	movlw	0
  2224  0012AA  6E45               	movwf	(warningLED@v4+1)^0,c
  2225  0012AC  0E00               	movlw	0
  2226  0012AE  6E44               	movwf	warningLED@v4^0,c
  2227  0012B0                     
  2228                           ;uart_interface.c: 38:     int checksum = v1^v2^v3^v4^value;
  2229  0012B0  0E2D               	movlw	45
  2230  0012B2  183B               	xorwf	warningLED@value^0,w,c
  2231  0012B4  6E3E               	movwf	warningLED@checksum^0,c
  2232  0012B6  503C               	movf	(warningLED@value+1)^0,w,c
  2233  0012B8  6E3F               	movwf	(warningLED@checksum+1)^0,c
  2234  0012BA                     
  2235                           ;uart_interface.c: 40:     EUSART1_Write(v1);
  2236  0012BA  0E01               	movlw	1
  2237  0012BC  EC5C  F00D         	call	_EUSART1_Write
  2238  0012C0                     
  2239                           ;uart_interface.c: 41:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2240  0012C0  0E41               	movlw	65
  2241  0012C2  6E3D               	movwf	??_warningLED^0,c
  2242  0012C4  0EEE               	movlw	238
  2243  0012C6                     u1937:
  2244  0012C6  2EE8               	decfsz	wreg,f,c
  2245  0012C8  D7FE               	bra	u1937
  2246  0012CA  2E3D               	decfsz	??_warningLED^0,f,c
  2247  0012CC  D7FC               	bra	u1937
  2248  0012CE  D000               	nop2	
  2249  0012D0                     
  2250                           ;uart_interface.c: 42:     EUSART1_Write(v2);
  2251  0012D0  0E2E               	movlw	46
  2252  0012D2  EC5C  F00D         	call	_EUSART1_Write
  2253  0012D6                     
  2254                           ;uart_interface.c: 43:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2255  0012D6  0E41               	movlw	65
  2256  0012D8  6E3D               	movwf	??_warningLED^0,c
  2257  0012DA  0EEE               	movlw	238
  2258  0012DC                     u1947:
  2259  0012DC  2EE8               	decfsz	wreg,f,c
  2260  0012DE  D7FE               	bra	u1947
  2261  0012E0  2E3D               	decfsz	??_warningLED^0,f,c
  2262  0012E2  D7FC               	bra	u1947
  2263  0012E4  D000               	nop2	
  2264  0012E6                     
  2265                           ;uart_interface.c: 44:     EUSART1_Write(v3);
  2266  0012E6  0E02               	movlw	2
  2267  0012E8  EC5C  F00D         	call	_EUSART1_Write
  2268  0012EC                     
  2269                           ;uart_interface.c: 45:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2270  0012EC  0E41               	movlw	65
  2271  0012EE  6E3D               	movwf	??_warningLED^0,c
  2272  0012F0  0EEE               	movlw	238
  2273  0012F2                     u1957:
  2274  0012F2  2EE8               	decfsz	wreg,f,c
  2275  0012F4  D7FE               	bra	u1957
  2276  0012F6  2E3D               	decfsz	??_warningLED^0,f,c
  2277  0012F8  D7FC               	bra	u1957
  2278  0012FA  D000               	nop2	
  2279  0012FC                     
  2280                           ;uart_interface.c: 46:     EUSART1_Write(v4);
  2281  0012FC  0E00               	movlw	0
  2282  0012FE  EC5C  F00D         	call	_EUSART1_Write
  2283  001302                     
  2284                           ;uart_interface.c: 47:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2285  001302  0E41               	movlw	65
  2286  001304  6E3D               	movwf	??_warningLED^0,c
  2287  001306  0EEE               	movlw	238
  2288  001308                     u1967:
  2289  001308  2EE8               	decfsz	wreg,f,c
  2290  00130A  D7FE               	bra	u1967
  2291  00130C  2E3D               	decfsz	??_warningLED^0,f,c
  2292  00130E  D7FC               	bra	u1967
  2293  001310  D000               	nop2	
  2294  001312                     
  2295                           ;uart_interface.c: 48:     EUSART1_Write(value);
  2296  001312  503B               	movf	warningLED@value^0,w,c
  2297  001314  EC5C  F00D         	call	_EUSART1_Write
  2298  001318                     
  2299                           ;uart_interface.c: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2300  001318  0E41               	movlw	65
  2301  00131A  6E3D               	movwf	??_warningLED^0,c
  2302  00131C  0EEE               	movlw	238
  2303  00131E                     u1977:
  2304  00131E  2EE8               	decfsz	wreg,f,c
  2305  001320  D7FE               	bra	u1977
  2306  001322  2E3D               	decfsz	??_warningLED^0,f,c
  2307  001324  D7FC               	bra	u1977
  2308  001326  D000               	nop2	
  2309  001328                     
  2310                           ;uart_interface.c: 50:     EUSART1_Write(checksum);
  2311  001328  503E               	movf	warningLED@checksum^0,w,c
  2312  00132A  EC5C  F00D         	call	_EUSART1_Write
  2313  00132E  0012               	return		;funcret
  2314  001330                     __end_of_warningLED:
  2315                           	callstack 0
  2316                           
  2317 ;; *************** function _rightTurnIndicator *****************
  2318 ;; Defined at:
  2319 ;;		line 20 in file "uart_interface.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  value           2    3[COMRAM] int 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  v4              2   12[COMRAM] int 
  2324 ;;  v3              2   10[COMRAM] int 
  2325 ;;  v2              2    8[COMRAM] int 
  2326 ;;  v1              2    0        int 
  2327 ;;  checksum        2    6[COMRAM] int 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2338 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;Total ram usage:       11 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 4
  2344 ;; This function calls:
  2345 ;;		_EUSART1_Write
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;;		_init
  2349 ;;		_rightTurnSignal
  2350 ;;		_hazardTurnSignal
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text5
  2355  001330                     __ptext5:
  2356                           	callstack 0
  2357  001330                     _rightTurnIndicator:
  2358                           	callstack 26
  2359  001330  0E00               	movlw	0
  2360  001332  6E41               	movwf	(rightTurnIndicator@v2+1)^0,c
  2361  001334  0E13               	movlw	19
  2362  001336  6E40               	movwf	rightTurnIndicator@v2^0,c
  2363  001338  0E00               	movlw	0
  2364  00133A  6E43               	movwf	(rightTurnIndicator@v3+1)^0,c
  2365  00133C  0E01               	movlw	1
  2366  00133E  6E42               	movwf	rightTurnIndicator@v3^0,c
  2367  001340  0E00               	movlw	0
  2368  001342  6E45               	movwf	(rightTurnIndicator@v4+1)^0,c
  2369  001344  0E00               	movlw	0
  2370  001346  6E44               	movwf	rightTurnIndicator@v4^0,c
  2371  001348                     
  2372                           ;uart_interface.c: 22:     int checksum = v1^v2^v3^v4^value;
  2373  001348  0E13               	movlw	19
  2374  00134A  183B               	xorwf	rightTurnIndicator@value^0,w,c
  2375  00134C  6E3E               	movwf	rightTurnIndicator@checksum^0,c
  2376  00134E  503C               	movf	(rightTurnIndicator@value+1)^0,w,c
  2377  001350  6E3F               	movwf	(rightTurnIndicator@checksum+1)^0,c
  2378  001352                     
  2379                           ;uart_interface.c: 24:     EUSART1_Write(v1);
  2380  001352  0E01               	movlw	1
  2381  001354  EC5C  F00D         	call	_EUSART1_Write
  2382  001358                     
  2383                           ;uart_interface.c: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2384  001358  0E41               	movlw	65
  2385  00135A  6E3D               	movwf	??_rightTurnIndicator^0,c
  2386  00135C  0EEE               	movlw	238
  2387  00135E                     u1987:
  2388  00135E  2EE8               	decfsz	wreg,f,c
  2389  001360  D7FE               	bra	u1987
  2390  001362  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2391  001364  D7FC               	bra	u1987
  2392  001366  D000               	nop2	
  2393  001368                     
  2394                           ;uart_interface.c: 26:     EUSART1_Write(v2);
  2395  001368  0E13               	movlw	19
  2396  00136A  EC5C  F00D         	call	_EUSART1_Write
  2397  00136E                     
  2398                           ;uart_interface.c: 27:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2399  00136E  0E41               	movlw	65
  2400  001370  6E3D               	movwf	??_rightTurnIndicator^0,c
  2401  001372  0EEE               	movlw	238
  2402  001374                     u1997:
  2403  001374  2EE8               	decfsz	wreg,f,c
  2404  001376  D7FE               	bra	u1997
  2405  001378  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2406  00137A  D7FC               	bra	u1997
  2407  00137C  D000               	nop2	
  2408  00137E                     
  2409                           ;uart_interface.c: 28:     EUSART1_Write(v3);
  2410  00137E  0E01               	movlw	1
  2411  001380  EC5C  F00D         	call	_EUSART1_Write
  2412  001384                     
  2413                           ;uart_interface.c: 29:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2414  001384  0E41               	movlw	65
  2415  001386  6E3D               	movwf	??_rightTurnIndicator^0,c
  2416  001388  0EEE               	movlw	238
  2417  00138A                     u2007:
  2418  00138A  2EE8               	decfsz	wreg,f,c
  2419  00138C  D7FE               	bra	u2007
  2420  00138E  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2421  001390  D7FC               	bra	u2007
  2422  001392  D000               	nop2	
  2423  001394                     
  2424                           ;uart_interface.c: 30:     EUSART1_Write(v4);
  2425  001394  0E00               	movlw	0
  2426  001396  EC5C  F00D         	call	_EUSART1_Write
  2427  00139A                     
  2428                           ;uart_interface.c: 31:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2429  00139A  0E41               	movlw	65
  2430  00139C  6E3D               	movwf	??_rightTurnIndicator^0,c
  2431  00139E  0EEE               	movlw	238
  2432  0013A0                     u2017:
  2433  0013A0  2EE8               	decfsz	wreg,f,c
  2434  0013A2  D7FE               	bra	u2017
  2435  0013A4  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2436  0013A6  D7FC               	bra	u2017
  2437  0013A8  D000               	nop2	
  2438  0013AA                     
  2439                           ;uart_interface.c: 32:     EUSART1_Write(value);
  2440  0013AA  503B               	movf	rightTurnIndicator@value^0,w,c
  2441  0013AC  EC5C  F00D         	call	_EUSART1_Write
  2442  0013B0                     
  2443                           ;uart_interface.c: 33:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2444  0013B0  0E41               	movlw	65
  2445  0013B2  6E3D               	movwf	??_rightTurnIndicator^0,c
  2446  0013B4  0EEE               	movlw	238
  2447  0013B6                     u2027:
  2448  0013B6  2EE8               	decfsz	wreg,f,c
  2449  0013B8  D7FE               	bra	u2027
  2450  0013BA  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2451  0013BC  D7FC               	bra	u2027
  2452  0013BE  D000               	nop2	
  2453  0013C0                     
  2454                           ;uart_interface.c: 34:     EUSART1_Write(checksum);
  2455  0013C0  503E               	movf	rightTurnIndicator@checksum^0,w,c
  2456  0013C2  EC5C  F00D         	call	_EUSART1_Write
  2457  0013C6  0012               	return		;funcret
  2458  0013C8                     __end_of_rightTurnIndicator:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _motorSpeed *****************
  2462 ;; Defined at:
  2463 ;;		line 68 in file "uart_interface.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  value           2    3[COMRAM] int 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  v4              2   12[COMRAM] int 
  2468 ;;  v3              2   10[COMRAM] int 
  2469 ;;  v2              2    8[COMRAM] int 
  2470 ;;  v1              2    0        int 
  2471 ;;  checksum        2    6[COMRAM] int 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;Total ram usage:       11 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; Hardware stack levels required when called: 4
  2488 ;; This function calls:
  2489 ;;		_EUSART1_Write
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;;		_init
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text6
  2497  0013C8                     __ptext6:
  2498                           	callstack 0
  2499  0013C8                     _motorSpeed:
  2500                           	callstack 26
  2501  0013C8  0E00               	movlw	0
  2502  0013CA  6E41               	movwf	(motorSpeed@v2+1)^0,c
  2503  0013CC  0E0F               	movlw	15
  2504  0013CE  6E40               	movwf	motorSpeed@v2^0,c
  2505  0013D0  0E00               	movlw	0
  2506  0013D2  6E43               	movwf	(motorSpeed@v3+1)^0,c
  2507  0013D4  0E00               	movlw	0
  2508  0013D6  6E42               	movwf	motorSpeed@v3^0,c
  2509  0013D8  0E00               	movlw	0
  2510  0013DA  6E45               	movwf	(motorSpeed@v4+1)^0,c
  2511  0013DC  0E00               	movlw	0
  2512  0013DE  6E44               	movwf	motorSpeed@v4^0,c
  2513  0013E0                     
  2514                           ;uart_interface.c: 73:     int checksum = v1^v2^v3^v4^value;
  2515  0013E0  0E0E               	movlw	14
  2516  0013E2  183B               	xorwf	motorSpeed@value^0,w,c
  2517  0013E4  6E3E               	movwf	motorSpeed@checksum^0,c
  2518  0013E6  503C               	movf	(motorSpeed@value+1)^0,w,c
  2519  0013E8  6E3F               	movwf	(motorSpeed@checksum+1)^0,c
  2520  0013EA                     
  2521                           ;uart_interface.c: 75:     EUSART1_Write(v1);
  2522  0013EA  0E01               	movlw	1
  2523  0013EC  EC5C  F00D         	call	_EUSART1_Write
  2524  0013F0                     
  2525                           ;uart_interface.c: 76:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2526  0013F0  0E41               	movlw	65
  2527  0013F2  6E3D               	movwf	??_motorSpeed^0,c
  2528  0013F4  0EEE               	movlw	238
  2529  0013F6                     u2037:
  2530  0013F6  2EE8               	decfsz	wreg,f,c
  2531  0013F8  D7FE               	bra	u2037
  2532  0013FA  2E3D               	decfsz	??_motorSpeed^0,f,c
  2533  0013FC  D7FC               	bra	u2037
  2534  0013FE  D000               	nop2	
  2535  001400                     
  2536                           ;uart_interface.c: 77:     EUSART1_Write(v2);
  2537  001400  0E0F               	movlw	15
  2538  001402  EC5C  F00D         	call	_EUSART1_Write
  2539  001406                     
  2540                           ;uart_interface.c: 78:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2541  001406  0E41               	movlw	65
  2542  001408  6E3D               	movwf	??_motorSpeed^0,c
  2543  00140A  0EEE               	movlw	238
  2544  00140C                     u2047:
  2545  00140C  2EE8               	decfsz	wreg,f,c
  2546  00140E  D7FE               	bra	u2047
  2547  001410  2E3D               	decfsz	??_motorSpeed^0,f,c
  2548  001412  D7FC               	bra	u2047
  2549  001414  D000               	nop2	
  2550  001416                     
  2551                           ;uart_interface.c: 79:     EUSART1_Write(v3);
  2552  001416  0E00               	movlw	0
  2553  001418  EC5C  F00D         	call	_EUSART1_Write
  2554  00141C                     
  2555                           ;uart_interface.c: 80:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2556  00141C  0E41               	movlw	65
  2557  00141E  6E3D               	movwf	??_motorSpeed^0,c
  2558  001420  0EEE               	movlw	238
  2559  001422                     u2057:
  2560  001422  2EE8               	decfsz	wreg,f,c
  2561  001424  D7FE               	bra	u2057
  2562  001426  2E3D               	decfsz	??_motorSpeed^0,f,c
  2563  001428  D7FC               	bra	u2057
  2564  00142A  D000               	nop2	
  2565  00142C                     
  2566                           ;uart_interface.c: 81:     EUSART1_Write(v4);
  2567  00142C  0E00               	movlw	0
  2568  00142E  EC5C  F00D         	call	_EUSART1_Write
  2569  001432                     
  2570                           ;uart_interface.c: 82:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2571  001432  0E41               	movlw	65
  2572  001434  6E3D               	movwf	??_motorSpeed^0,c
  2573  001436  0EEE               	movlw	238
  2574  001438                     u2067:
  2575  001438  2EE8               	decfsz	wreg,f,c
  2576  00143A  D7FE               	bra	u2067
  2577  00143C  2E3D               	decfsz	??_motorSpeed^0,f,c
  2578  00143E  D7FC               	bra	u2067
  2579  001440  D000               	nop2	
  2580  001442                     
  2581                           ;uart_interface.c: 83:     EUSART1_Write(value);
  2582  001442  503B               	movf	motorSpeed@value^0,w,c
  2583  001444  EC5C  F00D         	call	_EUSART1_Write
  2584  001448                     
  2585                           ;uart_interface.c: 84:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2586  001448  0E41               	movlw	65
  2587  00144A  6E3D               	movwf	??_motorSpeed^0,c
  2588  00144C  0EEE               	movlw	238
  2589  00144E                     u2077:
  2590  00144E  2EE8               	decfsz	wreg,f,c
  2591  001450  D7FE               	bra	u2077
  2592  001452  2E3D               	decfsz	??_motorSpeed^0,f,c
  2593  001454  D7FC               	bra	u2077
  2594  001456  D000               	nop2	
  2595  001458                     
  2596                           ;uart_interface.c: 85:     EUSART1_Write(checksum);
  2597  001458  503E               	movf	motorSpeed@checksum^0,w,c
  2598  00145A  EC5C  F00D         	call	_EUSART1_Write
  2599  00145E  0012               	return		;funcret
  2600  001460                     __end_of_motorSpeed:
  2601                           	callstack 0
  2602                           
  2603 ;; *************** function _motorControllerTemp *****************
  2604 ;; Defined at:
  2605 ;;		line 87 in file "uart_interface.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  value           2    3[COMRAM] int 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  v4              2   12[COMRAM] int 
  2610 ;;  v3              2   10[COMRAM] int 
  2611 ;;  v2              2    8[COMRAM] int 
  2612 ;;  v1              2    0        int 
  2613 ;;  checksum        2    6[COMRAM] int 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2626 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2627 ;;Total ram usage:       11 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 4
  2630 ;; This function calls:
  2631 ;;		_EUSART1_Write
  2632 ;; This function is called by:
  2633 ;;		_init
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text7
  2638  001460                     __ptext7:
  2639                           	callstack 0
  2640  001460                     _motorControllerTemp:
  2641                           	callstack 25
  2642  001460  0E00               	movlw	0
  2643  001462  6E41               	movwf	(motorControllerTemp@v2+1)^0,c
  2644  001464  0E0F               	movlw	15
  2645  001466  6E40               	movwf	motorControllerTemp@v2^0,c
  2646  001468  0E00               	movlw	0
  2647  00146A  6E43               	movwf	(motorControllerTemp@v3+1)^0,c
  2648  00146C  0E01               	movlw	1
  2649  00146E  6E42               	movwf	motorControllerTemp@v3^0,c
  2650  001470  0E00               	movlw	0
  2651  001472  6E45               	movwf	(motorControllerTemp@v4+1)^0,c
  2652  001474  0E00               	movlw	0
  2653  001476  6E44               	movwf	motorControllerTemp@v4^0,c
  2654  001478                     
  2655                           ;uart_interface.c: 89:     int checksum = v1^v2^v3^v4^value;
  2656  001478  0E0F               	movlw	15
  2657  00147A  183B               	xorwf	motorControllerTemp@value^0,w,c
  2658  00147C  6E3E               	movwf	motorControllerTemp@checksum^0,c
  2659  00147E  503C               	movf	(motorControllerTemp@value+1)^0,w,c
  2660  001480  6E3F               	movwf	(motorControllerTemp@checksum+1)^0,c
  2661  001482                     
  2662                           ;uart_interface.c: 91:     EUSART1_Write(v1);
  2663  001482  0E01               	movlw	1
  2664  001484  EC5C  F00D         	call	_EUSART1_Write
  2665  001488                     
  2666                           ;uart_interface.c: 92:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2667  001488  0E41               	movlw	65
  2668  00148A  6E3D               	movwf	??_motorControllerTemp^0,c
  2669  00148C  0EEE               	movlw	238
  2670  00148E                     u2087:
  2671  00148E  2EE8               	decfsz	wreg,f,c
  2672  001490  D7FE               	bra	u2087
  2673  001492  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2674  001494  D7FC               	bra	u2087
  2675  001496  D000               	nop2	
  2676  001498                     
  2677                           ;uart_interface.c: 93:     EUSART1_Write(v2);
  2678  001498  0E0F               	movlw	15
  2679  00149A  EC5C  F00D         	call	_EUSART1_Write
  2680  00149E                     
  2681                           ;uart_interface.c: 94:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2682  00149E  0E41               	movlw	65
  2683  0014A0  6E3D               	movwf	??_motorControllerTemp^0,c
  2684  0014A2  0EEE               	movlw	238
  2685  0014A4                     u2097:
  2686  0014A4  2EE8               	decfsz	wreg,f,c
  2687  0014A6  D7FE               	bra	u2097
  2688  0014A8  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2689  0014AA  D7FC               	bra	u2097
  2690  0014AC  D000               	nop2	
  2691  0014AE                     
  2692                           ;uart_interface.c: 95:     EUSART1_Write(v3);
  2693  0014AE  0E01               	movlw	1
  2694  0014B0  EC5C  F00D         	call	_EUSART1_Write
  2695  0014B4                     
  2696                           ;uart_interface.c: 96:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2697  0014B4  0E41               	movlw	65
  2698  0014B6  6E3D               	movwf	??_motorControllerTemp^0,c
  2699  0014B8  0EEE               	movlw	238
  2700  0014BA                     u2107:
  2701  0014BA  2EE8               	decfsz	wreg,f,c
  2702  0014BC  D7FE               	bra	u2107
  2703  0014BE  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2704  0014C0  D7FC               	bra	u2107
  2705  0014C2  D000               	nop2	
  2706  0014C4                     
  2707                           ;uart_interface.c: 97:     EUSART1_Write(v4);
  2708  0014C4  0E00               	movlw	0
  2709  0014C6  EC5C  F00D         	call	_EUSART1_Write
  2710  0014CA                     
  2711                           ;uart_interface.c: 98:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2712  0014CA  0E41               	movlw	65
  2713  0014CC  6E3D               	movwf	??_motorControllerTemp^0,c
  2714  0014CE  0EEE               	movlw	238
  2715  0014D0                     u2117:
  2716  0014D0  2EE8               	decfsz	wreg,f,c
  2717  0014D2  D7FE               	bra	u2117
  2718  0014D4  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2719  0014D6  D7FC               	bra	u2117
  2720  0014D8  D000               	nop2	
  2721  0014DA                     
  2722                           ;uart_interface.c: 99:     EUSART1_Write(value);
  2723  0014DA  503B               	movf	motorControllerTemp@value^0,w,c
  2724  0014DC  EC5C  F00D         	call	_EUSART1_Write
  2725  0014E0                     
  2726                           ;uart_interface.c: 100:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2727  0014E0  0E41               	movlw	65
  2728  0014E2  6E3D               	movwf	??_motorControllerTemp^0,c
  2729  0014E4  0EEE               	movlw	238
  2730  0014E6                     u2127:
  2731  0014E6  2EE8               	decfsz	wreg,f,c
  2732  0014E8  D7FE               	bra	u2127
  2733  0014EA  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2734  0014EC  D7FC               	bra	u2127
  2735  0014EE  D000               	nop2	
  2736  0014F0                     
  2737                           ;uart_interface.c: 101:     EUSART1_Write(checksum);
  2738  0014F0  503E               	movf	motorControllerTemp@checksum^0,w,c
  2739  0014F2  EC5C  F00D         	call	_EUSART1_Write
  2740  0014F6  0012               	return		;funcret
  2741  0014F8                     __end_of_motorControllerTemp:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function _leftTurnIndicator *****************
  2745 ;; Defined at:
  2746 ;;		line 4 in file "uart_interface.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  value           2    3[COMRAM] int 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  v4              2   12[COMRAM] int 
  2751 ;;  v3              2   10[COMRAM] int 
  2752 ;;  v2              2    8[COMRAM] int 
  2753 ;;  v1              2    0        int 
  2754 ;;  checksum        2    6[COMRAM] int 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2767 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2768 ;;Total ram usage:       11 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 4
  2771 ;; This function calls:
  2772 ;;		_EUSART1_Write
  2773 ;; This function is called by:
  2774 ;;		_main
  2775 ;;		_init
  2776 ;;		_leftTurnSignal
  2777 ;;		_hazardTurnSignal
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text8
  2782  0014F8                     __ptext8:
  2783                           	callstack 0
  2784  0014F8                     _leftTurnIndicator:
  2785                           	callstack 26
  2786  0014F8  0E00               	movlw	0
  2787  0014FA  6E41               	movwf	(leftTurnIndicator@v2+1)^0,c
  2788  0014FC  0E13               	movlw	19
  2789  0014FE  6E40               	movwf	leftTurnIndicator@v2^0,c
  2790  001500  0E00               	movlw	0
  2791  001502  6E43               	movwf	(leftTurnIndicator@v3+1)^0,c
  2792  001504  0E00               	movlw	0
  2793  001506  6E42               	movwf	leftTurnIndicator@v3^0,c
  2794  001508  0E00               	movlw	0
  2795  00150A  6E45               	movwf	(leftTurnIndicator@v4+1)^0,c
  2796  00150C  0E00               	movlw	0
  2797  00150E  6E44               	movwf	leftTurnIndicator@v4^0,c
  2798  001510                     
  2799                           ;uart_interface.c: 6:     int checksum = v1^v2^v3^v4^value;
  2800  001510  0E12               	movlw	18
  2801  001512  183B               	xorwf	leftTurnIndicator@value^0,w,c
  2802  001514  6E3E               	movwf	leftTurnIndicator@checksum^0,c
  2803  001516  503C               	movf	(leftTurnIndicator@value+1)^0,w,c
  2804  001518  6E3F               	movwf	(leftTurnIndicator@checksum+1)^0,c
  2805  00151A                     
  2806                           ;uart_interface.c: 8:     EUSART1_Write(v1);
  2807  00151A  0E01               	movlw	1
  2808  00151C  EC5C  F00D         	call	_EUSART1_Write
  2809  001520                     
  2810                           ;uart_interface.c: 9:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2811  001520  0E41               	movlw	65
  2812  001522  6E3D               	movwf	??_leftTurnIndicator^0,c
  2813  001524  0EEE               	movlw	238
  2814  001526                     u2137:
  2815  001526  2EE8               	decfsz	wreg,f,c
  2816  001528  D7FE               	bra	u2137
  2817  00152A  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2818  00152C  D7FC               	bra	u2137
  2819  00152E  D000               	nop2	
  2820  001530                     
  2821                           ;uart_interface.c: 10:     EUSART1_Write(v2);
  2822  001530  0E13               	movlw	19
  2823  001532  EC5C  F00D         	call	_EUSART1_Write
  2824  001536                     
  2825                           ;uart_interface.c: 11:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2826  001536  0E41               	movlw	65
  2827  001538  6E3D               	movwf	??_leftTurnIndicator^0,c
  2828  00153A  0EEE               	movlw	238
  2829  00153C                     u2147:
  2830  00153C  2EE8               	decfsz	wreg,f,c
  2831  00153E  D7FE               	bra	u2147
  2832  001540  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2833  001542  D7FC               	bra	u2147
  2834  001544  D000               	nop2	
  2835  001546                     
  2836                           ;uart_interface.c: 12:     EUSART1_Write(v3);
  2837  001546  0E00               	movlw	0
  2838  001548  EC5C  F00D         	call	_EUSART1_Write
  2839  00154C                     
  2840                           ;uart_interface.c: 13:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2841  00154C  0E41               	movlw	65
  2842  00154E  6E3D               	movwf	??_leftTurnIndicator^0,c
  2843  001550  0EEE               	movlw	238
  2844  001552                     u2157:
  2845  001552  2EE8               	decfsz	wreg,f,c
  2846  001554  D7FE               	bra	u2157
  2847  001556  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2848  001558  D7FC               	bra	u2157
  2849  00155A  D000               	nop2	
  2850  00155C                     
  2851                           ;uart_interface.c: 14:     EUSART1_Write(v4);
  2852  00155C  0E00               	movlw	0
  2853  00155E  EC5C  F00D         	call	_EUSART1_Write
  2854  001562                     
  2855                           ;uart_interface.c: 15:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2856  001562  0E41               	movlw	65
  2857  001564  6E3D               	movwf	??_leftTurnIndicator^0,c
  2858  001566  0EEE               	movlw	238
  2859  001568                     u2167:
  2860  001568  2EE8               	decfsz	wreg,f,c
  2861  00156A  D7FE               	bra	u2167
  2862  00156C  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2863  00156E  D7FC               	bra	u2167
  2864  001570  D000               	nop2	
  2865  001572                     
  2866                           ;uart_interface.c: 16:     EUSART1_Write(value);
  2867  001572  503B               	movf	leftTurnIndicator@value^0,w,c
  2868  001574  EC5C  F00D         	call	_EUSART1_Write
  2869  001578                     
  2870                           ;uart_interface.c: 17:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2871  001578  0E41               	movlw	65
  2872  00157A  6E3D               	movwf	??_leftTurnIndicator^0,c
  2873  00157C  0EEE               	movlw	238
  2874  00157E                     u2177:
  2875  00157E  2EE8               	decfsz	wreg,f,c
  2876  001580  D7FE               	bra	u2177
  2877  001582  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2878  001584  D7FC               	bra	u2177
  2879  001586  D000               	nop2	
  2880  001588                     
  2881                           ;uart_interface.c: 18:     EUSART1_Write(checksum);
  2882  001588  503E               	movf	leftTurnIndicator@checksum^0,w,c
  2883  00158A  EC5C  F00D         	call	_EUSART1_Write
  2884  00158E  0012               	return		;funcret
  2885  001590                     __end_of_leftTurnIndicator:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _hazardSignal *****************
  2889 ;; Defined at:
  2890 ;;		line 119 in file "uart_interface.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  value           2    3[COMRAM] int 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  v4              2   12[COMRAM] int 
  2895 ;;  v3              2   10[COMRAM] int 
  2896 ;;  v2              2    8[COMRAM] int 
  2897 ;;  v1              2    0        int 
  2898 ;;  checksum        2    6[COMRAM] int 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2909 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;Total ram usage:       11 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 4
  2915 ;; This function calls:
  2916 ;;		_EUSART1_Write
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;;		_init
  2920 ;;		_hazardTurnSignal
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text9
  2925  001590                     __ptext9:
  2926                           	callstack 0
  2927  001590                     _hazardSignal:
  2928                           	callstack 25
  2929  001590  0E00               	movlw	0
  2930  001592  6E41               	movwf	(hazardSignal@v2+1)^0,c
  2931  001594  0E13               	movlw	19
  2932  001596  6E40               	movwf	hazardSignal@v2^0,c
  2933  001598  0E00               	movlw	0
  2934  00159A  6E43               	movwf	(hazardSignal@v3+1)^0,c
  2935  00159C  0E02               	movlw	2
  2936  00159E  6E42               	movwf	hazardSignal@v3^0,c
  2937  0015A0  0E00               	movlw	0
  2938  0015A2  6E45               	movwf	(hazardSignal@v4+1)^0,c
  2939  0015A4  0E00               	movlw	0
  2940  0015A6  6E44               	movwf	hazardSignal@v4^0,c
  2941  0015A8                     
  2942                           ;uart_interface.c: 121:     int checksum = v1^v2^v3^v4^value;
  2943  0015A8  0E10               	movlw	16
  2944  0015AA  183B               	xorwf	hazardSignal@value^0,w,c
  2945  0015AC  6E3E               	movwf	hazardSignal@checksum^0,c
  2946  0015AE  503C               	movf	(hazardSignal@value+1)^0,w,c
  2947  0015B0  6E3F               	movwf	(hazardSignal@checksum+1)^0,c
  2948  0015B2                     
  2949                           ;uart_interface.c: 123:     EUSART1_Write(v1);
  2950  0015B2  0E01               	movlw	1
  2951  0015B4  EC5C  F00D         	call	_EUSART1_Write
  2952  0015B8                     
  2953                           ;uart_interface.c: 124:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2954  0015B8  0E41               	movlw	65
  2955  0015BA  6E3D               	movwf	??_hazardSignal^0,c
  2956  0015BC  0EEE               	movlw	238
  2957  0015BE                     u2187:
  2958  0015BE  2EE8               	decfsz	wreg,f,c
  2959  0015C0  D7FE               	bra	u2187
  2960  0015C2  2E3D               	decfsz	??_hazardSignal^0,f,c
  2961  0015C4  D7FC               	bra	u2187
  2962  0015C6  D000               	nop2	
  2963  0015C8                     
  2964                           ;uart_interface.c: 125:     EUSART1_Write(v2);
  2965  0015C8  0E13               	movlw	19
  2966  0015CA  EC5C  F00D         	call	_EUSART1_Write
  2967  0015CE                     
  2968                           ;uart_interface.c: 126:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2969  0015CE  0E41               	movlw	65
  2970  0015D0  6E3D               	movwf	??_hazardSignal^0,c
  2971  0015D2  0EEE               	movlw	238
  2972  0015D4                     u2197:
  2973  0015D4  2EE8               	decfsz	wreg,f,c
  2974  0015D6  D7FE               	bra	u2197
  2975  0015D8  2E3D               	decfsz	??_hazardSignal^0,f,c
  2976  0015DA  D7FC               	bra	u2197
  2977  0015DC  D000               	nop2	
  2978  0015DE                     
  2979                           ;uart_interface.c: 127:     EUSART1_Write(v3);
  2980  0015DE  0E02               	movlw	2
  2981  0015E0  EC5C  F00D         	call	_EUSART1_Write
  2982  0015E4                     
  2983                           ;uart_interface.c: 128:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2984  0015E4  0E41               	movlw	65
  2985  0015E6  6E3D               	movwf	??_hazardSignal^0,c
  2986  0015E8  0EEE               	movlw	238
  2987  0015EA                     u2207:
  2988  0015EA  2EE8               	decfsz	wreg,f,c
  2989  0015EC  D7FE               	bra	u2207
  2990  0015EE  2E3D               	decfsz	??_hazardSignal^0,f,c
  2991  0015F0  D7FC               	bra	u2207
  2992  0015F2  D000               	nop2	
  2993  0015F4                     
  2994                           ;uart_interface.c: 129:     EUSART1_Write(v4);
  2995  0015F4  0E00               	movlw	0
  2996  0015F6  EC5C  F00D         	call	_EUSART1_Write
  2997  0015FA                     
  2998                           ;uart_interface.c: 130:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2999  0015FA  0E41               	movlw	65
  3000  0015FC  6E3D               	movwf	??_hazardSignal^0,c
  3001  0015FE  0EEE               	movlw	238
  3002  001600                     u2217:
  3003  001600  2EE8               	decfsz	wreg,f,c
  3004  001602  D7FE               	bra	u2217
  3005  001604  2E3D               	decfsz	??_hazardSignal^0,f,c
  3006  001606  D7FC               	bra	u2217
  3007  001608  D000               	nop2	
  3008  00160A                     
  3009                           ;uart_interface.c: 131:     EUSART1_Write(value);
  3010  00160A  503B               	movf	hazardSignal@value^0,w,c
  3011  00160C  EC5C  F00D         	call	_EUSART1_Write
  3012  001610                     
  3013                           ;uart_interface.c: 132:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3014  001610  0E41               	movlw	65
  3015  001612  6E3D               	movwf	??_hazardSignal^0,c
  3016  001614  0EEE               	movlw	238
  3017  001616                     u2227:
  3018  001616  2EE8               	decfsz	wreg,f,c
  3019  001618  D7FE               	bra	u2227
  3020  00161A  2E3D               	decfsz	??_hazardSignal^0,f,c
  3021  00161C  D7FC               	bra	u2227
  3022  00161E  D000               	nop2	
  3023  001620                     
  3024                           ;uart_interface.c: 133:     EUSART1_Write(checksum);
  3025  001620  503E               	movf	hazardSignal@checksum^0,w,c
  3026  001622  EC5C  F00D         	call	_EUSART1_Write
  3027  001626  0012               	return		;funcret
  3028  001628                     __end_of_hazardSignal:
  3029                           	callstack 0
  3030                           
  3031 ;; *************** function _batteryTemp *****************
  3032 ;; Defined at:
  3033 ;;		line 103 in file "uart_interface.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  value           2    3[COMRAM] int 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  v4              2   12[COMRAM] int 
  3038 ;;  v3              2   10[COMRAM] int 
  3039 ;;  v2              2    8[COMRAM] int 
  3040 ;;  v1              2    0        int 
  3041 ;;  checksum        2    6[COMRAM] int 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3052 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;Total ram usage:       11 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 4
  3058 ;; This function calls:
  3059 ;;		_EUSART1_Write
  3060 ;; This function is called by:
  3061 ;;		_init
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text10
  3066  001628                     __ptext10:
  3067                           	callstack 0
  3068  001628                     _batteryTemp:
  3069                           	callstack 25
  3070  001628  0E00               	movlw	0
  3071  00162A  6E41               	movwf	(batteryTemp@v2+1)^0,c
  3072  00162C  0E0F               	movlw	15
  3073  00162E  6E40               	movwf	batteryTemp@v2^0,c
  3074  001630  0E00               	movlw	0
  3075  001632  6E43               	movwf	(batteryTemp@v3+1)^0,c
  3076  001634  0E02               	movlw	2
  3077  001636  6E42               	movwf	batteryTemp@v3^0,c
  3078  001638  0E00               	movlw	0
  3079  00163A  6E45               	movwf	(batteryTemp@v4+1)^0,c
  3080  00163C  0E00               	movlw	0
  3081  00163E  6E44               	movwf	batteryTemp@v4^0,c
  3082  001640                     
  3083                           ;uart_interface.c: 105:     int checksum = v1^v2^v3^v4^value;
  3084  001640  0E0C               	movlw	12
  3085  001642  183B               	xorwf	batteryTemp@value^0,w,c
  3086  001644  6E3E               	movwf	batteryTemp@checksum^0,c
  3087  001646  503C               	movf	(batteryTemp@value+1)^0,w,c
  3088  001648  6E3F               	movwf	(batteryTemp@checksum+1)^0,c
  3089  00164A                     
  3090                           ;uart_interface.c: 107:     EUSART1_Write(v1);
  3091  00164A  0E01               	movlw	1
  3092  00164C  EC5C  F00D         	call	_EUSART1_Write
  3093  001650                     
  3094                           ;uart_interface.c: 108:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3095  001650  0E41               	movlw	65
  3096  001652  6E3D               	movwf	??_batteryTemp^0,c
  3097  001654  0EEE               	movlw	238
  3098  001656                     u2237:
  3099  001656  2EE8               	decfsz	wreg,f,c
  3100  001658  D7FE               	bra	u2237
  3101  00165A  2E3D               	decfsz	??_batteryTemp^0,f,c
  3102  00165C  D7FC               	bra	u2237
  3103  00165E  D000               	nop2	
  3104  001660                     
  3105                           ;uart_interface.c: 109:     EUSART1_Write(v2);
  3106  001660  0E0F               	movlw	15
  3107  001662  EC5C  F00D         	call	_EUSART1_Write
  3108  001666                     
  3109                           ;uart_interface.c: 110:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3110  001666  0E41               	movlw	65
  3111  001668  6E3D               	movwf	??_batteryTemp^0,c
  3112  00166A  0EEE               	movlw	238
  3113  00166C                     u2247:
  3114  00166C  2EE8               	decfsz	wreg,f,c
  3115  00166E  D7FE               	bra	u2247
  3116  001670  2E3D               	decfsz	??_batteryTemp^0,f,c
  3117  001672  D7FC               	bra	u2247
  3118  001674  D000               	nop2	
  3119  001676                     
  3120                           ;uart_interface.c: 111:     EUSART1_Write(v3);
  3121  001676  0E02               	movlw	2
  3122  001678  EC5C  F00D         	call	_EUSART1_Write
  3123  00167C                     
  3124                           ;uart_interface.c: 112:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3125  00167C  0E41               	movlw	65
  3126  00167E  6E3D               	movwf	??_batteryTemp^0,c
  3127  001680  0EEE               	movlw	238
  3128  001682                     u2257:
  3129  001682  2EE8               	decfsz	wreg,f,c
  3130  001684  D7FE               	bra	u2257
  3131  001686  2E3D               	decfsz	??_batteryTemp^0,f,c
  3132  001688  D7FC               	bra	u2257
  3133  00168A  D000               	nop2	
  3134  00168C                     
  3135                           ;uart_interface.c: 113:     EUSART1_Write(v4);
  3136  00168C  0E00               	movlw	0
  3137  00168E  EC5C  F00D         	call	_EUSART1_Write
  3138  001692                     
  3139                           ;uart_interface.c: 114:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3140  001692  0E41               	movlw	65
  3141  001694  6E3D               	movwf	??_batteryTemp^0,c
  3142  001696  0EEE               	movlw	238
  3143  001698                     u2267:
  3144  001698  2EE8               	decfsz	wreg,f,c
  3145  00169A  D7FE               	bra	u2267
  3146  00169C  2E3D               	decfsz	??_batteryTemp^0,f,c
  3147  00169E  D7FC               	bra	u2267
  3148  0016A0  D000               	nop2	
  3149  0016A2                     
  3150                           ;uart_interface.c: 115:     EUSART1_Write(value);
  3151  0016A2  503B               	movf	batteryTemp@value^0,w,c
  3152  0016A4  EC5C  F00D         	call	_EUSART1_Write
  3153  0016A8                     
  3154                           ;uart_interface.c: 116:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3155  0016A8  0E41               	movlw	65
  3156  0016AA  6E3D               	movwf	??_batteryTemp^0,c
  3157  0016AC  0EEE               	movlw	238
  3158  0016AE                     u2277:
  3159  0016AE  2EE8               	decfsz	wreg,f,c
  3160  0016B0  D7FE               	bra	u2277
  3161  0016B2  2E3D               	decfsz	??_batteryTemp^0,f,c
  3162  0016B4  D7FC               	bra	u2277
  3163  0016B6  D000               	nop2	
  3164  0016B8                     
  3165                           ;uart_interface.c: 117:     EUSART1_Write(checksum);
  3166  0016B8  503E               	movf	batteryTemp@checksum^0,w,c
  3167  0016BA  EC5C  F00D         	call	_EUSART1_Write
  3168  0016BE  0012               	return		;funcret
  3169  0016C0                     __end_of_batteryTemp:
  3170                           	callstack 0
  3171                           
  3172 ;; *************** function _batterySOCGraphic *****************
  3173 ;; Defined at:
  3174 ;;		line 151 in file "uart_interface.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  value           2    3[COMRAM] int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  v4              2   12[COMRAM] int 
  3179 ;;  v3              2   10[COMRAM] int 
  3180 ;;  v2              2    8[COMRAM] int 
  3181 ;;  v1              2    0        int 
  3182 ;;  checksum        2    6[COMRAM] int 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3196 ;;Total ram usage:       11 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 4
  3199 ;; This function calls:
  3200 ;;		_EUSART1_Write
  3201 ;; This function is called by:
  3202 ;;		_init
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text11
  3207  0016C0                     __ptext11:
  3208                           	callstack 0
  3209  0016C0                     _batterySOCGraphic:
  3210                           	callstack 25
  3211  0016C0  0E00               	movlw	0
  3212  0016C2  6E41               	movwf	(batterySOCGraphic@v2+1)^0,c
  3213  0016C4  0E0F               	movlw	15
  3214  0016C6  6E40               	movwf	batterySOCGraphic@v2^0,c
  3215  0016C8  0E00               	movlw	0
  3216  0016CA  6E43               	movwf	(batterySOCGraphic@v3+1)^0,c
  3217  0016CC  0E03               	movlw	3
  3218  0016CE  6E42               	movwf	batterySOCGraphic@v3^0,c
  3219  0016D0  0E00               	movlw	0
  3220  0016D2  6E45               	movwf	(batterySOCGraphic@v4+1)^0,c
  3221  0016D4  0E00               	movlw	0
  3222  0016D6  6E44               	movwf	batterySOCGraphic@v4^0,c
  3223  0016D8                     
  3224                           ;uart_interface.c: 153:     int checksum = v1^v2^v3^v4^value;
  3225  0016D8  0E0D               	movlw	13
  3226  0016DA  183B               	xorwf	batterySOCGraphic@value^0,w,c
  3227  0016DC  6E3E               	movwf	batterySOCGraphic@checksum^0,c
  3228  0016DE  503C               	movf	(batterySOCGraphic@value+1)^0,w,c
  3229  0016E0  6E3F               	movwf	(batterySOCGraphic@checksum+1)^0,c
  3230  0016E2                     
  3231                           ;uart_interface.c: 155:     EUSART1_Write(v1);
  3232  0016E2  0E01               	movlw	1
  3233  0016E4  EC5C  F00D         	call	_EUSART1_Write
  3234  0016E8                     
  3235                           ;uart_interface.c: 156:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3236  0016E8  0E41               	movlw	65
  3237  0016EA  6E3D               	movwf	??_batterySOCGraphic^0,c
  3238  0016EC  0EEE               	movlw	238
  3239  0016EE                     u2287:
  3240  0016EE  2EE8               	decfsz	wreg,f,c
  3241  0016F0  D7FE               	bra	u2287
  3242  0016F2  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3243  0016F4  D7FC               	bra	u2287
  3244  0016F6  D000               	nop2	
  3245  0016F8                     
  3246                           ;uart_interface.c: 157:     EUSART1_Write(v2);
  3247  0016F8  0E0F               	movlw	15
  3248  0016FA  EC5C  F00D         	call	_EUSART1_Write
  3249  0016FE                     
  3250                           ;uart_interface.c: 158:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3251  0016FE  0E41               	movlw	65
  3252  001700  6E3D               	movwf	??_batterySOCGraphic^0,c
  3253  001702  0EEE               	movlw	238
  3254  001704                     u2297:
  3255  001704  2EE8               	decfsz	wreg,f,c
  3256  001706  D7FE               	bra	u2297
  3257  001708  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3258  00170A  D7FC               	bra	u2297
  3259  00170C  D000               	nop2	
  3260  00170E                     
  3261                           ;uart_interface.c: 159:     EUSART1_Write(v3);
  3262  00170E  0E03               	movlw	3
  3263  001710  EC5C  F00D         	call	_EUSART1_Write
  3264  001714                     
  3265                           ;uart_interface.c: 160:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3266  001714  0E41               	movlw	65
  3267  001716  6E3D               	movwf	??_batterySOCGraphic^0,c
  3268  001718  0EEE               	movlw	238
  3269  00171A                     u2307:
  3270  00171A  2EE8               	decfsz	wreg,f,c
  3271  00171C  D7FE               	bra	u2307
  3272  00171E  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3273  001720  D7FC               	bra	u2307
  3274  001722  D000               	nop2	
  3275  001724                     
  3276                           ;uart_interface.c: 161:     EUSART1_Write(v4);
  3277  001724  0E00               	movlw	0
  3278  001726  EC5C  F00D         	call	_EUSART1_Write
  3279  00172A                     
  3280                           ;uart_interface.c: 162:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3281  00172A  0E41               	movlw	65
  3282  00172C  6E3D               	movwf	??_batterySOCGraphic^0,c
  3283  00172E  0EEE               	movlw	238
  3284  001730                     u2317:
  3285  001730  2EE8               	decfsz	wreg,f,c
  3286  001732  D7FE               	bra	u2317
  3287  001734  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3288  001736  D7FC               	bra	u2317
  3289  001738  D000               	nop2	
  3290  00173A                     
  3291                           ;uart_interface.c: 163:     EUSART1_Write(value);
  3292  00173A  503B               	movf	batterySOCGraphic@value^0,w,c
  3293  00173C  EC5C  F00D         	call	_EUSART1_Write
  3294  001740                     
  3295                           ;uart_interface.c: 164:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3296  001740  0E41               	movlw	65
  3297  001742  6E3D               	movwf	??_batterySOCGraphic^0,c
  3298  001744  0EEE               	movlw	238
  3299  001746                     u2327:
  3300  001746  2EE8               	decfsz	wreg,f,c
  3301  001748  D7FE               	bra	u2327
  3302  00174A  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3303  00174C  D7FC               	bra	u2327
  3304  00174E  D000               	nop2	
  3305  001750                     
  3306                           ;uart_interface.c: 165:     EUSART1_Write(checksum);
  3307  001750  503E               	movf	batterySOCGraphic@checksum^0,w,c
  3308  001752  EC5C  F00D         	call	_EUSART1_Write
  3309  001756  0012               	return		;funcret
  3310  001758                     __end_of_batterySOCGraphic:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function _batterySOC *****************
  3314 ;; Defined at:
  3315 ;;		line 135 in file "uart_interface.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  value           2    3[COMRAM] int 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  v4              2   12[COMRAM] int 
  3320 ;;  v3              2   10[COMRAM] int 
  3321 ;;  v2              2    8[COMRAM] int 
  3322 ;;  v1              2    0        int 
  3323 ;;  checksum        2    6[COMRAM] int 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3334 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3336 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3337 ;;Total ram usage:       11 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 4
  3340 ;; This function calls:
  3341 ;;		_EUSART1_Write
  3342 ;; This function is called by:
  3343 ;;		_init
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text12
  3348  001758                     __ptext12:
  3349                           	callstack 0
  3350  001758                     _batterySOC:
  3351                           	callstack 25
  3352  001758  0E00               	movlw	0
  3353  00175A  6E41               	movwf	(batterySOC@v2+1)^0,c
  3354  00175C  0E28               	movlw	40
  3355  00175E  6E40               	movwf	batterySOC@v2^0,c
  3356  001760  0E00               	movlw	0
  3357  001762  6E43               	movwf	(batterySOC@v3+1)^0,c
  3358  001764  0E01               	movlw	1
  3359  001766  6E42               	movwf	batterySOC@v3^0,c
  3360  001768  0E00               	movlw	0
  3361  00176A  6E45               	movwf	(batterySOC@v4+1)^0,c
  3362  00176C  0E00               	movlw	0
  3363  00176E  6E44               	movwf	batterySOC@v4^0,c
  3364  001770                     
  3365                           ;uart_interface.c: 137:     int checksum = v1^v2^v3^v4^value;
  3366  001770  0E28               	movlw	40
  3367  001772  183B               	xorwf	batterySOC@value^0,w,c
  3368  001774  6E3E               	movwf	batterySOC@checksum^0,c
  3369  001776  503C               	movf	(batterySOC@value+1)^0,w,c
  3370  001778  6E3F               	movwf	(batterySOC@checksum+1)^0,c
  3371  00177A                     
  3372                           ;uart_interface.c: 139:     EUSART1_Write(v1);
  3373  00177A  0E01               	movlw	1
  3374  00177C  EC5C  F00D         	call	_EUSART1_Write
  3375  001780                     
  3376                           ;uart_interface.c: 140:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3377  001780  0E41               	movlw	65
  3378  001782  6E3D               	movwf	??_batterySOC^0,c
  3379  001784  0EEE               	movlw	238
  3380  001786                     u2337:
  3381  001786  2EE8               	decfsz	wreg,f,c
  3382  001788  D7FE               	bra	u2337
  3383  00178A  2E3D               	decfsz	??_batterySOC^0,f,c
  3384  00178C  D7FC               	bra	u2337
  3385  00178E  D000               	nop2	
  3386  001790                     
  3387                           ;uart_interface.c: 141:     EUSART1_Write(v2);
  3388  001790  0E28               	movlw	40
  3389  001792  EC5C  F00D         	call	_EUSART1_Write
  3390  001796                     
  3391                           ;uart_interface.c: 142:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3392  001796  0E41               	movlw	65
  3393  001798  6E3D               	movwf	??_batterySOC^0,c
  3394  00179A  0EEE               	movlw	238
  3395  00179C                     u2347:
  3396  00179C  2EE8               	decfsz	wreg,f,c
  3397  00179E  D7FE               	bra	u2347
  3398  0017A0  2E3D               	decfsz	??_batterySOC^0,f,c
  3399  0017A2  D7FC               	bra	u2347
  3400  0017A4  D000               	nop2	
  3401  0017A6                     
  3402                           ;uart_interface.c: 143:     EUSART1_Write(v3);
  3403  0017A6  0E01               	movlw	1
  3404  0017A8  EC5C  F00D         	call	_EUSART1_Write
  3405  0017AC                     
  3406                           ;uart_interface.c: 144:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3407  0017AC  0E41               	movlw	65
  3408  0017AE  6E3D               	movwf	??_batterySOC^0,c
  3409  0017B0  0EEE               	movlw	238
  3410  0017B2                     u2357:
  3411  0017B2  2EE8               	decfsz	wreg,f,c
  3412  0017B4  D7FE               	bra	u2357
  3413  0017B6  2E3D               	decfsz	??_batterySOC^0,f,c
  3414  0017B8  D7FC               	bra	u2357
  3415  0017BA  D000               	nop2	
  3416  0017BC                     
  3417                           ;uart_interface.c: 145:     EUSART1_Write(v4);
  3418  0017BC  0E00               	movlw	0
  3419  0017BE  EC5C  F00D         	call	_EUSART1_Write
  3420  0017C2                     
  3421                           ;uart_interface.c: 146:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3422  0017C2  0E41               	movlw	65
  3423  0017C4  6E3D               	movwf	??_batterySOC^0,c
  3424  0017C6  0EEE               	movlw	238
  3425  0017C8                     u2367:
  3426  0017C8  2EE8               	decfsz	wreg,f,c
  3427  0017CA  D7FE               	bra	u2367
  3428  0017CC  2E3D               	decfsz	??_batterySOC^0,f,c
  3429  0017CE  D7FC               	bra	u2367
  3430  0017D0  D000               	nop2	
  3431  0017D2                     
  3432                           ;uart_interface.c: 147:     EUSART1_Write(value);
  3433  0017D2  503B               	movf	batterySOC@value^0,w,c
  3434  0017D4  EC5C  F00D         	call	_EUSART1_Write
  3435  0017D8                     
  3436                           ;uart_interface.c: 148:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3437  0017D8  0E41               	movlw	65
  3438  0017DA  6E3D               	movwf	??_batterySOC^0,c
  3439  0017DC  0EEE               	movlw	238
  3440  0017DE                     u2377:
  3441  0017DE  2EE8               	decfsz	wreg,f,c
  3442  0017E0  D7FE               	bra	u2377
  3443  0017E2  2E3D               	decfsz	??_batterySOC^0,f,c
  3444  0017E4  D7FC               	bra	u2377
  3445  0017E6  D000               	nop2	
  3446  0017E8                     
  3447                           ;uart_interface.c: 149:     EUSART1_Write(checksum);
  3448  0017E8  503E               	movf	batterySOC@checksum^0,w,c
  3449  0017EA  EC5C  F00D         	call	_EUSART1_Write
  3450  0017EE  0012               	return		;funcret
  3451  0017F0                     __end_of_batterySOC:
  3452                           	callstack 0
  3453                           
  3454 ;; *************** function _auxBattConn *****************
  3455 ;; Defined at:
  3456 ;;		line 52 in file "uart_interface.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  value           2    3[COMRAM] int 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  v4              2   12[COMRAM] int 
  3461 ;;  v3              2   10[COMRAM] int 
  3462 ;;  v2              2    8[COMRAM] int 
  3463 ;;  v1              2    0        int 
  3464 ;;  checksum        2    6[COMRAM] int 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;Total ram usage:       11 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 4
  3481 ;; This function calls:
  3482 ;;		_EUSART1_Write
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;;		_init
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text13
  3490  0017F0                     __ptext13:
  3491                           	callstack 0
  3492  0017F0                     _auxBattConn:
  3493                           	callstack 25
  3494  0017F0  0E00               	movlw	0
  3495  0017F2  6E41               	movwf	(auxBattConn@v2+1)^0,c
  3496  0017F4  0E2E               	movlw	46
  3497  0017F6  6E40               	movwf	auxBattConn@v2^0,c
  3498  0017F8  0E00               	movlw	0
  3499  0017FA  6E43               	movwf	(auxBattConn@v3+1)^0,c
  3500  0017FC  0E01               	movlw	1
  3501  0017FE  6E42               	movwf	auxBattConn@v3^0,c
  3502  001800  0E00               	movlw	0
  3503  001802  6E45               	movwf	(auxBattConn@v4+1)^0,c
  3504  001804  0E00               	movlw	0
  3505  001806  6E44               	movwf	auxBattConn@v4^0,c
  3506  001808                     
  3507                           ;uart_interface.c: 54:     int checksum = v1^v2^v3^v4^value;
  3508  001808  0E2E               	movlw	46
  3509  00180A  183B               	xorwf	auxBattConn@value^0,w,c
  3510  00180C  6E3E               	movwf	auxBattConn@checksum^0,c
  3511  00180E  503C               	movf	(auxBattConn@value+1)^0,w,c
  3512  001810  6E3F               	movwf	(auxBattConn@checksum+1)^0,c
  3513  001812                     
  3514                           ;uart_interface.c: 56:     EUSART1_Write(v1);
  3515  001812  0E01               	movlw	1
  3516  001814  EC5C  F00D         	call	_EUSART1_Write
  3517  001818                     
  3518                           ;uart_interface.c: 57:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3519  001818  0E41               	movlw	65
  3520  00181A  6E3D               	movwf	??_auxBattConn^0,c
  3521  00181C  0EEE               	movlw	238
  3522  00181E                     u2387:
  3523  00181E  2EE8               	decfsz	wreg,f,c
  3524  001820  D7FE               	bra	u2387
  3525  001822  2E3D               	decfsz	??_auxBattConn^0,f,c
  3526  001824  D7FC               	bra	u2387
  3527  001826  D000               	nop2	
  3528  001828                     
  3529                           ;uart_interface.c: 58:     EUSART1_Write(v2);
  3530  001828  0E2E               	movlw	46
  3531  00182A  EC5C  F00D         	call	_EUSART1_Write
  3532  00182E                     
  3533                           ;uart_interface.c: 59:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3534  00182E  0E41               	movlw	65
  3535  001830  6E3D               	movwf	??_auxBattConn^0,c
  3536  001832  0EEE               	movlw	238
  3537  001834                     u2397:
  3538  001834  2EE8               	decfsz	wreg,f,c
  3539  001836  D7FE               	bra	u2397
  3540  001838  2E3D               	decfsz	??_auxBattConn^0,f,c
  3541  00183A  D7FC               	bra	u2397
  3542  00183C  D000               	nop2	
  3543  00183E                     
  3544                           ;uart_interface.c: 60:     EUSART1_Write(v3);
  3545  00183E  0E01               	movlw	1
  3546  001840  EC5C  F00D         	call	_EUSART1_Write
  3547  001844                     
  3548                           ;uart_interface.c: 61:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3549  001844  0E41               	movlw	65
  3550  001846  6E3D               	movwf	??_auxBattConn^0,c
  3551  001848  0EEE               	movlw	238
  3552  00184A                     u2407:
  3553  00184A  2EE8               	decfsz	wreg,f,c
  3554  00184C  D7FE               	bra	u2407
  3555  00184E  2E3D               	decfsz	??_auxBattConn^0,f,c
  3556  001850  D7FC               	bra	u2407
  3557  001852  D000               	nop2	
  3558  001854                     
  3559                           ;uart_interface.c: 62:     EUSART1_Write(v4);
  3560  001854  0E00               	movlw	0
  3561  001856  EC5C  F00D         	call	_EUSART1_Write
  3562  00185A                     
  3563                           ;uart_interface.c: 63:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3564  00185A  0E41               	movlw	65
  3565  00185C  6E3D               	movwf	??_auxBattConn^0,c
  3566  00185E  0EEE               	movlw	238
  3567  001860                     u2417:
  3568  001860  2EE8               	decfsz	wreg,f,c
  3569  001862  D7FE               	bra	u2417
  3570  001864  2E3D               	decfsz	??_auxBattConn^0,f,c
  3571  001866  D7FC               	bra	u2417
  3572  001868  D000               	nop2	
  3573  00186A                     
  3574                           ;uart_interface.c: 64:     EUSART1_Write(value);
  3575  00186A  503B               	movf	auxBattConn@value^0,w,c
  3576  00186C  EC5C  F00D         	call	_EUSART1_Write
  3577  001870                     
  3578                           ;uart_interface.c: 65:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3579  001870  0E41               	movlw	65
  3580  001872  6E3D               	movwf	??_auxBattConn^0,c
  3581  001874  0EEE               	movlw	238
  3582  001876                     u2427:
  3583  001876  2EE8               	decfsz	wreg,f,c
  3584  001878  D7FE               	bra	u2427
  3585  00187A  2E3D               	decfsz	??_auxBattConn^0,f,c
  3586  00187C  D7FC               	bra	u2427
  3587  00187E  D000               	nop2	
  3588  001880                     
  3589                           ;uart_interface.c: 66:     EUSART1_Write(checksum);
  3590  001880  503E               	movf	auxBattConn@checksum^0,w,c
  3591  001882  EC5C  F00D         	call	_EUSART1_Write
  3592  001886  0012               	return		;funcret
  3593  001888                     __end_of_auxBattConn:
  3594                           	callstack 0
  3595                           
  3596 ;; *************** function _EUSART1_Write *****************
  3597 ;; Defined at:
  3598 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  txData          1    wreg     unsigned char 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  txData          1    2[COMRAM] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;Total ram usage:        1 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 3
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_leftTurnIndicator
  3623 ;;		_rightTurnIndicator
  3624 ;;		_warningLED
  3625 ;;		_auxBattConn
  3626 ;;		_motorSpeed
  3627 ;;		_motorControllerTemp
  3628 ;;		_batteryTemp
  3629 ;;		_hazardSignal
  3630 ;;		_batterySOC
  3631 ;;		_batterySOCGraphic
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text14
  3636  001AB8                     __ptext14:
  3637                           	callstack 0
  3638  001AB8                     _EUSART1_Write:
  3639                           	callstack 26
  3640                           
  3641                           ;incstack = 0
  3642                           ;EUSART1_Write@txData stored from wreg
  3643  001AB8  6E3A               	movwf	EUSART1_Write@txData^0,c
  3644  001ABA                     l67:
  3645                           
  3646                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3647  001ABA  A89E               	btfss	158,4,c	;volatile
  3648  001ABC  EF62  F00D         	goto	u1201
  3649  001AC0  EF64  F00D         	goto	u1200
  3650  001AC4                     u1201:
  3651  001AC4  EF5D  F00D         	goto	l67
  3652  001AC8                     u1200:
  3653  001AC8                     
  3654                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3655  001AC8  C03A  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3656  001ACC  0012               	return		;funcret
  3657  001ACE                     __end_of_EUSART1_Write:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _hazardButton *****************
  3661 ;; Defined at:
  3662 ;;		line 58 in file "button_functionality.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  b2FunctionAc    2    2[COMRAM] PTR int 
  3665 ;;		 -> b2FuncActive(2), 
  3666 ;;  b2Latch         2    4[COMRAM] PTR int 
  3667 ;;		 -> latchb2(2), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3683 ;;Total ram usage:        6 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 3
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text15
  3694  0011A8                     __ptext15:
  3695                           	callstack 0
  3696  0011A8                     _hazardButton:
  3697                           	callstack 27
  3698  0011A8                     
  3699                           ;button_functionality.c: 59:     switch (PORTAbits.RA1) {
  3700  0011A8  EF2E  F009         	goto	l4582
  3701  0011AC                     l4564:
  3702                           
  3703                           ;button_functionality.c: 61:         *b2Latch = 0;
  3704  0011AC  C03C  FFD9         	movff	hazardButton@b2Latch,fsr2l
  3705  0011B0  C03D  FFDA         	movff	hazardButton@b2Latch+1,fsr2h
  3706  0011B4  0E00               	movlw	0
  3707  0011B6  6EDE               	movwf	postinc2,c
  3708  0011B8  0E00               	movlw	0
  3709  0011BA  6EDD               	movwf	postdec2,c
  3710                           
  3711                           ;button_functionality.c: 62:         break;
  3712  0011BC  EF4B  F009         	goto	l782
  3713  0011C0                     l4566:
  3714                           
  3715                           ;button_functionality.c: 69:                 *b2FunctionActive = 1;
  3716  0011C0  C03A  FFD9         	movff	hazardButton@b2FunctionActive,fsr2l
  3717  0011C4  C03B  FFDA         	movff	hazardButton@b2FunctionActive+1,fsr2h
  3718  0011C8  0E01               	movlw	1
  3719  0011CA  6EDE               	movwf	postinc2,c
  3720  0011CC  0E00               	movlw	0
  3721  0011CE  6EDD               	movwf	postdec2,c
  3722                           
  3723                           ;button_functionality.c: 70:                 break;
  3724  0011D0  EF0E  F009         	goto	l4574
  3725  0011D4                     l4568:
  3726                           
  3727                           ;button_functionality.c: 73:                 *b2FunctionActive = 0;
  3728  0011D4  C03A  FFD9         	movff	hazardButton@b2FunctionActive,fsr2l
  3729  0011D8  C03B  FFDA         	movff	hazardButton@b2FunctionActive+1,fsr2h
  3730  0011DC  0E00               	movlw	0
  3731  0011DE  6EDE               	movwf	postinc2,c
  3732  0011E0  0E00               	movlw	0
  3733  0011E2  6EDD               	movwf	postdec2,c
  3734                           
  3735                           ;button_functionality.c: 74:                 break;
  3736  0011E4  EF0E  F009         	goto	l4574
  3737  0011E8                     l4572:
  3738  0011E8  C03A  FFD9         	movff	hazardButton@b2FunctionActive,fsr2l
  3739  0011EC  C03B  FFDA         	movff	hazardButton@b2FunctionActive+1,fsr2h
  3740  0011F0  CFDE F03E          	movff	postinc2,??_hazardButton
  3741  0011F4  CFDD F03F          	movff	postdec2,??_hazardButton+1
  3742                           
  3743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3744                           ; Switch size 1, requested type "simple"
  3745                           ; Number of cases is 1, Range of values is 0 to 0
  3746                           ; switch strategies available:
  3747                           ; Name         Instructions Cycles
  3748                           ; simple_byte            4     3 (average)
  3749                           ;	Chosen strategy is simple_byte
  3750  0011F8  503F               	movf	(??_hazardButton+1)^0,w,c
  3751  0011FA  0A00               	xorlw	0	; case 0
  3752  0011FC  B4D8               	btfsc	status,2,c
  3753  0011FE  EF03  F009         	goto	l5056
  3754  001202  EF0E  F009         	goto	l4574
  3755  001206                     l5056:
  3756                           
  3757                           ; Switch size 1, requested type "simple"
  3758                           ; Number of cases is 2, Range of values is 0 to 1
  3759                           ; switch strategies available:
  3760                           ; Name         Instructions Cycles
  3761                           ; simple_byte            7     4 (average)
  3762                           ;	Chosen strategy is simple_byte
  3763  001206  503E               	movf	??_hazardButton^0,w,c
  3764  001208  0A00               	xorlw	0	; case 0
  3765  00120A  B4D8               	btfsc	status,2,c
  3766  00120C  EFE0  F008         	goto	l4566
  3767  001210  0A01               	xorlw	1	; case 1
  3768  001212  B4D8               	btfsc	status,2,c
  3769  001214  EFEA  F008         	goto	l4568
  3770  001218  EF0E  F009         	goto	l4574
  3771  00121C                     l4574:
  3772                           
  3773                           ;button_functionality.c: 76:             *b2Latch = 1;
  3774  00121C  C03C  FFD9         	movff	hazardButton@b2Latch,fsr2l
  3775  001220  C03D  FFDA         	movff	hazardButton@b2Latch+1,fsr2h
  3776  001224  0E01               	movlw	1
  3777  001226  6EDE               	movwf	postinc2,c
  3778  001228  0E00               	movlw	0
  3779  00122A  6EDD               	movwf	postdec2,c
  3780                           
  3781                           ;button_functionality.c: 77:             break;
  3782  00122C  EF4B  F009         	goto	l782
  3783  001230                     l4578:
  3784  001230  C03C  FFD9         	movff	hazardButton@b2Latch,fsr2l
  3785  001234  C03D  FFDA         	movff	hazardButton@b2Latch+1,fsr2h
  3786  001238  CFDE F03E          	movff	postinc2,??_hazardButton
  3787  00123C  CFDD F03F          	movff	postdec2,??_hazardButton+1
  3788                           
  3789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3790                           ; Switch size 1, requested type "simple"
  3791                           ; Number of cases is 1, Range of values is 0 to 0
  3792                           ; switch strategies available:
  3793                           ; Name         Instructions Cycles
  3794                           ; simple_byte            4     3 (average)
  3795                           ;	Chosen strategy is simple_byte
  3796  001240  503F               	movf	(??_hazardButton+1)^0,w,c
  3797  001242  0A00               	xorlw	0	; case 0
  3798  001244  B4D8               	btfsc	status,2,c
  3799  001246  EF27  F009         	goto	l5058
  3800  00124A  EF4B  F009         	goto	l782
  3801  00124E                     l5058:
  3802                           
  3803                           ; Switch size 1, requested type "simple"
  3804                           ; Number of cases is 1, Range of values is 0 to 0
  3805                           ; switch strategies available:
  3806                           ; Name         Instructions Cycles
  3807                           ; simple_byte            4     3 (average)
  3808                           ;	Chosen strategy is simple_byte
  3809  00124E  503E               	movf	??_hazardButton^0,w,c
  3810  001250  0A00               	xorlw	0	; case 0
  3811  001252  B4D8               	btfsc	status,2,c
  3812  001254  EFF4  F008         	goto	l4572
  3813  001258  EF4B  F009         	goto	l782
  3814  00125C                     l4582:
  3815  00125C  B280               	btfsc	128,1,c	;volatile
  3816  00125E  EF33  F009         	goto	u1391
  3817  001262  EF36  F009         	goto	u1390
  3818  001266                     u1391:
  3819  001266  0E01               	movlw	1
  3820  001268  EF37  F009         	goto	u1400
  3821  00126C                     u1390:
  3822  00126C  0E00               	movlw	0
  3823  00126E                     u1400:
  3824  00126E  6E3E               	movwf	??_hazardButton^0,c
  3825  001270  6A3F               	clrf	(??_hazardButton+1)^0,c
  3826                           
  3827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3828                           ; Switch size 1, requested type "simple"
  3829                           ; Number of cases is 1, Range of values is 0 to 0
  3830                           ; switch strategies available:
  3831                           ; Name         Instructions Cycles
  3832                           ; simple_byte            4     3 (average)
  3833                           ;	Chosen strategy is simple_byte
  3834  001272  503F               	movf	(??_hazardButton+1)^0,w,c
  3835  001274  0A00               	xorlw	0	; case 0
  3836  001276  B4D8               	btfsc	status,2,c
  3837  001278  EF40  F009         	goto	l5060
  3838  00127C  EF4B  F009         	goto	l782
  3839  001280                     l5060:
  3840                           
  3841                           ; Switch size 1, requested type "simple"
  3842                           ; Number of cases is 2, Range of values is 0 to 1
  3843                           ; switch strategies available:
  3844                           ; Name         Instructions Cycles
  3845                           ; simple_byte            7     4 (average)
  3846                           ;	Chosen strategy is simple_byte
  3847  001280  503E               	movf	??_hazardButton^0,w,c
  3848  001282  0A00               	xorlw	0	; case 0
  3849  001284  B4D8               	btfsc	status,2,c
  3850  001286  EFD6  F008         	goto	l4564
  3851  00128A  0A01               	xorlw	1	; case 1
  3852  00128C  B4D8               	btfsc	status,2,c
  3853  00128E  EF18  F009         	goto	l4578
  3854  001292  EF4B  F009         	goto	l782
  3855  001296                     l782:
  3856  001296  0012               	return		;funcret
  3857  001298                     __end_of_hazardButton:
  3858                           	callstack 0
  3859                           
  3860 ;; *************** function _canRightSignal *****************
  3861 ;; Defined at:
  3862 ;;		line 15 in file "can_interface.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  number          2   26[COMRAM] int 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3880 ;;Total ram usage:        2 bytes
  3881 ;; Hardware stack levels used: 1
  3882 ;; Hardware stack levels required when called: 5
  3883 ;; This function calls:
  3884 ;;		_CAN_transmit
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text16
  3891  0019F0                     __ptext16:
  3892                           	callstack 0
  3893  0019F0                     _canRightSignal:
  3894                           	callstack 25
  3895  0019F0                     
  3896                           ;can_interface.c: 16:  tx1.frame.idType = 1;
  3897  0019F0  0E01               	movlw	1
  3898  0019F2  0100               	movlb	0	; () banked
  3899  0019F4  6FB4               	movwf	_tx1& (0+255),b
  3900                           
  3901                           ;can_interface.c: 17:  tx1.frame.id = 0x62;
  3902  0019F6  0E62               	movlw	98
  3903  0019F8  6FB5               	movwf	(_tx1+1)& (0+255),b
  3904  0019FA  0E00               	movlw	0
  3905  0019FC  6FB6               	movwf	(_tx1+2)& (0+255),b
  3906  0019FE  0E00               	movlw	0
  3907  001A00  6FB7               	movwf	(_tx1+3)& (0+255),b
  3908  001A02  0E00               	movlw	0
  3909  001A04  6FB8               	movwf	(_tx1+4)& (0+255),b
  3910                           
  3911                           ;can_interface.c: 18:  tx1.frame.dlc = 0x01;
  3912  001A06  0E01               	movlw	1
  3913  001A08  6FB9               	movwf	(_tx1+5)& (0+255),b
  3914  001A0A                     
  3915                           ; BSR set to: 0
  3916                           ;can_interface.c: 19:  tx1.frame.data0 = number;
  3917  001A0A  C052  F0BA         	movff	canRightSignal@number,_tx1+6
  3918  001A0E                     
  3919                           ; BSR set to: 0
  3920                           ;can_interface.c: 20:  CAN_transmit(&tx1);
  3921  001A0E  0EB4               	movlw	low _tx1
  3922  001A10  6E4C               	movwf	CAN_transmit@tempCanMsg^0,c
  3923  001A12  0E00               	movlw	high _tx1
  3924  001A14  6E4D               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
  3925  001A16  EC03  F003         	call	_CAN_transmit	;wreg free
  3926  001A1A  0012               	return		;funcret
  3927  001A1C                     __end_of_canRightSignal:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function _canLeftSignal *****************
  3931 ;; Defined at:
  3932 ;;		line 23 in file "can_interface.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  number          2   26[COMRAM] int 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;Total ram usage:        2 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 5
  3953 ;; This function calls:
  3954 ;;		_CAN_transmit
  3955 ;; This function is called by:
  3956 ;;		_main
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text17
  3961  001A1C                     __ptext17:
  3962                           	callstack 0
  3963  001A1C                     _canLeftSignal:
  3964                           	callstack 25
  3965  001A1C                     
  3966                           ;can_interface.c: 24:  tx2.frame.idType = 1;
  3967  001A1C  0E01               	movlw	1
  3968  001A1E  0100               	movlb	0	; () banked
  3969  001A20  6FA6               	movwf	_tx2& (0+255),b
  3970                           
  3971                           ;can_interface.c: 25:  tx2.frame.id = 0x63;
  3972  001A22  0E63               	movlw	99
  3973  001A24  6FA7               	movwf	(_tx2+1)& (0+255),b
  3974  001A26  0E00               	movlw	0
  3975  001A28  6FA8               	movwf	(_tx2+2)& (0+255),b
  3976  001A2A  0E00               	movlw	0
  3977  001A2C  6FA9               	movwf	(_tx2+3)& (0+255),b
  3978  001A2E  0E00               	movlw	0
  3979  001A30  6FAA               	movwf	(_tx2+4)& (0+255),b
  3980                           
  3981                           ;can_interface.c: 26:  tx2.frame.dlc = 0x01;
  3982  001A32  0E01               	movlw	1
  3983  001A34  6FAB               	movwf	(_tx2+5)& (0+255),b
  3984  001A36                     
  3985                           ; BSR set to: 0
  3986                           ;can_interface.c: 27:  tx2.frame.data0 = number;
  3987  001A36  C052  F0AC         	movff	canLeftSignal@number,_tx2+6
  3988  001A3A                     
  3989                           ; BSR set to: 0
  3990                           ;can_interface.c: 28:  CAN_transmit(&tx2);
  3991  001A3A  0EA6               	movlw	low _tx2
  3992  001A3C  6E4C               	movwf	CAN_transmit@tempCanMsg^0,c
  3993  001A3E  0E00               	movlw	high _tx2
  3994  001A40  6E4D               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
  3995  001A42  EC03  F003         	call	_CAN_transmit	;wreg free
  3996  001A46  0012               	return		;funcret
  3997  001A48                     __end_of_canLeftSignal:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _canHazardSignal *****************
  4001 ;; Defined at:
  4002 ;;		line 31 in file "can_interface.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  number          2   26[COMRAM] int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;Total ram usage:        2 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 5
  4023 ;; This function calls:
  4024 ;;		_CAN_transmit
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text18
  4031  001A48                     __ptext18:
  4032                           	callstack 0
  4033  001A48                     _canHazardSignal:
  4034                           	callstack 25
  4035  001A48                     
  4036                           ;can_interface.c: 32:  tx3.frame.idType = 1;
  4037  001A48  0E01               	movlw	1
  4038  001A4A  0100               	movlb	0	; () banked
  4039  001A4C  6F98               	movwf	_tx3& (0+255),b
  4040                           
  4041                           ;can_interface.c: 33:  tx3.frame.id = 0x61;
  4042  001A4E  0E61               	movlw	97
  4043  001A50  6F99               	movwf	(_tx3+1)& (0+255),b
  4044  001A52  0E00               	movlw	0
  4045  001A54  6F9A               	movwf	(_tx3+2)& (0+255),b
  4046  001A56  0E00               	movlw	0
  4047  001A58  6F9B               	movwf	(_tx3+3)& (0+255),b
  4048  001A5A  0E00               	movlw	0
  4049  001A5C  6F9C               	movwf	(_tx3+4)& (0+255),b
  4050                           
  4051                           ;can_interface.c: 34:  tx3.frame.dlc = 0x01;
  4052  001A5E  0E01               	movlw	1
  4053  001A60  6F9D               	movwf	(_tx3+5)& (0+255),b
  4054  001A62                     
  4055                           ; BSR set to: 0
  4056                           ;can_interface.c: 35:  tx3.frame.data0 = number;
  4057  001A62  C052  F09E         	movff	canHazardSignal@number,_tx3+6
  4058  001A66                     
  4059                           ; BSR set to: 0
  4060                           ;can_interface.c: 36:  CAN_transmit(&tx3);
  4061  001A66  0E98               	movlw	low _tx3
  4062  001A68  6E4C               	movwf	CAN_transmit@tempCanMsg^0,c
  4063  001A6A  0E00               	movlw	high _tx3
  4064  001A6C  6E4D               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
  4065  001A6E  EC03  F003         	call	_CAN_transmit	;wreg free
  4066  001A72  0012               	return		;funcret
  4067  001A74                     __end_of_canHazardSignal:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _CAN_transmit *****************
  4071 ;; Defined at:
  4072 ;;		line 246 in file "mcc_generated_files/ecan.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  tempCanMsg      2   20[COMRAM] PTR struct .
  4075 ;;		 -> tx7(14), tx6(14), tx5(14), tx4(14), 
  4076 ;;		 -> tx3(14), tx2(14), tx1(14), 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  tempSIDL        1   25[COMRAM] unsigned char 
  4079 ;;  tempSIDH        1   24[COMRAM] unsigned char 
  4080 ;;  tempEIDL        1   23[COMRAM] unsigned char 
  4081 ;;  tempEIDH        1   22[COMRAM] unsigned char 
  4082 ;;  returnValue     1    0        unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      unsigned char 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4093 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4095 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;Total ram usage:        6 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 4
  4099 ;; This function calls:
  4100 ;;		_convertCANid2Reg
  4101 ;; This function is called by:
  4102 ;;		_canRightSignal
  4103 ;;		_canLeftSignal
  4104 ;;		_canHazardSignal
  4105 ;;		_canFrontSignal
  4106 ;;		_canBackSignal
  4107 ;;		_requestSpeed
  4108 ;;		_func99
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text19
  4113  000606                     __ptext19:
  4114                           	callstack 0
  4115  000606                     _CAN_transmit:
  4116                           	callstack 25
  4117  000606                     
  4118                           ;mcc_generated_files/ecan.c: 246: uint8_t CAN_transmit(uCAN_MSG *tempCanMsg);mcc_generat
      +                          ed_files/ecan.c: 247: {;mcc_generated_files/ecan.c: 248:     uint8_t tempEIDH = 0;
  4119  000606  0E00               	movlw	0
  4120  000608  6E4E               	movwf	CAN_transmit@tempEIDH^0,c
  4121                           
  4122                           ;mcc_generated_files/ecan.c: 249:     uint8_t tempEIDL = 0;
  4123  00060A  0E00               	movlw	0
  4124  00060C  6E4F               	movwf	CAN_transmit@tempEIDL^0,c
  4125                           
  4126                           ;mcc_generated_files/ecan.c: 250:     uint8_t tempSIDH = 0;
  4127  00060E  0E00               	movlw	0
  4128  000610  6E50               	movwf	CAN_transmit@tempSIDH^0,c
  4129                           
  4130                           ;mcc_generated_files/ecan.c: 251:     uint8_t tempSIDL = 0;
  4131  000612  0E00               	movlw	0
  4132  000614  6E51               	movwf	CAN_transmit@tempSIDL^0,c
  4133  000616                     
  4134                           ;mcc_generated_files/ecan.c: 254:     if (TXB0CONbits.TXREQ != 1)
  4135  000616  010F               	movlb	15	; () banked
  4136  000618  B720               	btfsc	32,3,b	;volatile
  4137  00061A  EF11  F003         	goto	u1261
  4138  00061E  EF13  F003         	goto	u1260
  4139  000622                     u1261:
  4140  000622  EF8D  F003         	goto	l511
  4141  000626                     u1260:
  4142  000626                     
  4143                           ; BSR set to: 15
  4144                           ;mcc_generated_files/ecan.c: 255:     {;mcc_generated_files/ecan.c: 256:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  4145  000626  EE20 F001          	lfsr	2,1
  4146  00062A  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4147  00062C  26D9               	addwf	fsr2l,f,c
  4148  00062E  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4149  000630  22DA               	addwfc	fsr2h,f,c
  4150  000632  CFDE F03A          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4151  000636  CFDE F03B          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4152  00063A  CFDE F03C          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4153  00063E  CFDE F03D          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4154  000642  C04C  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4155  000646  C04D  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4156  00064A  50DF               	movf	indf2,w,c
  4157  00064C  6E3E               	movwf	convertCANid2Reg@canIdType^0,c
  4158  00064E  0E4E               	movlw	low CAN_transmit@tempEIDH
  4159  000650  6E3F               	movwf	convertCANid2Reg@passedInEIDH^0,c
  4160  000652  0E00               	movlw	high CAN_transmit@tempEIDH
  4161  000654  6E40               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
  4162  000656  0E4F               	movlw	low CAN_transmit@tempEIDL
  4163  000658  6E41               	movwf	convertCANid2Reg@passedInEIDL^0,c
  4164  00065A  0E00               	movlw	high CAN_transmit@tempEIDL
  4165  00065C  6E42               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
  4166  00065E  0E50               	movlw	low CAN_transmit@tempSIDH
  4167  000660  6E43               	movwf	convertCANid2Reg@passedInSIDH^0,c
  4168  000662  0E00               	movlw	high CAN_transmit@tempSIDH
  4169  000664  6E44               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
  4170  000666  0E51               	movlw	low CAN_transmit@tempSIDL
  4171  000668  6E45               	movwf	convertCANid2Reg@passedInSIDL^0,c
  4172  00066A  0E00               	movlw	high CAN_transmit@tempSIDL
  4173  00066C  6E46               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
  4174  00066E  EC8D  F006         	call	_convertCANid2Reg	;wreg free
  4175  000672                     
  4176                           ;mcc_generated_files/ecan.c: 258:         TXB0EIDH = tempEIDH;
  4177  000672  C04E  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  4178  000676                     
  4179                           ;mcc_generated_files/ecan.c: 259:         TXB0EIDL = tempEIDL;
  4180  000676  C04F  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  4181  00067A                     
  4182                           ;mcc_generated_files/ecan.c: 260:         TXB0SIDH = tempSIDH;
  4183  00067A  C050  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  4184  00067E                     
  4185                           ;mcc_generated_files/ecan.c: 261:         TXB0SIDL = tempSIDL;
  4186  00067E  C051  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  4187  000682                     
  4188                           ;mcc_generated_files/ecan.c: 262:         TXB0DLC = tempCanMsg->frame.dlc;
  4189  000682  EE20 F005          	lfsr	2,5
  4190  000686  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4191  000688  26D9               	addwf	fsr2l,f,c
  4192  00068A  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4193  00068C  22DA               	addwfc	fsr2h,f,c
  4194  00068E  50DF               	movf	indf2,w,c
  4195  000690  010F               	movlb	15	; () banked
  4196  000692  6F25               	movwf	37,b	;volatile
  4197  000694                     
  4198                           ; BSR set to: 15
  4199                           ;mcc_generated_files/ecan.c: 263:         TXB0D0 = tempCanMsg->frame.data0;
  4200  000694  EE20 F006          	lfsr	2,6
  4201  000698  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4202  00069A  26D9               	addwf	fsr2l,f,c
  4203  00069C  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4204  00069E  22DA               	addwfc	fsr2h,f,c
  4205  0006A0  50DF               	movf	indf2,w,c
  4206  0006A2  6F26               	movwf	38,b	;volatile
  4207  0006A4                     
  4208                           ; BSR set to: 15
  4209                           ;mcc_generated_files/ecan.c: 264:         TXB0D1 = tempCanMsg->frame.data1;
  4210  0006A4  EE20 F007          	lfsr	2,7
  4211  0006A8  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4212  0006AA  26D9               	addwf	fsr2l,f,c
  4213  0006AC  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4214  0006AE  22DA               	addwfc	fsr2h,f,c
  4215  0006B0  50DF               	movf	indf2,w,c
  4216  0006B2  6F27               	movwf	39,b	;volatile
  4217  0006B4                     
  4218                           ; BSR set to: 15
  4219                           ;mcc_generated_files/ecan.c: 265:         TXB0D2 = tempCanMsg->frame.data2;
  4220  0006B4  EE20 F008          	lfsr	2,8
  4221  0006B8  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4222  0006BA  26D9               	addwf	fsr2l,f,c
  4223  0006BC  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4224  0006BE  22DA               	addwfc	fsr2h,f,c
  4225  0006C0  50DF               	movf	indf2,w,c
  4226  0006C2  6F28               	movwf	40,b	;volatile
  4227  0006C4                     
  4228                           ; BSR set to: 15
  4229                           ;mcc_generated_files/ecan.c: 266:         TXB0D3 = tempCanMsg->frame.data3;
  4230  0006C4  EE20 F009          	lfsr	2,9
  4231  0006C8  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4232  0006CA  26D9               	addwf	fsr2l,f,c
  4233  0006CC  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4234  0006CE  22DA               	addwfc	fsr2h,f,c
  4235  0006D0  50DF               	movf	indf2,w,c
  4236  0006D2  6F29               	movwf	41,b	;volatile
  4237  0006D4                     
  4238                           ; BSR set to: 15
  4239                           ;mcc_generated_files/ecan.c: 267:         TXB0D4 = tempCanMsg->frame.data4;
  4240  0006D4  EE20 F00A          	lfsr	2,10
  4241  0006D8  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4242  0006DA  26D9               	addwf	fsr2l,f,c
  4243  0006DC  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4244  0006DE  22DA               	addwfc	fsr2h,f,c
  4245  0006E0  50DF               	movf	indf2,w,c
  4246  0006E2  6F2A               	movwf	42,b	;volatile
  4247  0006E4                     
  4248                           ; BSR set to: 15
  4249                           ;mcc_generated_files/ecan.c: 268:         TXB0D5 = tempCanMsg->frame.data5;
  4250  0006E4  EE20 F00B          	lfsr	2,11
  4251  0006E8  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4252  0006EA  26D9               	addwf	fsr2l,f,c
  4253  0006EC  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4254  0006EE  22DA               	addwfc	fsr2h,f,c
  4255  0006F0  50DF               	movf	indf2,w,c
  4256  0006F2  6F2B               	movwf	43,b	;volatile
  4257  0006F4                     
  4258                           ; BSR set to: 15
  4259                           ;mcc_generated_files/ecan.c: 269:         TXB0D6 = tempCanMsg->frame.data6;
  4260  0006F4  EE20 F00C          	lfsr	2,12
  4261  0006F8  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4262  0006FA  26D9               	addwf	fsr2l,f,c
  4263  0006FC  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4264  0006FE  22DA               	addwfc	fsr2h,f,c
  4265  000700  50DF               	movf	indf2,w,c
  4266  000702  6F2C               	movwf	44,b	;volatile
  4267  000704                     
  4268                           ; BSR set to: 15
  4269                           ;mcc_generated_files/ecan.c: 270:         TXB0D7 = tempCanMsg->frame.data7;
  4270  000704  EE20 F00D          	lfsr	2,13
  4271  000708  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4272  00070A  26D9               	addwf	fsr2l,f,c
  4273  00070C  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4274  00070E  22DA               	addwfc	fsr2h,f,c
  4275  000710  50DF               	movf	indf2,w,c
  4276  000712  6F2D               	movwf	45,b	;volatile
  4277  000714                     
  4278                           ; BSR set to: 15
  4279                           ;mcc_generated_files/ecan.c: 272:         TXB0CONbits.TXREQ = 1;
  4280  000714  8720               	bsf	32,3,b	;volatile
  4281  000716                     l4026:
  4282                           
  4283                           ; BSR set to: 15
  4284                           ;mcc_generated_files/ecan.c: 275:     }
  4285  000716  EF8F  F004         	goto	l516
  4286  00071A                     l511:
  4287                           
  4288                           ; BSR set to: 15
  4289  00071A  B710               	btfsc	16,3,b	;volatile
  4290  00071C  EF92  F003         	goto	u1271
  4291  000720  EF94  F003         	goto	u1270
  4292  000724                     u1271:
  4293  000724  EF0E  F004         	goto	l513
  4294  000728                     u1270:
  4295  000728                     
  4296                           ; BSR set to: 15
  4297                           ;mcc_generated_files/ecan.c: 277:     {;mcc_generated_files/ecan.c: 279:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  4298  000728  EE20 F001          	lfsr	2,1
  4299  00072C  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4300  00072E  26D9               	addwf	fsr2l,f,c
  4301  000730  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4302  000732  22DA               	addwfc	fsr2h,f,c
  4303  000734  CFDE F03A          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4304  000738  CFDE F03B          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4305  00073C  CFDE F03C          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4306  000740  CFDE F03D          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4307  000744  C04C  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4308  000748  C04D  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4309  00074C  50DF               	movf	indf2,w,c
  4310  00074E  6E3E               	movwf	convertCANid2Reg@canIdType^0,c
  4311  000750  0E4E               	movlw	low CAN_transmit@tempEIDH
  4312  000752  6E3F               	movwf	convertCANid2Reg@passedInEIDH^0,c
  4313  000754  0E00               	movlw	high CAN_transmit@tempEIDH
  4314  000756  6E40               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
  4315  000758  0E4F               	movlw	low CAN_transmit@tempEIDL
  4316  00075A  6E41               	movwf	convertCANid2Reg@passedInEIDL^0,c
  4317  00075C  0E00               	movlw	high CAN_transmit@tempEIDL
  4318  00075E  6E42               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
  4319  000760  0E50               	movlw	low CAN_transmit@tempSIDH
  4320  000762  6E43               	movwf	convertCANid2Reg@passedInSIDH^0,c
  4321  000764  0E00               	movlw	high CAN_transmit@tempSIDH
  4322  000766  6E44               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
  4323  000768  0E51               	movlw	low CAN_transmit@tempSIDL
  4324  00076A  6E45               	movwf	convertCANid2Reg@passedInSIDL^0,c
  4325  00076C  0E00               	movlw	high CAN_transmit@tempSIDL
  4326  00076E  6E46               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
  4327  000770  EC8D  F006         	call	_convertCANid2Reg	;wreg free
  4328  000774                     
  4329                           ;mcc_generated_files/ecan.c: 281:         TXB1EIDH = tempEIDH;
  4330  000774  C04E  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  4331  000778                     
  4332                           ;mcc_generated_files/ecan.c: 282:         TXB1EIDL = tempEIDL;
  4333  000778  C04F  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  4334  00077C                     
  4335                           ;mcc_generated_files/ecan.c: 283:         TXB1SIDH = tempSIDH;
  4336  00077C  C050  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  4337  000780                     
  4338                           ;mcc_generated_files/ecan.c: 284:         TXB1SIDL = tempSIDL;
  4339  000780  C051  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  4340  000784                     
  4341                           ;mcc_generated_files/ecan.c: 285:         TXB1DLC = tempCanMsg->frame.dlc;
  4342  000784  EE20 F005          	lfsr	2,5
  4343  000788  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4344  00078A  26D9               	addwf	fsr2l,f,c
  4345  00078C  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4346  00078E  22DA               	addwfc	fsr2h,f,c
  4347  000790  50DF               	movf	indf2,w,c
  4348  000792  010F               	movlb	15	; () banked
  4349  000794  6F15               	movwf	21,b	;volatile
  4350  000796                     
  4351                           ; BSR set to: 15
  4352                           ;mcc_generated_files/ecan.c: 286:         TXB1D0 = tempCanMsg->frame.data0;
  4353  000796  EE20 F006          	lfsr	2,6
  4354  00079A  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4355  00079C  26D9               	addwf	fsr2l,f,c
  4356  00079E  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4357  0007A0  22DA               	addwfc	fsr2h,f,c
  4358  0007A2  50DF               	movf	indf2,w,c
  4359  0007A4  6F16               	movwf	22,b	;volatile
  4360  0007A6                     
  4361                           ; BSR set to: 15
  4362                           ;mcc_generated_files/ecan.c: 287:         TXB1D1 = tempCanMsg->frame.data1;
  4363  0007A6  EE20 F007          	lfsr	2,7
  4364  0007AA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4365  0007AC  26D9               	addwf	fsr2l,f,c
  4366  0007AE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4367  0007B0  22DA               	addwfc	fsr2h,f,c
  4368  0007B2  50DF               	movf	indf2,w,c
  4369  0007B4  6F17               	movwf	23,b	;volatile
  4370  0007B6                     
  4371                           ; BSR set to: 15
  4372                           ;mcc_generated_files/ecan.c: 288:         TXB1D2 = tempCanMsg->frame.data2;
  4373  0007B6  EE20 F008          	lfsr	2,8
  4374  0007BA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4375  0007BC  26D9               	addwf	fsr2l,f,c
  4376  0007BE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4377  0007C0  22DA               	addwfc	fsr2h,f,c
  4378  0007C2  50DF               	movf	indf2,w,c
  4379  0007C4  6F18               	movwf	24,b	;volatile
  4380  0007C6                     
  4381                           ; BSR set to: 15
  4382                           ;mcc_generated_files/ecan.c: 289:         TXB1D3 = tempCanMsg->frame.data3;
  4383  0007C6  EE20 F009          	lfsr	2,9
  4384  0007CA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4385  0007CC  26D9               	addwf	fsr2l,f,c
  4386  0007CE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4387  0007D0  22DA               	addwfc	fsr2h,f,c
  4388  0007D2  50DF               	movf	indf2,w,c
  4389  0007D4  6F19               	movwf	25,b	;volatile
  4390  0007D6                     
  4391                           ; BSR set to: 15
  4392                           ;mcc_generated_files/ecan.c: 290:         TXB1D4 = tempCanMsg->frame.data4;
  4393  0007D6  EE20 F00A          	lfsr	2,10
  4394  0007DA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4395  0007DC  26D9               	addwf	fsr2l,f,c
  4396  0007DE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4397  0007E0  22DA               	addwfc	fsr2h,f,c
  4398  0007E2  50DF               	movf	indf2,w,c
  4399  0007E4  6F1A               	movwf	26,b	;volatile
  4400  0007E6                     
  4401                           ; BSR set to: 15
  4402                           ;mcc_generated_files/ecan.c: 291:         TXB1D5 = tempCanMsg->frame.data5;
  4403  0007E6  EE20 F00B          	lfsr	2,11
  4404  0007EA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4405  0007EC  26D9               	addwf	fsr2l,f,c
  4406  0007EE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4407  0007F0  22DA               	addwfc	fsr2h,f,c
  4408  0007F2  50DF               	movf	indf2,w,c
  4409  0007F4  6F1B               	movwf	27,b	;volatile
  4410  0007F6                     
  4411                           ; BSR set to: 15
  4412                           ;mcc_generated_files/ecan.c: 292:         TXB1D6 = tempCanMsg->frame.data6;
  4413  0007F6  EE20 F00C          	lfsr	2,12
  4414  0007FA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4415  0007FC  26D9               	addwf	fsr2l,f,c
  4416  0007FE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4417  000800  22DA               	addwfc	fsr2h,f,c
  4418  000802  50DF               	movf	indf2,w,c
  4419  000804  6F1C               	movwf	28,b	;volatile
  4420  000806                     
  4421                           ; BSR set to: 15
  4422                           ;mcc_generated_files/ecan.c: 293:         TXB1D7 = tempCanMsg->frame.data7;
  4423  000806  EE20 F00D          	lfsr	2,13
  4424  00080A  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4425  00080C  26D9               	addwf	fsr2l,f,c
  4426  00080E  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4427  000810  22DA               	addwfc	fsr2h,f,c
  4428  000812  50DF               	movf	indf2,w,c
  4429  000814  6F1D               	movwf	29,b	;volatile
  4430  000816                     
  4431                           ; BSR set to: 15
  4432                           ;mcc_generated_files/ecan.c: 295:         TXB1CONbits.TXREQ = 1;
  4433  000816  8710               	bsf	16,3,b	;volatile
  4434  000818  EF8B  F003         	goto	l4026
  4435  00081C                     l513:
  4436                           
  4437                           ; BSR set to: 15
  4438  00081C  B700               	btfsc	0,3,b	;volatile
  4439  00081E  EF13  F004         	goto	u1281
  4440  000822  EF15  F004         	goto	u1280
  4441  000826                     u1281:
  4442  000826  EF8F  F004         	goto	l512
  4443  00082A                     u1280:
  4444  00082A                     
  4445                           ; BSR set to: 15
  4446                           ;mcc_generated_files/ecan.c: 299:     {;mcc_generated_files/ecan.c: 301:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  4447  00082A  EE20 F001          	lfsr	2,1
  4448  00082E  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4449  000830  26D9               	addwf	fsr2l,f,c
  4450  000832  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4451  000834  22DA               	addwfc	fsr2h,f,c
  4452  000836  CFDE F03A          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4453  00083A  CFDE F03B          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4454  00083E  CFDE F03C          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4455  000842  CFDE F03D          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4456  000846  C04C  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4457  00084A  C04D  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4458  00084E  50DF               	movf	indf2,w,c
  4459  000850  6E3E               	movwf	convertCANid2Reg@canIdType^0,c
  4460  000852  0E4E               	movlw	low CAN_transmit@tempEIDH
  4461  000854  6E3F               	movwf	convertCANid2Reg@passedInEIDH^0,c
  4462  000856  0E00               	movlw	high CAN_transmit@tempEIDH
  4463  000858  6E40               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
  4464  00085A  0E4F               	movlw	low CAN_transmit@tempEIDL
  4465  00085C  6E41               	movwf	convertCANid2Reg@passedInEIDL^0,c
  4466  00085E  0E00               	movlw	high CAN_transmit@tempEIDL
  4467  000860  6E42               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
  4468  000862  0E50               	movlw	low CAN_transmit@tempSIDH
  4469  000864  6E43               	movwf	convertCANid2Reg@passedInSIDH^0,c
  4470  000866  0E00               	movlw	high CAN_transmit@tempSIDH
  4471  000868  6E44               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
  4472  00086A  0E51               	movlw	low CAN_transmit@tempSIDL
  4473  00086C  6E45               	movwf	convertCANid2Reg@passedInSIDL^0,c
  4474  00086E  0E00               	movlw	high CAN_transmit@tempSIDL
  4475  000870  6E46               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
  4476  000872  EC8D  F006         	call	_convertCANid2Reg	;wreg free
  4477  000876                     
  4478                           ;mcc_generated_files/ecan.c: 303:         TXB2EIDH = tempEIDH;
  4479  000876  C04E  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  4480  00087A                     
  4481                           ;mcc_generated_files/ecan.c: 304:         TXB2EIDL = tempEIDL;
  4482  00087A  C04F  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  4483  00087E                     
  4484                           ;mcc_generated_files/ecan.c: 305:         TXB2SIDH = tempSIDH;
  4485  00087E  C050  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  4486  000882                     
  4487                           ;mcc_generated_files/ecan.c: 306:         TXB2SIDL = tempSIDL;
  4488  000882  C051  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  4489  000886                     
  4490                           ;mcc_generated_files/ecan.c: 307:         TXB2DLC = tempCanMsg->frame.dlc;
  4491  000886  EE20 F005          	lfsr	2,5
  4492  00088A  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4493  00088C  26D9               	addwf	fsr2l,f,c
  4494  00088E  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4495  000890  22DA               	addwfc	fsr2h,f,c
  4496  000892  50DF               	movf	indf2,w,c
  4497  000894  010F               	movlb	15	; () banked
  4498  000896  6F05               	movwf	5,b	;volatile
  4499  000898                     
  4500                           ; BSR set to: 15
  4501                           ;mcc_generated_files/ecan.c: 308:         TXB2D0 = tempCanMsg->frame.data0;
  4502  000898  EE20 F006          	lfsr	2,6
  4503  00089C  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4504  00089E  26D9               	addwf	fsr2l,f,c
  4505  0008A0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4506  0008A2  22DA               	addwfc	fsr2h,f,c
  4507  0008A4  50DF               	movf	indf2,w,c
  4508  0008A6  6F06               	movwf	6,b	;volatile
  4509  0008A8                     
  4510                           ; BSR set to: 15
  4511                           ;mcc_generated_files/ecan.c: 309:         TXB2D1 = tempCanMsg->frame.data1;
  4512  0008A8  EE20 F007          	lfsr	2,7
  4513  0008AC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4514  0008AE  26D9               	addwf	fsr2l,f,c
  4515  0008B0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4516  0008B2  22DA               	addwfc	fsr2h,f,c
  4517  0008B4  50DF               	movf	indf2,w,c
  4518  0008B6  6F07               	movwf	7,b	;volatile
  4519  0008B8                     
  4520                           ; BSR set to: 15
  4521                           ;mcc_generated_files/ecan.c: 310:         TXB2D2 = tempCanMsg->frame.data2;
  4522  0008B8  EE20 F008          	lfsr	2,8
  4523  0008BC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4524  0008BE  26D9               	addwf	fsr2l,f,c
  4525  0008C0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4526  0008C2  22DA               	addwfc	fsr2h,f,c
  4527  0008C4  50DF               	movf	indf2,w,c
  4528  0008C6  6F08               	movwf	8,b	;volatile
  4529  0008C8                     
  4530                           ; BSR set to: 15
  4531                           ;mcc_generated_files/ecan.c: 311:         TXB2D3 = tempCanMsg->frame.data3;
  4532  0008C8  EE20 F009          	lfsr	2,9
  4533  0008CC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4534  0008CE  26D9               	addwf	fsr2l,f,c
  4535  0008D0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4536  0008D2  22DA               	addwfc	fsr2h,f,c
  4537  0008D4  50DF               	movf	indf2,w,c
  4538  0008D6  6F09               	movwf	9,b	;volatile
  4539  0008D8                     
  4540                           ; BSR set to: 15
  4541                           ;mcc_generated_files/ecan.c: 312:         TXB2D4 = tempCanMsg->frame.data4;
  4542  0008D8  EE20 F00A          	lfsr	2,10
  4543  0008DC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4544  0008DE  26D9               	addwf	fsr2l,f,c
  4545  0008E0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4546  0008E2  22DA               	addwfc	fsr2h,f,c
  4547  0008E4  50DF               	movf	indf2,w,c
  4548  0008E6  6F0A               	movwf	10,b	;volatile
  4549  0008E8                     
  4550                           ; BSR set to: 15
  4551                           ;mcc_generated_files/ecan.c: 313:         TXB2D5 = tempCanMsg->frame.data5;
  4552  0008E8  EE20 F00B          	lfsr	2,11
  4553  0008EC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4554  0008EE  26D9               	addwf	fsr2l,f,c
  4555  0008F0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4556  0008F2  22DA               	addwfc	fsr2h,f,c
  4557  0008F4  50DF               	movf	indf2,w,c
  4558  0008F6  6F0B               	movwf	11,b	;volatile
  4559  0008F8                     
  4560                           ; BSR set to: 15
  4561                           ;mcc_generated_files/ecan.c: 314:         TXB2D6 = tempCanMsg->frame.data6;
  4562  0008F8  EE20 F00C          	lfsr	2,12
  4563  0008FC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4564  0008FE  26D9               	addwf	fsr2l,f,c
  4565  000900  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4566  000902  22DA               	addwfc	fsr2h,f,c
  4567  000904  50DF               	movf	indf2,w,c
  4568  000906  6F0C               	movwf	12,b	;volatile
  4569  000908                     
  4570                           ; BSR set to: 15
  4571                           ;mcc_generated_files/ecan.c: 315:         TXB2D7 = tempCanMsg->frame.data7;
  4572  000908  EE20 F00D          	lfsr	2,13
  4573  00090C  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4574  00090E  26D9               	addwf	fsr2l,f,c
  4575  000910  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4576  000912  22DA               	addwfc	fsr2h,f,c
  4577  000914  50DF               	movf	indf2,w,c
  4578  000916  6F0D               	movwf	13,b	;volatile
  4579  000918                     
  4580                           ; BSR set to: 15
  4581                           ;mcc_generated_files/ecan.c: 317:         TXB2CONbits.TXREQ = 1;
  4582  000918  8700               	bsf	0,3,b	;volatile
  4583  00091A  EF8B  F003         	goto	l4026
  4584  00091E                     l512:
  4585  00091E                     l516:
  4586                           
  4587                           ; BSR set to: 15
  4588  00091E  0012               	return		;funcret
  4589  000920                     __end_of_CAN_transmit:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _convertCANid2Reg *****************
  4593 ;; Defined at:
  4594 ;;		line 473 in file "mcc_generated_files/ecan.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  tempPassedIn    4    2[COMRAM] unsigned long 
  4597 ;;  canIdType       1    6[COMRAM] unsigned char 
  4598 ;;  passedInEIDH    2    7[COMRAM] PTR unsigned char 
  4599 ;;		 -> CAN_transmit@tempEIDH(1), 
  4600 ;;  passedInEIDL    2    9[COMRAM] PTR unsigned char 
  4601 ;;		 -> CAN_transmit@tempEIDL(1), 
  4602 ;;  passedInSIDH    2   11[COMRAM] PTR unsigned char 
  4603 ;;		 -> CAN_transmit@tempSIDH(1), 
  4604 ;;  passedInSIDL    2   13[COMRAM] PTR unsigned char 
  4605 ;;		 -> CAN_transmit@tempSIDL(1), 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  wipSIDL         1   19[COMRAM] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4617 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4619 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4620 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4621 ;;Total ram usage:       18 bytes
  4622 ;; Hardware stack levels used: 1
  4623 ;; Hardware stack levels required when called: 3
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_CAN_transmit
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text20
  4632  000D1A                     __ptext20:
  4633                           	callstack 0
  4634  000D1A                     _convertCANid2Reg:
  4635                           	callstack 25
  4636  000D1A                     
  4637                           ;mcc_generated_files/ecan.c: 476:     if (canIdType == 2) {
  4638  000D1A  0E02               	movlw	2
  4639  000D1C  183E               	xorwf	convertCANid2Reg@canIdType^0,w,c
  4640  000D1E  A4D8               	btfss	status,2,c
  4641  000D20  EF94  F006         	goto	u1211
  4642  000D24  EF96  F006         	goto	u1210
  4643  000D28                     u1211:
  4644  000D28  EF19  F007         	goto	l3932
  4645  000D2C                     u1210:
  4646  000D2C                     
  4647                           ;mcc_generated_files/ecan.c: 479:         *passedInEIDL = 0xFF & tempPassedInID;
  4648  000D2C  C041  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  4649  000D30  C042  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  4650  000D34  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4651  000D38                     
  4652                           ;mcc_generated_files/ecan.c: 480:         tempPassedInID = tempPassedInID >> 8;
  4653  000D38  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4654  000D3C  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4655  000D40  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4656  000D44  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4657  000D48  C048  F047         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4658  000D4C  C049  F048         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4659  000D50  C04A  F049         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4660  000D54  6A4A               	clrf	(??_convertCANid2Reg+3)^0,c
  4661  000D56  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4662  000D5A  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4663  000D5E  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4664  000D62  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4665  000D66                     
  4666                           ;mcc_generated_files/ecan.c: 483:         *passedInEIDH = 0xFF & tempPassedInID;
  4667  000D66  C03F  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  4668  000D6A  C040  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  4669  000D6E  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4670                           
  4671                           ;mcc_generated_files/ecan.c: 484:         tempPassedInID = tempPassedInID >> 8;
  4672  000D72  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4673  000D76  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4674  000D7A  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4675  000D7E  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4676  000D82  C048  F047         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4677  000D86  C049  F048         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4678  000D8A  C04A  F049         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4679  000D8E  6A4A               	clrf	(??_convertCANid2Reg+3)^0,c
  4680  000D90  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4681  000D94  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4682  000D98  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4683  000D9C  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4684  000DA0                     
  4685                           ;mcc_generated_files/ecan.c: 488:         wipSIDL = 0x03 & tempPassedInID;
  4686  000DA0  503A               	movf	convertCANid2Reg@tempPassedInID^0,w,c
  4687  000DA2  0B03               	andlw	3
  4688  000DA4  6E4B               	movwf	convertCANid2Reg@wipSIDL^0,c
  4689  000DA6                     
  4690                           ;mcc_generated_files/ecan.c: 489:         tempPassedInID = tempPassedInID << 3;
  4691  000DA6  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4692  000DAA  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4693  000DAE  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4694  000DB2  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4695  000DB6  0E03               	movlw	3
  4696  000DB8                     u1225:
  4697  000DB8  90D8               	bcf	status,0,c
  4698  000DBA  3647               	rlcf	??_convertCANid2Reg^0,f,c
  4699  000DBC  3648               	rlcf	(??_convertCANid2Reg+1)^0,f,c
  4700  000DBE  3649               	rlcf	(??_convertCANid2Reg+2)^0,f,c
  4701  000DC0  364A               	rlcf	(??_convertCANid2Reg+3)^0,f,c
  4702  000DC2  2EE8               	decfsz	wreg,f,c
  4703  000DC4  EFDC  F006         	goto	u1225
  4704  000DC8  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4705  000DCC  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4706  000DD0  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4707  000DD4  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4708  000DD8                     
  4709                           ;mcc_generated_files/ecan.c: 490:         wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  4710  000DD8  503A               	movf	convertCANid2Reg@tempPassedInID^0,w,c
  4711  000DDA  0BE0               	andlw	224
  4712  000DDC  244B               	addwf	convertCANid2Reg@wipSIDL^0,w,c
  4713  000DDE  6E4B               	movwf	convertCANid2Reg@wipSIDL^0,c
  4714  000DE0                     
  4715                           ;mcc_generated_files/ecan.c: 491:         wipSIDL = (uint8_t)(wipSIDL + 0x08);
  4716  000DE0  504B               	movf	convertCANid2Reg@wipSIDL^0,w,c
  4717  000DE2  0F08               	addlw	8
  4718  000DE4  6E4B               	movwf	convertCANid2Reg@wipSIDL^0,c
  4719  000DE6                     
  4720                           ;mcc_generated_files/ecan.c: 492:         *passedInSIDL = (uint8_t)(0xEB & wipSIDL);
  4721  000DE6  504B               	movf	convertCANid2Reg@wipSIDL^0,w,c
  4722  000DE8  0BEB               	andlw	235
  4723  000DEA  C045  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  4724  000DEE  C046  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  4725  000DF2  6EDF               	movwf	indf2,c
  4726  000DF4                     l3928:
  4727                           
  4728                           ;mcc_generated_files/ecan.c: 495:         tempPassedInID = tempPassedInID >> 8;
  4729  000DF4  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4730  000DF8  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4731  000DFC  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4732  000E00  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4733  000E04  C048  F047         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4734  000E08  C049  F048         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4735  000E0C  C04A  F049         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4736  000E10  6A4A               	clrf	(??_convertCANid2Reg+3)^0,c
  4737  000E12  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4738  000E16  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4739  000E1A  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4740  000E1E  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4741  000E22                     
  4742                           ;mcc_generated_files/ecan.c: 496:         *passedInSIDH = 0xFF & tempPassedInID;
  4743  000E22  C043  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  4744  000E26  C044  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  4745  000E2A  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4746                           
  4747                           ;mcc_generated_files/ecan.c: 497:     } else
  4748  000E2E  EF46  F007         	goto	l554
  4749  000E32                     l3932:
  4750                           
  4751                           ;mcc_generated_files/ecan.c: 498:     {;mcc_generated_files/ecan.c: 499:         *passed
      +                          InEIDH = 0;
  4752  000E32  C03F  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  4753  000E36  C040  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  4754  000E3A  0E00               	movlw	0
  4755  000E3C  6EDF               	movwf	indf2,c
  4756                           
  4757                           ;mcc_generated_files/ecan.c: 500:         *passedInEIDL = 0;
  4758  000E3E  C041  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  4759  000E42  C042  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  4760  000E46  0E00               	movlw	0
  4761  000E48  6EDF               	movwf	indf2,c
  4762  000E4A                     
  4763                           ;mcc_generated_files/ecan.c: 501:         tempPassedInID = tempPassedInID << 5;
  4764  000E4A  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4765  000E4E  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4766  000E52  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4767  000E56  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4768  000E5A  0E05               	movlw	5
  4769  000E5C                     u1235:
  4770  000E5C  90D8               	bcf	status,0,c
  4771  000E5E  3647               	rlcf	??_convertCANid2Reg^0,f,c
  4772  000E60  3648               	rlcf	(??_convertCANid2Reg+1)^0,f,c
  4773  000E62  3649               	rlcf	(??_convertCANid2Reg+2)^0,f,c
  4774  000E64  364A               	rlcf	(??_convertCANid2Reg+3)^0,f,c
  4775  000E66  2EE8               	decfsz	wreg,f,c
  4776  000E68  EF2E  F007         	goto	u1235
  4777  000E6C  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4778  000E70  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4779  000E74  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4780  000E78  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4781  000E7C                     
  4782                           ;mcc_generated_files/ecan.c: 502:         *passedInSIDL = 0xFF & tempPassedInID;
  4783  000E7C  C045  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  4784  000E80  C046  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  4785  000E84  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4786  000E88  EFFA  F006         	goto	l3928
  4787  000E8C                     l554:
  4788  000E8C  0012               	return		;funcret
  4789  000E8E                     __end_of_convertCANid2Reg:
  4790                           	callstack 0
  4791                           
  4792 ;; *************** function _SYSTEM_Initialize *****************
  4793 ;; Defined at:
  4794 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;		None
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg, status,2, status,0, cstack
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4812 ;;Total ram usage:        0 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 5
  4815 ;; This function calls:
  4816 ;;		_ECAN_Initialize
  4817 ;;		_EUSART1_Initialize
  4818 ;;		_INTERRUPT_Initialize
  4819 ;;		_OSCILLATOR_Initialize
  4820 ;;		_PIN_MANAGER_Initialize
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text21
  4827  001ACE                     __ptext21:
  4828                           	callstack 0
  4829  001ACE                     _SYSTEM_Initialize:
  4830                           	callstack 25
  4831  001ACE                     
  4832                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4833  001ACE  EC8F  F00D         	call	_INTERRUPT_Initialize	;wreg free
  4834  001AD2                     
  4835                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4836  001AD2  ECDC  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  4837  001AD6                     
  4838                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4839  001AD6  EC72  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  4840  001ADA                     
  4841                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  4842  001ADA  ECBD  F00C         	call	_EUSART1_Initialize	;wreg free
  4843  001ADE                     
  4844                           ;mcc_generated_files/mcc.c: 57:     ECAN_Initialize();
  4845  001ADE  ECBA  F005         	call	_ECAN_Initialize	;wreg free
  4846  001AE2  0012               	return		;funcret
  4847  001AE4                     __end_of_SYSTEM_Initialize:
  4848                           	callstack 0
  4849                           
  4850 ;; *************** function _PIN_MANAGER_Initialize *****************
  4851 ;; Defined at:
  4852 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 3
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_SYSTEM_Initialize
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text22
  4881  0019B8                     __ptext22:
  4882                           	callstack 0
  4883  0019B8                     _PIN_MANAGER_Initialize:
  4884                           	callstack 26
  4885  0019B8                     
  4886                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4887  0019B8  0E00               	movlw	0
  4888  0019BA  6E8D               	movwf	141,c	;volatile
  4889                           
  4890                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4891  0019BC  0E00               	movlw	0
  4892  0019BE  6E8C               	movwf	140,c	;volatile
  4893                           
  4894                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4895  0019C0  0E00               	movlw	0
  4896  0019C2  6E89               	movwf	137,c	;volatile
  4897                           
  4898                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4899  0019C4  0E00               	movlw	0
  4900  0019C6  6E8A               	movwf	138,c	;volatile
  4901                           
  4902                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4903  0019C8  0E00               	movlw	0
  4904  0019CA  6E8B               	movwf	139,c	;volatile
  4905                           
  4906                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  4907  0019CC  0E07               	movlw	7
  4908  0019CE  6E96               	movwf	150,c	;volatile
  4909                           
  4910                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xCF;
  4911  0019D0  0ECF               	movlw	207
  4912  0019D2  6E92               	movwf	146,c	;volatile
  4913                           
  4914                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFB;
  4915  0019D4  0EFB               	movlw	251
  4916  0019D6  6E93               	movwf	147,c	;volatile
  4917                           
  4918                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  4919  0019D8  0EBF               	movlw	191
  4920  0019DA  6E94               	movwf	148,c	;volatile
  4921  0019DC                     
  4922                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  4923  0019DC  6895               	setf	149,c	;volatile
  4924                           
  4925                           ;mcc_generated_files/pin_manager.c: 78:     ANCON0 = 0xF0;
  4926  0019DE  0EF0               	movlw	240
  4927  0019E0  010F               	movlb	15	; () banked
  4928  0019E2  6F5D               	movwf	93,b	;volatile
  4929                           
  4930                           ;mcc_generated_files/pin_manager.c: 79:     ANCON1 = 0x67;
  4931  0019E4  0E67               	movlw	103
  4932  0019E6  6F5C               	movwf	92,b	;volatile
  4933                           
  4934                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  4935  0019E8  0E00               	movlw	0
  4936  0019EA  6F5B               	movwf	91,b	;volatile
  4937  0019EC                     
  4938                           ; BSR set to: 15
  4939                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  4940  0019EC  8EF1               	bsf	241,7,c	;volatile
  4941  0019EE                     
  4942                           ; BSR set to: 15
  4943  0019EE  0012               	return		;funcret
  4944  0019F0                     __end_of_PIN_MANAGER_Initialize:
  4945                           	callstack 0
  4946                           
  4947 ;; *************** function _OSCILLATOR_Initialize *****************
  4948 ;; Defined at:
  4949 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used: 1
  4969 ;; Hardware stack levels required when called: 3
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_SYSTEM_Initialize
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text23
  4978  001AE4                     __ptext23:
  4979                           	callstack 0
  4980  001AE4                     _OSCILLATOR_Initialize:
  4981                           	callstack 26
  4982  001AE4                     
  4983                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  4984  001AE4  0E60               	movlw	96
  4985  001AE6  6ED3               	movwf	211,c	;volatile
  4986                           
  4987                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
  4988  001AE8  0E00               	movlw	0
  4989  001AEA  6ED2               	movwf	210,c	;volatile
  4990                           
  4991                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  4992  001AEC  0E00               	movlw	0
  4993  001AEE  6E9B               	movwf	155,c	;volatile
  4994                           
  4995                           ;mcc_generated_files/mcc.c: 69:     REFOCON = 0x00;
  4996  001AF0  0E00               	movlw	0
  4997  001AF2  6E9A               	movwf	154,c	;volatile
  4998  001AF4  0012               	return		;funcret
  4999  001AF6                     __end_of_OSCILLATOR_Initialize:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _INTERRUPT_Initialize *****************
  5003 ;; Defined at:
  5004 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		None
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5022 ;;Total ram usage:        0 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 3
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_SYSTEM_Initialize
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text24
  5033  001B1E                     __ptext24:
  5034                           	callstack 0
  5035  001B1E                     _INTERRUPT_Initialize:
  5036                           	callstack 26
  5037  001B1E                     
  5038                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5039  001B1E  9ED0               	bcf	208,7,c	;volatile
  5040  001B20  0012               	return		;funcret
  5041  001B22                     __end_of_INTERRUPT_Initialize:
  5042                           	callstack 0
  5043                           
  5044 ;; *************** function _EUSART1_Initialize *****************
  5045 ;; Defined at:
  5046 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;		None
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      void 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5064 ;;Total ram usage:        0 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; Hardware stack levels required when called: 4
  5067 ;; This function calls:
  5068 ;;		_EUSART1_SetErrorHandler
  5069 ;;		_EUSART1_SetFramingErrorHandler
  5070 ;;		_EUSART1_SetOverrunErrorHandler
  5071 ;; This function is called by:
  5072 ;;		_SYSTEM_Initialize
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text25
  5077  00197A                     __ptext25:
  5078                           	callstack 0
  5079  00197A                     _EUSART1_Initialize:
  5080                           	callstack 25
  5081  00197A                     
  5082                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5083  00197A  0E08               	movlw	8
  5084  00197C  6EA7               	movwf	167,c	;volatile
  5085                           
  5086                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x80;
  5087  00197E  0E80               	movlw	128
  5088  001980  6EAB               	movwf	171,c	;volatile
  5089                           
  5090                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5091  001982  0E24               	movlw	36
  5092  001984  6EAC               	movwf	172,c	;volatile
  5093                           
  5094                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x08;
  5095  001986  0E08               	movlw	8
  5096  001988  6EAF               	movwf	175,c	;volatile
  5097                           
  5098                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x02;
  5099  00198A  0E02               	movlw	2
  5100  00198C  6E7D               	movwf	125,c	;volatile
  5101  00198E                     
  5102                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5103  00198E  0E00               	movlw	0
  5104  001990  6E3A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5105  001992  0E00               	movlw	0
  5106  001994  6E3B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5107  001996  EC80  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5108  00199A                     
  5109                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5110  00199A  0E00               	movlw	0
  5111  00199C  6E3A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5112  00199E  0E00               	movlw	0
  5113  0019A0  6E3B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5114  0019A2  EC7B  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5115  0019A6                     
  5116                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5117  0019A6  0E00               	movlw	0
  5118  0019A8  6E3A               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5119  0019AA  0E00               	movlw	0
  5120  0019AC  6E3B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5121  0019AE  EC85  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  5122  0019B2                     
  5123                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5124  0019B2  0E00               	movlw	0
  5125  0019B4  6E1D               	movwf	_eusart1RxLastError^0,c	;volatile
  5126  0019B6  0012               	return		;funcret
  5127  0019B8                     __end_of_EUSART1_Initialize:
  5128                           	callstack 0
  5129                           
  5130 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5131 ;; Defined at:
  5132 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  5135 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5151 ;;Total ram usage:        2 bytes
  5152 ;; Hardware stack levels used: 1
  5153 ;; Hardware stack levels required when called: 3
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_EUSART1_Initialize
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text26
  5162  001AF6                     __ptext26:
  5163                           	callstack 0
  5164  001AF6                     _EUSART1_SetOverrunErrorHandler:
  5165                           	callstack 25
  5166  001AF6                     
  5167                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  5168  001AF6  C03A  F056         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5169  001AFA  C03B  F057         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5170  001AFE  0012               	return		;funcret
  5171  001B00                     __end_of_EUSART1_SetOverrunErrorHandler:
  5172                           	callstack 0
  5173                           
  5174 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5175 ;; Defined at:
  5176 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  5179 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;Total ram usage:        2 bytes
  5196 ;; Hardware stack levels used: 1
  5197 ;; Hardware stack levels required when called: 3
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_EUSART1_Initialize
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text27
  5206  001B00                     __ptext27:
  5207                           	callstack 0
  5208  001B00                     _EUSART1_SetFramingErrorHandler:
  5209                           	callstack 25
  5210  001B00                     
  5211                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  5212  001B00  C03A  F058         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5213  001B04  C03B  F059         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5214  001B08  0012               	return		;funcret
  5215  001B0A                     __end_of_EUSART1_SetFramingErrorHandler:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function _EUSART1_SetErrorHandler *****************
  5219 ;; Defined at:
  5220 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  5223 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5239 ;;Total ram usage:        2 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; Hardware stack levels required when called: 3
  5242 ;; This function calls:
  5243 ;;		Nothing
  5244 ;; This function is called by:
  5245 ;;		_EUSART1_Initialize
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text28
  5250  001B0A                     __ptext28:
  5251                           	callstack 0
  5252  001B0A                     _EUSART1_SetErrorHandler:
  5253                           	callstack 25
  5254  001B0A                     
  5255                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  5256  001B0A  C03A  F0C6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5257  001B0E  C03B  F0C7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5258  001B12  0012               	return		;funcret
  5259  001B14                     __end_of_EUSART1_SetErrorHandler:
  5260                           	callstack 0
  5261                           
  5262 ;; *************** function _ECAN_Initialize *****************
  5263 ;; Defined at:
  5264 ;;		line 65 in file "mcc_generated_files/ecan.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;		None
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      void 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5282 ;;Total ram usage:        1 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; Hardware stack levels required when called: 4
  5285 ;; This function calls:
  5286 ;;		_ECAN_SetWakeUpInterruptHandler
  5287 ;; This function is called by:
  5288 ;;		_SYSTEM_Initialize
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text29
  5293  000B74                     __ptext29:
  5294                           	callstack 0
  5295  000B74                     _ECAN_Initialize:
  5296                           	callstack 25
  5297  000B74                     
  5298                           ;mcc_generated_files/ecan.c: 67:     CANCON = 0x80;
  5299  000B74  0E80               	movlw	128
  5300  000B76  6E6F               	movwf	111,c	;volatile
  5301  000B78                     l3962:
  5302  000B78  506E               	movf	110,w,c	;volatile
  5303  000B7A  0BE0               	andlw	224
  5304  000B7C  0A80               	xorlw	128
  5305  000B7E  A4D8               	btfss	status,2,c
  5306  000B80  EFC4  F005         	goto	u1241
  5307  000B84  EFC6  F005         	goto	u1240
  5308  000B88                     u1241:
  5309  000B88  EFBC  F005         	goto	l3962
  5310  000B8C                     u1240:
  5311  000B8C                     
  5312                           ;mcc_generated_files/ecan.c: 73:     ECANCON = 0x40;
  5313  000B8C  0E40               	movlw	64
  5314  000B8E  6E72               	movwf	114,c	;volatile
  5315                           
  5316                           ;mcc_generated_files/ecan.c: 78:     CIOCON = 0x20;
  5317  000B90  0E20               	movlw	32
  5318  000B92  6E70               	movwf	112,c	;volatile
  5319                           
  5320                           ;mcc_generated_files/ecan.c: 102:     BSEL0 = 0x00;
  5321  000B94  0E00               	movlw	0
  5322  000B96  010E               	movlb	14	; () banked
  5323  000B98  6F7D               	movwf	125,b	;volatile
  5324  000B9A                     
  5325                           ; BSR set to: 14
  5326                           ;mcc_generated_files/ecan.c: 107:     RXM0EIDH = 0xFF;
  5327  000B9A  69FA               	setf	250,b	;volatile
  5328  000B9C                     
  5329                           ; BSR set to: 14
  5330                           ;mcc_generated_files/ecan.c: 108:     RXM0EIDL = 0xFF;
  5331  000B9C  69FB               	setf	251,b	;volatile
  5332                           
  5333                           ;mcc_generated_files/ecan.c: 109:     RXM0SIDH = 0x00;
  5334  000B9E  0E00               	movlw	0
  5335  000BA0  6FF8               	movwf	248,b	;volatile
  5336                           
  5337                           ;mcc_generated_files/ecan.c: 110:     RXM0SIDL = 0x03;
  5338  000BA2  0E03               	movlw	3
  5339  000BA4  6FF9               	movwf	249,b	;volatile
  5340  000BA6                     
  5341                           ; BSR set to: 14
  5342                           ;mcc_generated_files/ecan.c: 111:     RXM1EIDH = 0xFF;
  5343  000BA6  69FE               	setf	254,b	;volatile
  5344  000BA8                     
  5345                           ; BSR set to: 14
  5346                           ;mcc_generated_files/ecan.c: 112:     RXM1EIDL = 0xFF;
  5347  000BA8  69FF               	setf	255,b	;volatile
  5348  000BAA                     
  5349                           ; BSR set to: 14
  5350                           ;mcc_generated_files/ecan.c: 113:     RXM1SIDH = 0xFF;
  5351  000BAA  69FC               	setf	252,b	;volatile
  5352                           
  5353                           ;mcc_generated_files/ecan.c: 114:     RXM1SIDL = 0xE3;
  5354  000BAC  0EE3               	movlw	227
  5355  000BAE  6FFD               	movwf	253,b	;volatile
  5356                           
  5357                           ;mcc_generated_files/ecan.c: 119:     RXFCON0 = 0x01;
  5358  000BB0  0E01               	movlw	1
  5359  000BB2  6F46               	movwf	70,b	;volatile
  5360                           
  5361                           ;mcc_generated_files/ecan.c: 120:     RXFCON1 = 0x00;
  5362  000BB4  0E00               	movlw	0
  5363  000BB6  6F47               	movwf	71,b	;volatile
  5364                           
  5365                           ;mcc_generated_files/ecan.c: 124:     MSEL0 = 0x00;
  5366  000BB8  0E00               	movlw	0
  5367  000BBA  6F79               	movwf	121,b	;volatile
  5368                           
  5369                           ;mcc_generated_files/ecan.c: 125:     MSEL1 = 0x00;
  5370  000BBC  0E00               	movlw	0
  5371  000BBE  6F7A               	movwf	122,b	;volatile
  5372                           
  5373                           ;mcc_generated_files/ecan.c: 126:     MSEL2 = 0x00;
  5374  000BC0  0E00               	movlw	0
  5375  000BC2  6F7B               	movwf	123,b	;volatile
  5376                           
  5377                           ;mcc_generated_files/ecan.c: 127:     MSEL3 = 0x00;
  5378  000BC4  0E00               	movlw	0
  5379  000BC6  6F7C               	movwf	124,b	;volatile
  5380                           
  5381                           ;mcc_generated_files/ecan.c: 132:     RXFBCON0 = 0x00;
  5382  000BC8  0E00               	movlw	0
  5383  000BCA  6F71               	movwf	113,b	;volatile
  5384                           
  5385                           ;mcc_generated_files/ecan.c: 133:     RXFBCON1 = 0x00;
  5386  000BCC  0E00               	movlw	0
  5387  000BCE  6F72               	movwf	114,b	;volatile
  5388                           
  5389                           ;mcc_generated_files/ecan.c: 134:     RXFBCON2 = 0x00;
  5390  000BD0  0E00               	movlw	0
  5391  000BD2  6F73               	movwf	115,b	;volatile
  5392                           
  5393                           ;mcc_generated_files/ecan.c: 135:     RXFBCON3 = 0x00;
  5394  000BD4  0E00               	movlw	0
  5395  000BD6  6F74               	movwf	116,b	;volatile
  5396                           
  5397                           ;mcc_generated_files/ecan.c: 136:     RXFBCON4 = 0x00;
  5398  000BD8  0E00               	movlw	0
  5399  000BDA  6F75               	movwf	117,b	;volatile
  5400                           
  5401                           ;mcc_generated_files/ecan.c: 137:     RXFBCON5 = 0x00;
  5402  000BDC  0E00               	movlw	0
  5403  000BDE  6F76               	movwf	118,b	;volatile
  5404                           
  5405                           ;mcc_generated_files/ecan.c: 138:     RXFBCON6 = 0x00;
  5406  000BE0  0E00               	movlw	0
  5407  000BE2  6F77               	movwf	119,b	;volatile
  5408                           
  5409                           ;mcc_generated_files/ecan.c: 139:     RXFBCON7 = 0x00;
  5410  000BE4  0E00               	movlw	0
  5411  000BE6  6F78               	movwf	120,b	;volatile
  5412                           
  5413                           ;mcc_generated_files/ecan.c: 144:     RXF0EIDH = 0x08;
  5414  000BE8  0E08               	movlw	8
  5415  000BEA  6FE2               	movwf	226,b	;volatile
  5416                           
  5417                           ;mcc_generated_files/ecan.c: 145:     RXF0EIDL = 0xF4;
  5418  000BEC  0EF4               	movlw	244
  5419  000BEE  6FE3               	movwf	227,b	;volatile
  5420                           
  5421                           ;mcc_generated_files/ecan.c: 146:     RXF0SIDH = 0x00;
  5422  000BF0  0E00               	movlw	0
  5423  000BF2  6FE0               	movwf	224,b	;volatile
  5424                           
  5425                           ;mcc_generated_files/ecan.c: 147:     RXF0SIDL = 0x08;
  5426  000BF4  0E08               	movlw	8
  5427  000BF6  6FE1               	movwf	225,b	;volatile
  5428                           
  5429                           ;mcc_generated_files/ecan.c: 148:     RXF1EIDH = 0x00;
  5430  000BF8  0E00               	movlw	0
  5431  000BFA  6FE6               	movwf	230,b	;volatile
  5432                           
  5433                           ;mcc_generated_files/ecan.c: 149:     RXF1EIDL = 0x00;
  5434  000BFC  0E00               	movlw	0
  5435  000BFE  6FE7               	movwf	231,b	;volatile
  5436                           
  5437                           ;mcc_generated_files/ecan.c: 150:     RXF1SIDH = 0x00;
  5438  000C00  0E00               	movlw	0
  5439  000C02  6FE4               	movwf	228,b	;volatile
  5440                           
  5441                           ;mcc_generated_files/ecan.c: 151:     RXF1SIDL = 0x00;
  5442  000C04  0E00               	movlw	0
  5443  000C06  6FE5               	movwf	229,b	;volatile
  5444                           
  5445                           ;mcc_generated_files/ecan.c: 152:     RXF2EIDH = 0x00;
  5446  000C08  0E00               	movlw	0
  5447  000C0A  6FEA               	movwf	234,b	;volatile
  5448                           
  5449                           ;mcc_generated_files/ecan.c: 153:     RXF2EIDL = 0x00;
  5450  000C0C  0E00               	movlw	0
  5451  000C0E  6FEB               	movwf	235,b	;volatile
  5452                           
  5453                           ;mcc_generated_files/ecan.c: 154:     RXF2SIDH = 0x00;
  5454  000C10  0E00               	movlw	0
  5455  000C12  6FE8               	movwf	232,b	;volatile
  5456                           
  5457                           ;mcc_generated_files/ecan.c: 155:     RXF2SIDL = 0x00;
  5458  000C14  0E00               	movlw	0
  5459  000C16  6FE9               	movwf	233,b	;volatile
  5460                           
  5461                           ;mcc_generated_files/ecan.c: 156:     RXF3EIDH = 0x00;
  5462  000C18  0E00               	movlw	0
  5463  000C1A  6FEE               	movwf	238,b	;volatile
  5464                           
  5465                           ;mcc_generated_files/ecan.c: 157:     RXF3EIDL = 0x00;
  5466  000C1C  0E00               	movlw	0
  5467  000C1E  6FEF               	movwf	239,b	;volatile
  5468                           
  5469                           ;mcc_generated_files/ecan.c: 158:     RXF3SIDH = 0x00;
  5470  000C20  0E00               	movlw	0
  5471  000C22  6FEC               	movwf	236,b	;volatile
  5472                           
  5473                           ;mcc_generated_files/ecan.c: 159:     RXF3SIDL = 0x00;
  5474  000C24  0E00               	movlw	0
  5475  000C26  6FED               	movwf	237,b	;volatile
  5476                           
  5477                           ;mcc_generated_files/ecan.c: 160:     RXF4EIDH = 0x00;
  5478  000C28  0E00               	movlw	0
  5479  000C2A  6FF2               	movwf	242,b	;volatile
  5480                           
  5481                           ;mcc_generated_files/ecan.c: 161:     RXF4EIDL = 0x00;
  5482  000C2C  0E00               	movlw	0
  5483  000C2E  6FF3               	movwf	243,b	;volatile
  5484                           
  5485                           ;mcc_generated_files/ecan.c: 162:     RXF4SIDH = 0x00;
  5486  000C30  0E00               	movlw	0
  5487  000C32  6FF0               	movwf	240,b	;volatile
  5488                           
  5489                           ;mcc_generated_files/ecan.c: 163:     RXF4SIDL = 0x00;
  5490  000C34  0E00               	movlw	0
  5491  000C36  6FF1               	movwf	241,b	;volatile
  5492                           
  5493                           ;mcc_generated_files/ecan.c: 164:     RXF5EIDH = 0x00;
  5494  000C38  0E00               	movlw	0
  5495  000C3A  6FF6               	movwf	246,b	;volatile
  5496                           
  5497                           ;mcc_generated_files/ecan.c: 165:     RXF5EIDL = 0x00;
  5498  000C3C  0E00               	movlw	0
  5499  000C3E  6FF7               	movwf	247,b	;volatile
  5500                           
  5501                           ;mcc_generated_files/ecan.c: 166:     RXF5SIDH = 0x00;
  5502  000C40  0E00               	movlw	0
  5503  000C42  6FF4               	movwf	244,b	;volatile
  5504                           
  5505                           ;mcc_generated_files/ecan.c: 167:     RXF5SIDL = 0x00;
  5506  000C44  0E00               	movlw	0
  5507  000C46  6FF5               	movwf	245,b	;volatile
  5508                           
  5509                           ;mcc_generated_files/ecan.c: 169:     RXF6EIDH = 0x00;
  5510  000C48  0E00               	movlw	0
  5511  000C4A  6F4A               	movwf	74,b	;volatile
  5512                           
  5513                           ;mcc_generated_files/ecan.c: 170:     RXF6EIDL = 0x00;
  5514  000C4C  0E00               	movlw	0
  5515  000C4E  6F4B               	movwf	75,b	;volatile
  5516                           
  5517                           ;mcc_generated_files/ecan.c: 171:     RXF6SIDH = 0x00;
  5518  000C50  0E00               	movlw	0
  5519  000C52  6F48               	movwf	72,b	;volatile
  5520                           
  5521                           ;mcc_generated_files/ecan.c: 172:     RXF6SIDL = 0x00;
  5522  000C54  0E00               	movlw	0
  5523  000C56  6F49               	movwf	73,b	;volatile
  5524                           
  5525                           ;mcc_generated_files/ecan.c: 173:     RXF7EIDH = 0x00;
  5526  000C58  0E00               	movlw	0
  5527  000C5A  6F4E               	movwf	78,b	;volatile
  5528                           
  5529                           ;mcc_generated_files/ecan.c: 174:     RXF7EIDL = 0x00;
  5530  000C5C  0E00               	movlw	0
  5531  000C5E  6F4F               	movwf	79,b	;volatile
  5532                           
  5533                           ;mcc_generated_files/ecan.c: 175:     RXF7SIDH = 0x00;
  5534  000C60  0E00               	movlw	0
  5535  000C62  6F4C               	movwf	76,b	;volatile
  5536                           
  5537                           ;mcc_generated_files/ecan.c: 176:     RXF7SIDL = 0x00;
  5538  000C64  0E00               	movlw	0
  5539  000C66  6F4D               	movwf	77,b	;volatile
  5540                           
  5541                           ;mcc_generated_files/ecan.c: 177:     RXF8EIDH = 0x00;
  5542  000C68  0E00               	movlw	0
  5543  000C6A  6F52               	movwf	82,b	;volatile
  5544                           
  5545                           ;mcc_generated_files/ecan.c: 178:     RXF8EIDL = 0x00;
  5546  000C6C  0E00               	movlw	0
  5547  000C6E  6F53               	movwf	83,b	;volatile
  5548                           
  5549                           ;mcc_generated_files/ecan.c: 179:     RXF8SIDH = 0x00;
  5550  000C70  0E00               	movlw	0
  5551  000C72  6F50               	movwf	80,b	;volatile
  5552                           
  5553                           ;mcc_generated_files/ecan.c: 180:     RXF8SIDL = 0x00;
  5554  000C74  0E00               	movlw	0
  5555  000C76  6F51               	movwf	81,b	;volatile
  5556                           
  5557                           ;mcc_generated_files/ecan.c: 181:     RXF9EIDH = 0x00;
  5558  000C78  0E00               	movlw	0
  5559  000C7A  6F56               	movwf	86,b	;volatile
  5560                           
  5561                           ;mcc_generated_files/ecan.c: 182:     RXF9EIDL = 0x00;
  5562  000C7C  0E00               	movlw	0
  5563  000C7E  6F57               	movwf	87,b	;volatile
  5564                           
  5565                           ;mcc_generated_files/ecan.c: 183:     RXF9SIDH = 0x00;
  5566  000C80  0E00               	movlw	0
  5567  000C82  6F54               	movwf	84,b	;volatile
  5568                           
  5569                           ;mcc_generated_files/ecan.c: 184:     RXF9SIDL = 0x00;
  5570  000C84  0E00               	movlw	0
  5571  000C86  6F55               	movwf	85,b	;volatile
  5572                           
  5573                           ;mcc_generated_files/ecan.c: 185:     RXF10EIDH = 0x00;
  5574  000C88  0E00               	movlw	0
  5575  000C8A  6F5A               	movwf	90,b	;volatile
  5576                           
  5577                           ;mcc_generated_files/ecan.c: 186:     RXF10EIDL = 0x00;
  5578  000C8C  0E00               	movlw	0
  5579  000C8E  6F5B               	movwf	91,b	;volatile
  5580                           
  5581                           ;mcc_generated_files/ecan.c: 187:     RXF10SIDH = 0x00;
  5582  000C90  0E00               	movlw	0
  5583  000C92  6F58               	movwf	88,b	;volatile
  5584                           
  5585                           ;mcc_generated_files/ecan.c: 188:     RXF10SIDL = 0x00;
  5586  000C94  0E00               	movlw	0
  5587  000C96  6F59               	movwf	89,b	;volatile
  5588                           
  5589                           ;mcc_generated_files/ecan.c: 189:     RXF11EIDH = 0x00;
  5590  000C98  0E00               	movlw	0
  5591  000C9A  6F5E               	movwf	94,b	;volatile
  5592                           
  5593                           ;mcc_generated_files/ecan.c: 190:     RXF11EIDL = 0x00;
  5594  000C9C  0E00               	movlw	0
  5595  000C9E  6F5F               	movwf	95,b	;volatile
  5596                           
  5597                           ;mcc_generated_files/ecan.c: 191:     RXF11SIDH = 0x00;
  5598  000CA0  0E00               	movlw	0
  5599  000CA2  6F5C               	movwf	92,b	;volatile
  5600                           
  5601                           ;mcc_generated_files/ecan.c: 192:     RXF11SIDL = 0x00;
  5602  000CA4  0E00               	movlw	0
  5603  000CA6  6F5D               	movwf	93,b	;volatile
  5604                           
  5605                           ;mcc_generated_files/ecan.c: 193:     RXF12EIDH = 0x00;
  5606  000CA8  0E00               	movlw	0
  5607  000CAA  6F62               	movwf	98,b	;volatile
  5608                           
  5609                           ;mcc_generated_files/ecan.c: 194:     RXF12EIDL = 0x00;
  5610  000CAC  0E00               	movlw	0
  5611  000CAE  6F63               	movwf	99,b	;volatile
  5612                           
  5613                           ;mcc_generated_files/ecan.c: 195:     RXF12SIDH = 0x00;
  5614  000CB0  0E00               	movlw	0
  5615  000CB2  6F60               	movwf	96,b	;volatile
  5616                           
  5617                           ;mcc_generated_files/ecan.c: 196:     RXF12SIDL = 0x00;
  5618  000CB4  0E00               	movlw	0
  5619  000CB6  6F61               	movwf	97,b	;volatile
  5620                           
  5621                           ;mcc_generated_files/ecan.c: 197:     RXF13EIDH = 0x00;
  5622  000CB8  0E00               	movlw	0
  5623  000CBA  6F66               	movwf	102,b	;volatile
  5624                           
  5625                           ;mcc_generated_files/ecan.c: 198:     RXF13EIDL = 0x00;
  5626  000CBC  0E00               	movlw	0
  5627  000CBE  6F67               	movwf	103,b	;volatile
  5628                           
  5629                           ;mcc_generated_files/ecan.c: 199:     RXF13SIDH = 0x00;
  5630  000CC0  0E00               	movlw	0
  5631  000CC2  6F64               	movwf	100,b	;volatile
  5632                           
  5633                           ;mcc_generated_files/ecan.c: 200:     RXF13SIDL = 0x00;
  5634  000CC4  0E00               	movlw	0
  5635  000CC6  6F65               	movwf	101,b	;volatile
  5636                           
  5637                           ;mcc_generated_files/ecan.c: 201:     RXF14EIDH = 0x00;
  5638  000CC8  0E00               	movlw	0
  5639  000CCA  6F6A               	movwf	106,b	;volatile
  5640                           
  5641                           ;mcc_generated_files/ecan.c: 202:     RXF14EIDL = 0x00;
  5642  000CCC  0E00               	movlw	0
  5643  000CCE  6F6B               	movwf	107,b	;volatile
  5644                           
  5645                           ;mcc_generated_files/ecan.c: 203:     RXF14SIDH = 0x00;
  5646  000CD0  0E00               	movlw	0
  5647  000CD2  6F68               	movwf	104,b	;volatile
  5648                           
  5649                           ;mcc_generated_files/ecan.c: 204:     RXF14SIDL = 0x00;
  5650  000CD4  0E00               	movlw	0
  5651  000CD6  6F69               	movwf	105,b	;volatile
  5652  000CD8                     
  5653                           ; BSR set to: 14
  5654                           ;mcc_generated_files/ecan.c: 205:     RXF15EIDH = 0xFF;
  5655  000CD8  696E               	setf	110,b	;volatile
  5656  000CDA                     
  5657                           ; BSR set to: 14
  5658                           ;mcc_generated_files/ecan.c: 206:     RXF15EIDL = 0xFF;
  5659  000CDA  696F               	setf	111,b	;volatile
  5660  000CDC                     
  5661                           ; BSR set to: 14
  5662                           ;mcc_generated_files/ecan.c: 207:     RXF15SIDH = 0xFF;
  5663  000CDC  696C               	setf	108,b	;volatile
  5664                           
  5665                           ;mcc_generated_files/ecan.c: 208:     RXF15SIDL = 0xE3;
  5666  000CDE  0EE3               	movlw	227
  5667  000CE0  6F6D               	movwf	109,b	;volatile
  5668                           
  5669                           ;mcc_generated_files/ecan.c: 223:     BRGCON1 = 0x03;
  5670  000CE2  0E03               	movlw	3
  5671  000CE4  6F43               	movwf	67,b	;volatile
  5672                           
  5673                           ;mcc_generated_files/ecan.c: 224:     BRGCON2 = 0xA8;
  5674  000CE6  0EA8               	movlw	168
  5675  000CE8  6F44               	movwf	68,b	;volatile
  5676                           
  5677                           ;mcc_generated_files/ecan.c: 225:     BRGCON3 = 0x01;
  5678  000CEA  0E01               	movlw	1
  5679  000CEC  6F45               	movwf	69,b	;volatile
  5680  000CEE                     
  5681                           ; BSR set to: 14
  5682                           ;mcc_generated_files/ecan.c: 227:     ECAN_SetWakeUpInterruptHandler(WakeUpDefaultInterr
      +                          uptHandler);
  5683  000CEE  0E22               	movlw	low _WakeUpDefaultInterruptHandler
  5684  000CF0  6E3A               	movwf	ECAN_SetWakeUpInterruptHandler@handler^0,c
  5685  000CF2  0E1B               	movlw	high _WakeUpDefaultInterruptHandler
  5686  000CF4  6E3B               	movwf	(ECAN_SetWakeUpInterruptHandler@handler+1)^0,c
  5687  000CF6  EC8A  F00D         	call	_ECAN_SetWakeUpInterruptHandler	;wreg free
  5688  000CFA                     
  5689                           ;mcc_generated_files/ecan.c: 228:     PIR5bits.WAKIF = 0;
  5690  000CFA  9C77               	bcf	119,6,c	;volatile
  5691  000CFC                     
  5692                           ;mcc_generated_files/ecan.c: 229:     PIE5bits.WAKIE = 1;
  5693  000CFC  8C76               	bsf	118,6,c	;volatile
  5694  000CFE                     
  5695                           ;mcc_generated_files/ecan.c: 231:     CANCON = 0x00;
  5696  000CFE  0E00               	movlw	0
  5697  000D00  6E6F               	movwf	111,c	;volatile
  5698  000D02                     l3990:
  5699  000D02  CF6E F03C          	movff	3950,??_ECAN_Initialize	;volatile
  5700  000D06  0EE0               	movlw	224
  5701  000D08  163C               	andwf	??_ECAN_Initialize^0,f,c
  5702  000D0A  A4D8               	btfss	status,2,c
  5703  000D0C  EF8A  F006         	goto	u1251
  5704  000D10  EF8C  F006         	goto	u1250
  5705  000D14                     u1251:
  5706  000D14  EF81  F006         	goto	l3990
  5707  000D18                     u1250:
  5708  000D18  0012               	return		;funcret
  5709  000D1A                     __end_of_ECAN_Initialize:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function _ECAN_SetWakeUpInterruptHandler *****************
  5713 ;; Defined at:
  5714 ;;		line 508 in file "mcc_generated_files/ecan.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  handler         2    2[COMRAM] PTR FTN()void 
  5717 ;;		 -> WakeUpDefaultInterruptHandler(1), 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;		None
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  1    wreg      void 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5733 ;;Total ram usage:        2 bytes
  5734 ;; Hardware stack levels used: 1
  5735 ;; Hardware stack levels required when called: 3
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_ECAN_Initialize
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text30
  5744  001B14                     __ptext30:
  5745                           	callstack 0
  5746  001B14                     _ECAN_SetWakeUpInterruptHandler:
  5747                           	callstack 25
  5748  001B14                     
  5749                           ;mcc_generated_files/ecan.c: 508: void ECAN_SetWakeUpInterruptHandler(void (*handler)(vo
      +                          id));mcc_generated_files/ecan.c: 509: {;mcc_generated_files/ecan.c: 510:     WakeUpInter
      +                          ruptHandler = handler;
  5750  001B14  C03A  F01B         	movff	ECAN_SetWakeUpInterruptHandler@handler,_WakeUpInterruptHandler
  5751  001B18  C03B  F01C         	movff	ECAN_SetWakeUpInterruptHandler@handler+1,_WakeUpInterruptHandler+1
  5752  001B1C  0012               	return		;funcret
  5753  001B1E                     __end_of_ECAN_SetWakeUpInterruptHandler:
  5754                           	callstack 0
  5755                           
  5756 ;; *************** function _CAN_receive *****************
  5757 ;; Defined at:
  5758 ;;		line 323 in file "mcc_generated_files/ecan.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  tempCanMsg      2   21[COMRAM] PTR struct .
  5761 ;;		 -> rx(14), 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  returnValue     1   23[COMRAM] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      unsigned char 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5777 ;;Total ram usage:        3 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; Hardware stack levels required when called: 4
  5780 ;; This function calls:
  5781 ;;		_convertReg2ExtendedCANid
  5782 ;;		_convertReg2StandardCANid
  5783 ;; This function is called by:
  5784 ;;		_main
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text31
  5789  000920                     __ptext31:
  5790                           	callstack 0
  5791  000920                     _CAN_receive:
  5792                           	callstack 26
  5793  000920                     
  5794                           ;mcc_generated_files/ecan.c: 323: uint8_t CAN_receive(uCAN_MSG *tempCanMsg);mcc_generate
      +                          d_files/ecan.c: 324: {;mcc_generated_files/ecan.c: 325:     uint8_t returnValue = 0;
  5795  000920  0E00               	movlw	0
  5796  000922  6E4F               	movwf	CAN_receive@returnValue^0,c
  5797  000924                     
  5798                           ;mcc_generated_files/ecan.c: 328:     if (RXB0CONbits.RXFUL != 0)
  5799  000924  AE60               	btfss	96,7,c	;volatile
  5800  000926  EF97  F004         	goto	u1311
  5801  00092A  EF99  F004         	goto	u1310
  5802  00092E                     u1311:
  5803  00092E  EF25  F005         	goto	l519
  5804  000932                     u1310:
  5805  000932                     
  5806                           ;mcc_generated_files/ecan.c: 329:     {;mcc_generated_files/ecan.c: 330:         if ((RX
      +                          B0SIDL & 0x08) == 0x08)
  5807  000932  A662               	btfss	98,3,c	;volatile
  5808  000934  EF9E  F004         	goto	u1321
  5809  000938  EFA0  F004         	goto	u1320
  5810  00093C                     u1321:
  5811  00093C  EFBF  F004         	goto	l4402
  5812  000940                     u1320:
  5813  000940                     
  5814                           ;mcc_generated_files/ecan.c: 331:         {;mcc_generated_files/ecan.c: 333:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  5815  000940  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5816  000944  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5817  000948  0E02               	movlw	2
  5818  00094A  6EDF               	movwf	indf2,c
  5819  00094C                     
  5820                           ;mcc_generated_files/ecan.c: 334:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
  5821  00094C  CF64 F03A          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  5822  000950  CF61 F03B          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  5823  000954  CF62 F03C          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  5824  000958  5063               	movf	99,w,c	;volatile
  5825  00095A  EC47  F007         	call	_convertReg2ExtendedCANid
  5826  00095E  EE20 F001          	lfsr	2,1
  5827  000962  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5828  000964  26D9               	addwf	fsr2l,f,c
  5829  000966  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5830  000968  22DA               	addwfc	fsr2h,f,c
  5831  00096A  C03A  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  5832  00096E  C03B  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  5833  000972  C03C  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  5834  000976  C03D  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  5835                           
  5836                           ;mcc_generated_files/ecan.c: 335:         }
  5837  00097A  EFD8  F004         	goto	l4406
  5838  00097E                     l4402:
  5839                           
  5840                           ;mcc_generated_files/ecan.c: 337:         {;mcc_generated_files/ecan.c: 339:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  5841  00097E  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5842  000982  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5843  000986  0E01               	movlw	1
  5844  000988  6EDF               	movwf	indf2,c
  5845  00098A                     
  5846                           ;mcc_generated_files/ecan.c: 340:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB0SIDH, RXB0SIDL);
  5847  00098A  CF62 F03A          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  5848  00098E  5061               	movf	97,w,c	;volatile
  5849  000990  EC81  F00C         	call	_convertReg2StandardCANid
  5850  000994  EE20 F001          	lfsr	2,1
  5851  000998  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5852  00099A  26D9               	addwf	fsr2l,f,c
  5853  00099C  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5854  00099E  22DA               	addwfc	fsr2h,f,c
  5855  0009A0  C03A  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  5856  0009A4  C03B  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  5857  0009A8  C03C  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  5858  0009AC  C03D  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  5859  0009B0                     l4406:
  5860                           
  5861                           ;mcc_generated_files/ecan.c: 343:         tempCanMsg->frame.dlc = RXB0DLC;
  5862  0009B0  EE20 F005          	lfsr	2,5
  5863  0009B4  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5864  0009B6  26D9               	addwf	fsr2l,f,c
  5865  0009B8  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5866  0009BA  22DA               	addwfc	fsr2h,f,c
  5867  0009BC  CF65 FFDF          	movff	3941,indf2	;volatile
  5868  0009C0                     
  5869                           ;mcc_generated_files/ecan.c: 344:         tempCanMsg->frame.data0 = RXB0D0;
  5870  0009C0  EE20 F006          	lfsr	2,6
  5871  0009C4  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5872  0009C6  26D9               	addwf	fsr2l,f,c
  5873  0009C8  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5874  0009CA  22DA               	addwfc	fsr2h,f,c
  5875  0009CC  CF66 FFDF          	movff	3942,indf2	;volatile
  5876  0009D0                     
  5877                           ;mcc_generated_files/ecan.c: 345:         tempCanMsg->frame.data1 = RXB0D1;
  5878  0009D0  EE20 F007          	lfsr	2,7
  5879  0009D4  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5880  0009D6  26D9               	addwf	fsr2l,f,c
  5881  0009D8  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5882  0009DA  22DA               	addwfc	fsr2h,f,c
  5883  0009DC  CF67 FFDF          	movff	3943,indf2	;volatile
  5884  0009E0                     
  5885                           ;mcc_generated_files/ecan.c: 346:         tempCanMsg->frame.data2 = RXB0D2;
  5886  0009E0  EE20 F008          	lfsr	2,8
  5887  0009E4  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5888  0009E6  26D9               	addwf	fsr2l,f,c
  5889  0009E8  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5890  0009EA  22DA               	addwfc	fsr2h,f,c
  5891  0009EC  CF68 FFDF          	movff	3944,indf2	;volatile
  5892  0009F0                     
  5893                           ;mcc_generated_files/ecan.c: 347:         tempCanMsg->frame.data3 = RXB0D3;
  5894  0009F0  EE20 F009          	lfsr	2,9
  5895  0009F4  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5896  0009F6  26D9               	addwf	fsr2l,f,c
  5897  0009F8  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5898  0009FA  22DA               	addwfc	fsr2h,f,c
  5899  0009FC  CF69 FFDF          	movff	3945,indf2	;volatile
  5900  000A00                     
  5901                           ;mcc_generated_files/ecan.c: 348:         tempCanMsg->frame.data4 = RXB0D4;
  5902  000A00  EE20 F00A          	lfsr	2,10
  5903  000A04  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5904  000A06  26D9               	addwf	fsr2l,f,c
  5905  000A08  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5906  000A0A  22DA               	addwfc	fsr2h,f,c
  5907  000A0C  CF6A FFDF          	movff	3946,indf2	;volatile
  5908  000A10                     
  5909                           ;mcc_generated_files/ecan.c: 349:         tempCanMsg->frame.data5 = RXB0D5;
  5910  000A10  EE20 F00B          	lfsr	2,11
  5911  000A14  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5912  000A16  26D9               	addwf	fsr2l,f,c
  5913  000A18  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5914  000A1A  22DA               	addwfc	fsr2h,f,c
  5915  000A1C  CF6B FFDF          	movff	3947,indf2	;volatile
  5916  000A20                     
  5917                           ;mcc_generated_files/ecan.c: 350:         tempCanMsg->frame.data6 = RXB0D6;
  5918  000A20  EE20 F00C          	lfsr	2,12
  5919  000A24  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5920  000A26  26D9               	addwf	fsr2l,f,c
  5921  000A28  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5922  000A2A  22DA               	addwfc	fsr2h,f,c
  5923  000A2C  CF6C FFDF          	movff	3948,indf2	;volatile
  5924  000A30                     
  5925                           ;mcc_generated_files/ecan.c: 351:         tempCanMsg->frame.data7 = RXB0D7;
  5926  000A30  EE20 F00D          	lfsr	2,13
  5927  000A34  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5928  000A36  26D9               	addwf	fsr2l,f,c
  5929  000A38  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5930  000A3A  22DA               	addwfc	fsr2h,f,c
  5931  000A3C  CF6D FFDF          	movff	3949,indf2	;volatile
  5932  000A40                     
  5933                           ;mcc_generated_files/ecan.c: 352:         RXB0CONbits.RXFUL = 0;
  5934  000A40  9E60               	bcf	96,7,c	;volatile
  5935  000A42                     l4426:
  5936                           
  5937                           ;mcc_generated_files/ecan.c: 353:         returnValue = 1;
  5938  000A42  0E01               	movlw	1
  5939  000A44  6E4F               	movwf	CAN_receive@returnValue^0,c
  5940                           
  5941                           ;mcc_generated_files/ecan.c: 354:     }
  5942  000A46  EFB8  F005         	goto	l4460
  5943  000A4A                     l519:
  5944  000A4A  010F               	movlb	15	; () banked
  5945  000A4C  AF30               	btfss	48,7,b	;volatile
  5946  000A4E  EF2B  F005         	goto	u1331
  5947  000A52  EF2D  F005         	goto	u1330
  5948  000A56                     u1331:
  5949  000A56  EFB8  F005         	goto	l4460
  5950  000A5A                     u1330:
  5951  000A5A                     
  5952                           ; BSR set to: 15
  5953                           ;mcc_generated_files/ecan.c: 356:     {;mcc_generated_files/ecan.c: 357:         if ((RX
      +                          B1SIDL & 0x08) == 0x08)
  5954  000A5A  A732               	btfss	50,3,b	;volatile
  5955  000A5C  EF32  F005         	goto	u1341
  5956  000A60  EF34  F005         	goto	u1340
  5957  000A64                     u1341:
  5958  000A64  EF53  F005         	goto	l4434
  5959  000A68                     u1340:
  5960  000A68                     
  5961                           ; BSR set to: 15
  5962                           ;mcc_generated_files/ecan.c: 358:         {;mcc_generated_files/ecan.c: 360:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  5963  000A68  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5964  000A6C  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5965  000A70  0E02               	movlw	2
  5966  000A72  6EDF               	movwf	indf2,c
  5967  000A74                     
  5968                           ; BSR set to: 15
  5969                           ;mcc_generated_files/ecan.c: 361:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
  5970  000A74  CF34 F03A          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  5971  000A78  CF31 F03B          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  5972  000A7C  CF32 F03C          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  5973  000A80  5133               	movf	51,w,b	;volatile
  5974  000A82  EC47  F007         	call	_convertReg2ExtendedCANid
  5975  000A86  EE20 F001          	lfsr	2,1
  5976  000A8A  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5977  000A8C  26D9               	addwf	fsr2l,f,c
  5978  000A8E  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5979  000A90  22DA               	addwfc	fsr2h,f,c
  5980  000A92  C03A  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  5981  000A96  C03B  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  5982  000A9A  C03C  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  5983  000A9E  C03D  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  5984                           
  5985                           ;mcc_generated_files/ecan.c: 362:         }
  5986  000AA2  EF6C  F005         	goto	l4438
  5987  000AA6                     l4434:
  5988                           
  5989                           ; BSR set to: 15
  5990                           ;mcc_generated_files/ecan.c: 364:         {;mcc_generated_files/ecan.c: 366:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  5991  000AA6  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5992  000AAA  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5993  000AAE  0E01               	movlw	1
  5994  000AB0  6EDF               	movwf	indf2,c
  5995  000AB2                     
  5996                           ; BSR set to: 15
  5997                           ;mcc_generated_files/ecan.c: 367:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB1SIDH, RXB1SIDL);
  5998  000AB2  CF32 F03A          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  5999  000AB6  5131               	movf	49,w,b	;volatile
  6000  000AB8  EC81  F00C         	call	_convertReg2StandardCANid
  6001  000ABC  EE20 F001          	lfsr	2,1
  6002  000AC0  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6003  000AC2  26D9               	addwf	fsr2l,f,c
  6004  000AC4  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6005  000AC6  22DA               	addwfc	fsr2h,f,c
  6006  000AC8  C03A  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  6007  000ACC  C03B  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  6008  000AD0  C03C  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  6009  000AD4  C03D  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  6010  000AD8                     l4438:
  6011                           
  6012                           ;mcc_generated_files/ecan.c: 370:         tempCanMsg->frame.dlc = RXB1DLC;
  6013  000AD8  EE20 F005          	lfsr	2,5
  6014  000ADC  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6015  000ADE  26D9               	addwf	fsr2l,f,c
  6016  000AE0  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6017  000AE2  22DA               	addwfc	fsr2h,f,c
  6018  000AE4  CF35 FFDF          	movff	3893,indf2	;volatile
  6019  000AE8                     
  6020                           ;mcc_generated_files/ecan.c: 371:         tempCanMsg->frame.data0 = RXB1D0;
  6021  000AE8  EE20 F006          	lfsr	2,6
  6022  000AEC  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6023  000AEE  26D9               	addwf	fsr2l,f,c
  6024  000AF0  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6025  000AF2  22DA               	addwfc	fsr2h,f,c
  6026  000AF4  CF36 FFDF          	movff	3894,indf2	;volatile
  6027  000AF8                     
  6028                           ;mcc_generated_files/ecan.c: 372:         tempCanMsg->frame.data1 = RXB1D1;
  6029  000AF8  EE20 F007          	lfsr	2,7
  6030  000AFC  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6031  000AFE  26D9               	addwf	fsr2l,f,c
  6032  000B00  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6033  000B02  22DA               	addwfc	fsr2h,f,c
  6034  000B04  CF37 FFDF          	movff	3895,indf2	;volatile
  6035  000B08                     
  6036                           ;mcc_generated_files/ecan.c: 373:         tempCanMsg->frame.data2 = RXB1D2;
  6037  000B08  EE20 F008          	lfsr	2,8
  6038  000B0C  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6039  000B0E  26D9               	addwf	fsr2l,f,c
  6040  000B10  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6041  000B12  22DA               	addwfc	fsr2h,f,c
  6042  000B14  CF38 FFDF          	movff	3896,indf2	;volatile
  6043  000B18                     
  6044                           ;mcc_generated_files/ecan.c: 374:         tempCanMsg->frame.data3 = RXB1D3;
  6045  000B18  EE20 F009          	lfsr	2,9
  6046  000B1C  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6047  000B1E  26D9               	addwf	fsr2l,f,c
  6048  000B20  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6049  000B22  22DA               	addwfc	fsr2h,f,c
  6050  000B24  CF39 FFDF          	movff	3897,indf2	;volatile
  6051  000B28                     
  6052                           ;mcc_generated_files/ecan.c: 375:         tempCanMsg->frame.data4 = RXB1D4;
  6053  000B28  EE20 F00A          	lfsr	2,10
  6054  000B2C  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6055  000B2E  26D9               	addwf	fsr2l,f,c
  6056  000B30  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6057  000B32  22DA               	addwfc	fsr2h,f,c
  6058  000B34  CF3A FFDF          	movff	3898,indf2	;volatile
  6059  000B38                     
  6060                           ;mcc_generated_files/ecan.c: 376:         tempCanMsg->frame.data5 = RXB1D5;
  6061  000B38  EE20 F00B          	lfsr	2,11
  6062  000B3C  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6063  000B3E  26D9               	addwf	fsr2l,f,c
  6064  000B40  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6065  000B42  22DA               	addwfc	fsr2h,f,c
  6066  000B44  CF3B FFDF          	movff	3899,indf2	;volatile
  6067  000B48                     
  6068                           ;mcc_generated_files/ecan.c: 377:         tempCanMsg->frame.data6 = RXB1D6;
  6069  000B48  EE20 F00C          	lfsr	2,12
  6070  000B4C  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6071  000B4E  26D9               	addwf	fsr2l,f,c
  6072  000B50  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6073  000B52  22DA               	addwfc	fsr2h,f,c
  6074  000B54  CF3C FFDF          	movff	3900,indf2	;volatile
  6075  000B58                     
  6076                           ;mcc_generated_files/ecan.c: 378:         tempCanMsg->frame.data7 = RXB1D7;
  6077  000B58  EE20 F00D          	lfsr	2,13
  6078  000B5C  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6079  000B5E  26D9               	addwf	fsr2l,f,c
  6080  000B60  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6081  000B62  22DA               	addwfc	fsr2h,f,c
  6082  000B64  CF3D FFDF          	movff	3901,indf2	;volatile
  6083  000B68                     
  6084                           ;mcc_generated_files/ecan.c: 379:         RXB1CONbits.RXFUL = 0;
  6085  000B68  010F               	movlb	15	; () banked
  6086  000B6A  9F30               	bcf	48,7,b	;volatile
  6087  000B6C  EF21  F005         	goto	l4426
  6088  000B70                     l4460:
  6089                           
  6090                           ;mcc_generated_files/ecan.c: 382:     return (returnValue);
  6091  000B70  504F               	movf	CAN_receive@returnValue^0,w,c
  6092  000B72  0012               	return		;funcret
  6093  000B74                     __end_of_CAN_receive:
  6094                           	callstack 0
  6095                           
  6096 ;; *************** function _convertReg2StandardCANid *****************
  6097 ;; Defined at:
  6098 ;;		line 461 in file "mcc_generated_files/ecan.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  tempRXBn_SID    1    wreg     unsigned char 
  6101 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  tempRXBn_SID    1    8[COMRAM] unsigned char 
  6104 ;;  ConvertedID     4   13[COMRAM] unsigned long 
  6105 ;;  returnValue     4    9[COMRAM] unsigned long 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  4    2[COMRAM] unsigned long 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;Total ram usage:       15 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; Hardware stack levels required when called: 3
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_CAN_receive
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text32
  6130  001902                     __ptext32:
  6131                           	callstack 0
  6132  001902                     _convertReg2StandardCANid:
  6133                           	callstack 26
  6134                           
  6135                           ;incstack = 0
  6136                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  6137  001902  6E40               	movwf	convertReg2StandardCANid@tempRXBn_SIDH^0,c
  6138  001904                     
  6139                           ;mcc_generated_files/ecan.c: 463:     uint32_t ConvertedID;;mcc_generated_files/ecan.c: 
      +                          467:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  6140  001904  5040               	movf	convertReg2StandardCANid@tempRXBn_SIDH^0,w,c
  6141  001906  6E3E               	movwf	??_convertReg2StandardCANid^0,c
  6142  001908  6A3F               	clrf	(??_convertReg2StandardCANid+1)^0,c
  6143  00190A  90D8               	bcf	status,0,c
  6144  00190C  363E               	rlcf	??_convertReg2StandardCANid^0,f,c
  6145  00190E  363F               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  6146  001910  90D8               	bcf	status,0,c
  6147  001912  363E               	rlcf	??_convertReg2StandardCANid^0,f,c
  6148  001914  363F               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  6149  001916  90D8               	bcf	status,0,c
  6150  001918  363E               	rlcf	??_convertReg2StandardCANid^0,f,c
  6151  00191A  363F               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  6152  00191C  C03E  F045         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  6153  001920  C03F  F046         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  6154  001924  0E00               	movlw	0
  6155  001926  BE46               	btfsc	(convertReg2StandardCANid@ConvertedID+1)^0,7,c
  6156  001928  0EFF               	movlw	-1
  6157  00192A  6E47               	movwf	(convertReg2StandardCANid@ConvertedID+2)^0,c
  6158  00192C  6E48               	movwf	(convertReg2StandardCANid@ConvertedID+3)^0,c
  6159  00192E                     
  6160                           ;mcc_generated_files/ecan.c: 468:     ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SI
      +                          DL >> 5);
  6161  00192E  C03A  F03E         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  6162  001932  0E05               	movlw	5
  6163  001934  6E3F               	movwf	(??_convertReg2StandardCANid+1)^0,c
  6164  001936                     u1305:
  6165  001936  90D8               	bcf	status,0,c
  6166  001938  323E               	rrcf	??_convertReg2StandardCANid^0,f,c
  6167  00193A  2E3F               	decfsz	(??_convertReg2StandardCANid+1)^0,f,c
  6168  00193C  EF9B  F00C         	goto	u1305
  6169  001940  503E               	movf	??_convertReg2StandardCANid^0,w,c
  6170  001942  2445               	addwf	convertReg2StandardCANid@ConvertedID^0,w,c
  6171  001944  6E45               	movwf	convertReg2StandardCANid@ConvertedID^0,c
  6172  001946  0E00               	movlw	0
  6173  001948  2046               	addwfc	(convertReg2StandardCANid@ConvertedID+1)^0,w,c
  6174  00194A  6E46               	movwf	(convertReg2StandardCANid@ConvertedID+1)^0,c
  6175  00194C  0E00               	movlw	0
  6176  00194E  2047               	addwfc	(convertReg2StandardCANid@ConvertedID+2)^0,w,c
  6177  001950  6E47               	movwf	(convertReg2StandardCANid@ConvertedID+2)^0,c
  6178  001952  0E00               	movlw	0
  6179  001954  2048               	addwfc	(convertReg2StandardCANid@ConvertedID+3)^0,w,c
  6180  001956  6E48               	movwf	(convertReg2StandardCANid@ConvertedID+3)^0,c
  6181  001958                     
  6182                           ;mcc_generated_files/ecan.c: 469:     returnValue = ConvertedID;
  6183  001958  C045  F041         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  6184  00195C  C046  F042         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  6185  001960  C047  F043         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  6186  001964  C048  F044         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  6187  001968                     
  6188                           ;mcc_generated_files/ecan.c: 470:     return (returnValue);
  6189  001968  C041  F03A         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  6190  00196C  C042  F03B         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  6191  001970  C043  F03C         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  6192  001974  C044  F03D         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  6193  001978  0012               	return		;funcret
  6194  00197A                     __end_of_convertReg2StandardCANid:
  6195                           	callstack 0
  6196                           
  6197 ;; *************** function _convertReg2ExtendedCANid *****************
  6198 ;; Defined at:
  6199 ;;		line 441 in file "mcc_generated_files/ecan.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  tempRXBn_EID    1    wreg     unsigned char 
  6202 ;;  tempRXBn_EID    1    2[COMRAM] unsigned char 
  6203 ;;  tempRXBn_SID    1    3[COMRAM] unsigned char 
  6204 ;;  tempRXBn_SID    1    4[COMRAM] unsigned char 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  tempRXBn_EID    1   10[COMRAM] unsigned char 
  6207 ;;  ConvertedID     4   17[COMRAM] unsigned long 
  6208 ;;  returnValue     4   11[COMRAM] unsigned long 
  6209 ;;  CAN_standard    1   16[COMRAM] unsigned char 
  6210 ;;  CAN_standard    1   15[COMRAM] unsigned char 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  4    2[COMRAM] unsigned long 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6221 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6223 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6224 ;;Total ram usage:       19 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 3
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_CAN_receive
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text33
  6235  000E8E                     __ptext33:
  6236                           	callstack 0
  6237  000E8E                     _convertReg2ExtendedCANid:
  6238                           	callstack 26
  6239                           
  6240                           ;incstack = 0
  6241                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  6242  000E8E  6E42               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH^0,c
  6243  000E90                     
  6244                           ;mcc_generated_files/ecan.c: 443:     uint32_t ConvertedID = 0;
  6245  000E90  0E00               	movlw	0
  6246  000E92  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6247  000E94  0E00               	movlw	0
  6248  000E96  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6249  000E98  0E00               	movlw	0
  6250  000E9A  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6251  000E9C  0E00               	movlw	0
  6252  000E9E  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6253  000EA0                     
  6254                           ;mcc_generated_files/ecan.c: 444:     uint8_t CAN_standardLo_ID_lo2bits;;mcc_generated_f
      +                          iles/ecan.c: 445:     uint8_t CAN_standardLo_ID_hi3bits;;mcc_generated_files/ecan.c: 447
      +                          :     CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  6255  000EA0  503C               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL^0,w,c
  6256  000EA2  0B03               	andlw	3
  6257  000EA4  6E47               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits^0,c
  6258  000EA6                     
  6259                           ;mcc_generated_files/ecan.c: 448:     CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SID
      +                          L >> 5);
  6260  000EA6  383C               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL^0,w,c
  6261  000EA8  42E8               	rrncf	wreg,f,c
  6262  000EAA  0B07               	andlw	7
  6263  000EAC  6E48               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits^0,c
  6264  000EAE                     
  6265                           ;mcc_generated_files/ecan.c: 449:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  6266  000EAE  503B               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH^0,w,c
  6267  000EB0  6E3E               	movwf	??_convertReg2ExtendedCANid^0,c
  6268  000EB2  6A3F               	clrf	(??_convertReg2ExtendedCANid+1)^0,c
  6269  000EB4  90D8               	bcf	status,0,c
  6270  000EB6  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6271  000EB8  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6272  000EBA  90D8               	bcf	status,0,c
  6273  000EBC  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6274  000EBE  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6275  000EC0  90D8               	bcf	status,0,c
  6276  000EC2  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6277  000EC4  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6278  000EC6  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6279  000ECA  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6280  000ECE  0E00               	movlw	0
  6281  000ED0  BE4A               	btfsc	(convertReg2ExtendedCANid@ConvertedID+1)^0,7,c
  6282  000ED2  0EFF               	movlw	-1
  6283  000ED4  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6284  000ED6  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6285  000ED8                     
  6286                           ;mcc_generated_files/ecan.c: 450:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
  6287  000ED8  5048               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits^0,w,c
  6288  000EDA  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6289  000EDC  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6290  000EDE  0E00               	movlw	0
  6291  000EE0  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6292  000EE2  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6293  000EE4  0E00               	movlw	0
  6294  000EE6  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6295  000EE8  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6296  000EEA  0E00               	movlw	0
  6297  000EEC  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6298  000EEE  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6299  000EF0                     
  6300                           ;mcc_generated_files/ecan.c: 451:     ConvertedID = (ConvertedID << 2);
  6301  000EF0  C049  F03E         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  6302  000EF4  C04A  F03F         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  6303  000EF8  C04B  F040         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  6304  000EFC  C04C  F041         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  6305  000F00  0E02               	movlw	2
  6306  000F02                     u1295:
  6307  000F02  90D8               	bcf	status,0,c
  6308  000F04  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6309  000F06  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6310  000F08  3640               	rlcf	(??_convertReg2ExtendedCANid+2)^0,f,c
  6311  000F0A  3641               	rlcf	(??_convertReg2ExtendedCANid+3)^0,f,c
  6312  000F0C  2EE8               	decfsz	wreg,f,c
  6313  000F0E  EF81  F007         	goto	u1295
  6314  000F12  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6315  000F16  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6316  000F1A  C040  F04B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  6317  000F1E  C041  F04C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  6318  000F22                     
  6319                           ;mcc_generated_files/ecan.c: 452:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
  6320  000F22  5047               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits^0,w,c
  6321  000F24  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6322  000F26  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6323  000F28  0E00               	movlw	0
  6324  000F2A  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6325  000F2C  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6326  000F2E  0E00               	movlw	0
  6327  000F30  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6328  000F32  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6329  000F34  0E00               	movlw	0
  6330  000F36  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6331  000F38  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6332                           
  6333                           ;mcc_generated_files/ecan.c: 453:     ConvertedID = (ConvertedID << 8);
  6334  000F3A  C049  F03F         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  6335  000F3E  C04A  F040         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  6336  000F42  C04B  F041         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  6337  000F46  6A3E               	clrf	??_convertReg2ExtendedCANid^0,c
  6338  000F48  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6339  000F4C  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6340  000F50  C040  F04B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  6341  000F54  C041  F04C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  6342  000F58                     
  6343                           ;mcc_generated_files/ecan.c: 454:     ConvertedID = ConvertedID + tempRXBn_EIDH;
  6344  000F58  5042               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH^0,w,c
  6345  000F5A  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6346  000F5C  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6347  000F5E  0E00               	movlw	0
  6348  000F60  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6349  000F62  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6350  000F64  0E00               	movlw	0
  6351  000F66  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6352  000F68  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6353  000F6A  0E00               	movlw	0
  6354  000F6C  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6355  000F6E  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6356  000F70                     
  6357                           ;mcc_generated_files/ecan.c: 455:     ConvertedID = (ConvertedID << 8);
  6358  000F70  C049  F03F         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  6359  000F74  C04A  F040         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  6360  000F78  C04B  F041         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  6361  000F7C  6A3E               	clrf	??_convertReg2ExtendedCANid^0,c
  6362  000F7E  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6363  000F82  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6364  000F86  C040  F04B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  6365  000F8A  C041  F04C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  6366                           
  6367                           ;mcc_generated_files/ecan.c: 456:     ConvertedID = ConvertedID + tempRXBn_EIDL;
  6368  000F8E  503A               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL^0,w,c
  6369  000F90  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6370  000F92  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6371  000F94  0E00               	movlw	0
  6372  000F96  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6373  000F98  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6374  000F9A  0E00               	movlw	0
  6375  000F9C  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6376  000F9E  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6377  000FA0  0E00               	movlw	0
  6378  000FA2  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6379  000FA4  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6380  000FA6                     
  6381                           ;mcc_generated_files/ecan.c: 457:     returnValue = ConvertedID;
  6382  000FA6  C049  F043         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  6383  000FAA  C04A  F044         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  6384  000FAE  C04B  F045         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  6385  000FB2  C04C  F046         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  6386  000FB6                     
  6387                           ;mcc_generated_files/ecan.c: 458:     return (returnValue);
  6388  000FB6  C043  F03A         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  6389  000FBA  C044  F03B         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  6390  000FBE  C045  F03C         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  6391  000FC2  C046  F03D         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  6392  000FC6  0012               	return		;funcret
  6393  000FC8                     __end_of_convertReg2ExtendedCANid:
  6394                           	callstack 0
  6395                           
  6396 ;; *************** function _INTERRUPT_InterruptManager *****************
  6397 ;; Defined at:
  6398 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;		None
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg, pcl, pclath, pclatu, tosl, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;Total ram usage:        2 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 2
  6419 ;; This function calls:
  6420 ;;		_ECAN_WAKI_ISR
  6421 ;; This function is called by:
  6422 ;;		Interrupt level 2
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	intcode
  6427  000008                     __pintcode:
  6428                           	callstack 0
  6429  000008                     _INTERRUPT_InterruptManager:
  6430                           	callstack 25
  6431                           
  6432                           ;incstack = 0
  6433  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6434  00000A  CFFA F038          	movff	pclath,??_INTERRUPT_InterruptManager
  6435  00000E  CFFB F039          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6436  000012                     
  6437                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6438  000012  ACF2               	btfss	242,6,c	;volatile
  6439  000014  EF0E  F000         	goto	i2u27_41
  6440  000018  EF10  F000         	goto	i2u27_40
  6441  00001C                     i2u27_41:
  6442  00001C  EF20  F000         	goto	i2l110
  6443  000020                     i2u27_40:
  6444  000020                     
  6445                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE5bits.WAKIE == 1 && PIR5bits.WAKIF == 1)
  6446  000020  AC76               	btfss	118,6,c	;volatile
  6447  000022  EF15  F000         	goto	i2u28_41
  6448  000026  EF17  F000         	goto	i2u28_40
  6449  00002A                     i2u28_41:
  6450  00002A  EF20  F000         	goto	i2l110
  6451  00002E                     i2u28_40:
  6452  00002E  AC77               	btfss	119,6,c	;volatile
  6453  000030  EF1C  F000         	goto	i2u29_41
  6454  000034  EF1E  F000         	goto	i2u29_40
  6455  000038                     i2u29_41:
  6456  000038  EF20  F000         	goto	i2l110
  6457  00003C                     i2u29_40:
  6458  00003C                     
  6459                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ECAN_WAKI_ISR();
  6460  00003C  EC4D  F00D         	call	_ECAN_WAKI_ISR	;wreg free
  6461  000040                     i2l110:
  6462  000040  C039  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6463  000044  C038  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6464  000048  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6465  00004A  0011               	retfie		f
  6466  00004C                     __end_of_INTERRUPT_InterruptManager:
  6467                           	callstack 0
  6468                           
  6469 ;; *************** function _ECAN_WAKI_ISR *****************
  6470 ;; Defined at:
  6471 ;;		line 513 in file "mcc_generated_files/ecan.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1    wreg      void 
  6478 ;; Registers used:
  6479 ;;		wreg, pcl, pclath, pclatu, tosl, cstack
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used: 1
  6491 ;; Hardware stack levels required when called: 1
  6492 ;; This function calls:
  6493 ;;		Absolute function
  6494 ;;		_WakeUpDefaultInterruptHandler
  6495 ;; This function is called by:
  6496 ;;		_INTERRUPT_InterruptManager
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text35
  6501  001A9A                     __ptext35:
  6502                           	callstack 0
  6503  001A9A                     _ECAN_WAKI_ISR:
  6504                           	callstack 25
  6505  001A9A                     
  6506                           ;mcc_generated_files/ecan.c: 515:     WakeUpInterruptHandler();
  6507  001A9A  D802               	call	i2u12_48
  6508  001A9C  EF5A  F00D         	goto	i2u12_49
  6509  001AA0                     i2u12_48:
  6510  001AA0  0005               	push	
  6511  001AA2  6EFA               	movwf	pclath,c
  6512  001AA4  501B               	movf	_WakeUpInterruptHandler^0,w,c
  6513  001AA6  6EFD               	movwf	tosl,c
  6514  001AA8  501C               	movf	(_WakeUpInterruptHandler+1)^0,w,c
  6515  001AAA  6EFE               	movwf	tosh,c
  6516  001AAC  50F8               	movf	tblptru,w,c
  6517  001AAE  6EFF               	movwf	tosu,c
  6518  001AB0  50FA               	movf	pclath,w,c
  6519  001AB2  0012               	return		;indir
  6520  001AB4                     i2u12_49:
  6521  001AB4                     
  6522                           ;mcc_generated_files/ecan.c: 516:     PIR5bits.WAKIF = 0;
  6523  001AB4  9C77               	bcf	119,6,c	;volatile
  6524  001AB6  0012               	return		;funcret
  6525  001AB8                     __end_of_ECAN_WAKI_ISR:
  6526                           	callstack 0
  6527                           
  6528 ;; *************** function _WakeUpDefaultInterruptHandler *****************
  6529 ;; Defined at:
  6530 ;;		line 63 in file "mcc_generated_files/ecan.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		None
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6548 ;;Total ram usage:        0 bytes
  6549 ;; Hardware stack levels used: 1
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_ECAN_Initialize
  6554 ;;		_ECAN_WAKI_ISR
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text36
  6559  001B22                     __ptext36:
  6560                           	callstack 0
  6561  001B22                     _WakeUpDefaultInterruptHandler:
  6562                           	callstack 25
  6563  001B22  0012               	return		;funcret
  6564  001B24                     __end_of_WakeUpDefaultInterruptHandler:
  6565                           	callstack 0
  6566  0000                     
  6567                           	psect	text37
  6568  000000                     __ptext37:
  6569                           	callstack 0
  6570  000000                     
  6571                           	psect	rparam
  6572  0000                     
  6573                           	psect	temp
  6574  00005A                     btemp:
  6575                           	callstack 0
  6576  00005A                     	ds	1
  6577  0000                     int$flags	set	btemp
  6578  0000                     wtemp8	set	btemp+1
  6579  0000                     ttemp5	set	btemp+1
  6580  0000                     ttemp6	set	btemp+4
  6581  0000                     ttemp7	set	btemp+8
  6582                           
  6583                           	psect	idloc
  6584                           
  6585                           ;Config register IDLOC0 @ 0x200000
  6586                           ;	unspecified, using default values
  6587  200000                     	org	2097152
  6588  200000  FF                 	db	255
  6589                           
  6590                           ;Config register IDLOC1 @ 0x200001
  6591                           ;	unspecified, using default values
  6592  200001                     	org	2097153
  6593  200001  FF                 	db	255
  6594                           
  6595                           ;Config register IDLOC2 @ 0x200002
  6596                           ;	unspecified, using default values
  6597  200002                     	org	2097154
  6598  200002  FF                 	db	255
  6599                           
  6600                           ;Config register IDLOC3 @ 0x200003
  6601                           ;	unspecified, using default values
  6602  200003                     	org	2097155
  6603  200003  FF                 	db	255
  6604                           
  6605                           ;Config register IDLOC4 @ 0x200004
  6606                           ;	unspecified, using default values
  6607  200004                     	org	2097156
  6608  200004  FF                 	db	255
  6609                           
  6610                           ;Config register IDLOC5 @ 0x200005
  6611                           ;	unspecified, using default values
  6612  200005                     	org	2097157
  6613  200005  FF                 	db	255
  6614                           
  6615                           ;Config register IDLOC6 @ 0x200006
  6616                           ;	unspecified, using default values
  6617  200006                     	org	2097158
  6618  200006  FF                 	db	255
  6619                           
  6620                           ;Config register IDLOC7 @ 0x200007
  6621                           ;	unspecified, using default values
  6622  200007                     	org	2097159
  6623  200007  FF                 	db	255
  6624                           
  6625                           	psect	config
  6626                           
  6627                           ;Config register CONFIG1L @ 0x300000
  6628                           ;	VREG Sleep Enable bit
  6629                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  6630                           ;	LF-INTOSC Low-power Enable bit
  6631                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6632                           ;	SOSC Power Selection and mode Configuration bits
  6633                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6634                           ;	Extended Instruction Set
  6635                           ;	XINST = OFF, Disabled
  6636  300000                     	org	3145728
  6637  300000  15                 	db	21
  6638                           
  6639                           ;Config register CONFIG1H @ 0x300001
  6640                           ;	Oscillator
  6641                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  6642                           ;	PLL x4 Enable bit
  6643                           ;	PLLCFG = OFF, Disabled
  6644                           ;	Fail-Safe Clock Monitor
  6645                           ;	FCMEN = OFF, Disabled
  6646                           ;	Internal External Oscillator Switch Over Mode
  6647                           ;	IESO = OFF, Disabled
  6648  300001                     	org	3145729
  6649  300001  02                 	db	2
  6650                           
  6651                           ;Config register CONFIG2L @ 0x300002
  6652                           ;	Power Up Timer
  6653                           ;	PWRTEN = OFF, Disabled
  6654                           ;	Brown Out Detect
  6655                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  6656                           ;	Brown-out Reset Voltage bits
  6657                           ;	BORV = 3, 1.8V
  6658                           ;	BORMV Power level
  6659                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6660  300002                     	org	3145730
  6661  300002  7F                 	db	127
  6662                           
  6663                           ;Config register CONFIG2H @ 0x300003
  6664                           ;	Watchdog Timer
  6665                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6666                           ;	Watchdog Postscaler
  6667                           ;	WDTPS = 1048576, 1:1048576
  6668  300003                     	org	3145731
  6669  300003  7C                 	db	124
  6670                           
  6671                           ; Padding undefined space
  6672  300004                     	org	3145732
  6673  300004  FF                 	db	255
  6674                           
  6675                           ;Config register CONFIG3H @ 0x300005
  6676                           ;	ECAN Mux bit
  6677                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  6678                           ;	MSSP address masking
  6679                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  6680                           ;	Master Clear Enable
  6681                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  6682  300005                     	org	3145733
  6683  300005  89                 	db	137
  6684                           
  6685                           ;Config register CONFIG4L @ 0x300006
  6686                           ;	Stack Overflow Reset
  6687                           ;	STVREN = ON, Enabled
  6688                           ;	Boot Block Size
  6689                           ;	BBSIZ = BB2K, 2K word Boot Block size
  6690  300006                     	org	3145734
  6691  300006  91                 	db	145
  6692                           
  6693                           ; Padding undefined space
  6694  300007                     	org	3145735
  6695  300007  FF                 	db	255
  6696                           
  6697                           ;Config register CONFIG5L @ 0x300008
  6698                           ;	Code Protect 00800-03FFF
  6699                           ;	CP0 = OFF, Disabled
  6700                           ;	Code Protect 04000-07FFF
  6701                           ;	CP1 = OFF, Disabled
  6702                           ;	Code Protect 08000-0BFFF
  6703                           ;	CP2 = OFF, Disabled
  6704                           ;	Code Protect 0C000-0FFFF
  6705                           ;	CP3 = OFF, Disabled
  6706  300008                     	org	3145736
  6707  300008  0F                 	db	15
  6708                           
  6709                           ;Config register CONFIG5H @ 0x300009
  6710                           ;	Code Protect Boot
  6711                           ;	CPB = OFF, Disabled
  6712                           ;	Data EE Read Protect
  6713                           ;	CPD = OFF, Disabled
  6714  300009                     	org	3145737
  6715  300009  C0                 	db	192
  6716                           
  6717                           ;Config register CONFIG6L @ 0x30000A
  6718                           ;	Table Write Protect 00800-03FFF
  6719                           ;	WRT0 = OFF, Disabled
  6720                           ;	Table Write Protect 04000-07FFF
  6721                           ;	WRT1 = OFF, Disabled
  6722                           ;	Table Write Protect 08000-0BFFF
  6723                           ;	WRT2 = OFF, Disabled
  6724                           ;	Table Write Protect 0C000-0FFFF
  6725                           ;	WRT3 = OFF, Disabled
  6726  30000A                     	org	3145738
  6727  30000A  0F                 	db	15
  6728                           
  6729                           ;Config register CONFIG6H @ 0x30000B
  6730                           ;	Config. Write Protect
  6731                           ;	WRTC = OFF, Disabled
  6732                           ;	Table Write Protect Boot
  6733                           ;	WRTB = OFF, Disabled
  6734                           ;	Data EE Write Protect
  6735                           ;	WRTD = OFF, Disabled
  6736  30000B                     	org	3145739
  6737  30000B  E0                 	db	224
  6738                           
  6739                           ;Config register CONFIG7L @ 0x30000C
  6740                           ;	Table Read Protect 00800-03FFF
  6741                           ;	EBTR0 = OFF, Disabled
  6742                           ;	Table Read Protect 04000-07FFF
  6743                           ;	EBTR1 = OFF, Disabled
  6744                           ;	Table Read Protect 08000-0BFFF
  6745                           ;	EBTR2 = OFF, Disabled
  6746                           ;	Table Read Protect 0C000-0FFFF
  6747                           ;	EBTR3 = OFF, Disabled
  6748  30000C                     	org	3145740
  6749  30000C  0F                 	db	15
  6750                           
  6751                           ;Config register CONFIG7H @ 0x30000D
  6752                           ;	Table Read Protect Boot
  6753                           ;	EBTRB = OFF, Disabled
  6754  30000D                     	org	3145741
  6755  30000D  40                 	db	64
  6756                           tosu	equ	0xFFF
  6757                           tosh	equ	0xFFE
  6758                           tosl	equ	0xFFD
  6759                           stkptr	equ	0xFFC
  6760                           pclatu	equ	0xFFB
  6761                           pclath	equ	0xFFA
  6762                           pcl	equ	0xFF9
  6763                           tblptru	equ	0xFF8
  6764                           tblptrh	equ	0xFF7
  6765                           tblptrl	equ	0xFF6
  6766                           tablat	equ	0xFF5
  6767                           prodh	equ	0xFF4
  6768                           prodl	equ	0xFF3
  6769                           indf0	equ	0xFEF
  6770                           postinc0	equ	0xFEE
  6771                           postdec0	equ	0xFED
  6772                           preinc0	equ	0xFEC
  6773                           plusw0	equ	0xFEB
  6774                           fsr0h	equ	0xFEA
  6775                           fsr0l	equ	0xFE9
  6776                           wreg	equ	0xFE8
  6777                           indf1	equ	0xFE7
  6778                           postinc1	equ	0xFE6
  6779                           postdec1	equ	0xFE5
  6780                           preinc1	equ	0xFE4
  6781                           plusw1	equ	0xFE3
  6782                           fsr1h	equ	0xFE2
  6783                           fsr1l	equ	0xFE1
  6784                           bsr	equ	0xFE0
  6785                           indf2	equ	0xFDF
  6786                           postinc2	equ	0xFDE
  6787                           postdec2	equ	0xFDD
  6788                           preinc2	equ	0xFDC
  6789                           plusw2	equ	0xFDB
  6790                           fsr2h	equ	0xFDA
  6791                           fsr2l	equ	0xFD9
  6792                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         153
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      89
    BANK0           160      4     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    hazardButton@b2FunctionActive	PTR int  size(2) Largest target is 2
		 -> b2FuncActive(COMRAM[2]), 

    hazardButton@b2Latch	PTR int  size(2) Largest target is 2
		 -> latchb2(COMRAM[2]), 

    rightTurnButton@b10FunctionActive	PTR int  size(2) Largest target is 2
		 -> b10FuncActive(COMRAM[2]), 

    rightTurnButton@b10Latch	PTR int  size(2) Largest target is 2
		 -> buttonRuntime@var(COMRAM[2]), latchb10(COMRAM[2]), 

    leftTurnButton@b1FunctionActive	PTR int  size(2) Largest target is 2
		 -> b1FuncActive(COMRAM[2]), 

    leftTurnButton@b1Latch	PTR int  size(2) Largest target is 2
		 -> buttonRuntime@var(COMRAM[2]), latchb1(COMRAM[2]), 

    ECAN_SetWakeUpInterruptHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> WakeUpDefaultInterruptHandler(), 

    WakeUpInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), WakeUpDefaultInterruptHandler(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> rx(COMRAM[14]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> tx7(BANK0[14]), tx6(BANK0[14]), tx5(BANK0[14]), tx4(BANK0[14]), 
		 -> tx3(BANK0[14]), tx2(BANK0[14]), tx1(BANK0[14]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_canHazardSignal
    _main->_canLeftSignal
    _main->_canRightSignal
    _init->_auxBattConn
    _init->_batterySOC
    _init->_batterySOCGraphic
    _init->_batteryTemp
    _init->_hazardSignal
    _init->_leftTurnIndicator
    _init->_motorControllerTemp
    _init->_motorSpeed
    _init->_rightTurnIndicator
    _init->_warningLED
    _warningLED->_EUSART1_Write
    _rightTurnIndicator->_EUSART1_Write
    _motorSpeed->_EUSART1_Write
    _motorControllerTemp->_EUSART1_Write
    _leftTurnIndicator->_EUSART1_Write
    _hazardSignal->_EUSART1_Write
    _batteryTemp->_EUSART1_Write
    _batterySOCGraphic->_EUSART1_Write
    _batterySOC->_EUSART1_Write
    _auxBattConn->_EUSART1_Write
    _canRightSignal->_CAN_transmit
    _canLeftSignal->_CAN_transmit
    _canHazardSignal->_CAN_transmit
    _CAN_transmit->_convertCANid2Reg
    _SYSTEM_Initialize->_ECAN_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _ECAN_Initialize->_ECAN_SetWakeUpInterruptHandler
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   31108
                                             28 COMRAM     2     2      0
                                              0 BANK0      4     4      0
                        _CAN_receive
                  _SYSTEM_Initialize
                        _auxBattConn
                    _canHazardSignal
                      _canLeftSignal
                     _canRightSignal
                       _hazardButton
                       _hazardSignal
                               _init
                     _leftTurnButton
                  _leftTurnIndicator
                         _motorSpeed
                    _rightTurnButton
                 _rightTurnIndicator
                         _warningLED
 ---------------------------------------------------------------------------------
 (1) _rightTurnButton                                      6     2      4     546
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _leftTurnButton                                       6     2      4     546
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    6570
                        _auxBattConn
                         _batterySOC
                  _batterySOCGraphic
                        _batteryTemp
                       _hazardSignal
                  _leftTurnIndicator
                _motorControllerTemp
                         _motorSpeed
                 _rightTurnIndicator
                         _warningLED
 ---------------------------------------------------------------------------------
 (1) _warningLED                                          13    11      2     648
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _rightTurnIndicator                                  13    11      2    1008
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _motorSpeed                                          13    11      2     558
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _motorControllerTemp                                 13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _leftTurnIndicator                                   13    11      2    1008
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _hazardSignal                                        13    11      2     828
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _batteryTemp                                         13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _batterySOCGraphic                                   13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _batterySOC                                          13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _auxBattConn                                         13    11      2     648
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _hazardButton                                         6     2      4     366
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _canRightSignal                                       2     0      2    5112
                                             26 COMRAM     2     0      2
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (1) _canLeftSignal                                        2     0      2    5112
                                             26 COMRAM     2     0      2
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (1) _canHazardSignal                                      2     0      2    5112
                                             26 COMRAM     2     0      2
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (2) _CAN_transmit                                         7     5      2    4901
                                             20 COMRAM     6     4      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (3) _convertCANid2Reg                                    18     5     13    2425
                                              2 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                    _ECAN_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0     121
                                              4 COMRAM     1     1      0
     _ECAN_SetWakeUpInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ECAN_SetWakeUpInterruptHandler                       2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    2448
                                             21 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     347
                                              2 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4    1075
                                              2 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                      _ECAN_WAKI_ISR
 ---------------------------------------------------------------------------------
 (5) _ECAN_WAKI_ISR                                        0     0      0       0
                   Absolute function *
      _WakeUpDefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _WakeUpDefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _SYSTEM_Initialize
     _ECAN_Initialize
       _ECAN_SetWakeUpInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _auxBattConn
     _EUSART1_Write
   _canHazardSignal
     _CAN_transmit
       _convertCANid2Reg
   _canLeftSignal
     _CAN_transmit
   _canRightSignal
     _CAN_transmit
   _hazardButton
   _hazardSignal
     _EUSART1_Write
   _init
     _auxBattConn
     _batterySOC
       _EUSART1_Write
     _batterySOCGraphic
       _EUSART1_Write
     _batteryTemp
       _EUSART1_Write
     _hazardSignal
     _leftTurnIndicator
       _EUSART1_Write
     _motorControllerTemp
       _EUSART1_Write
     _motorSpeed
       _EUSART1_Write
     _rightTurnIndicator
       _EUSART1_Write
     _warningLED
       _EUSART1_Write
   _leftTurnButton
   _leftTurnIndicator
   _motorSpeed
   _rightTurnButton
   _rightTurnIndicator
   _warningLED

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_WAKI_ISR
     Absolute function(Fake) *
     _WakeUpDefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      54        0.0%
BANK13             100      0       0      23        0.0%
BITBANK12          100      0       0      21        0.0%
BANK12             100      0       0      22        0.0%
BITBANK11          100      0       0      53        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      52        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      51        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      50        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      49        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      48        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      47        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      68       5       65.0%
BITBIGSFRllllhl     62      0       0      43        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      59       1       94.7%
BITBANK14           41      0       0      55        0.0%
BANK14              41      0       0      56        0.0%
BITBIGSFRhhhl       20      0       0      27        0.0%
BITBIGSFRhhhhlh     1D      0       0      25        0.0%
BITBIGSFRllllhh     1D      0       0      39        0.0%
BITBIGSFRhhhhh       D      0       0      24        0.0%
BITBIGSFRlhh         8      0       0      29        0.0%
BITBIGSFRlhlllh      6      0       0      33        0.0%
BITBIGSFRllh         5      0       0      36        0.0%
BITBIGSFRlhlhll      4      0       0      32        0.0%
BITBIGSFRlllhhh      3      0       0      37        0.0%
BITBIGSFRlhlhhl      3      0       0      31        0.0%
BITBIGSFRhl          3      0       0      28        0.0%
BITBIGSFRlhlhhh      2      0       0      30        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRllllhh      2      0       0      40        0.0%
BITBIGSFRlllhll      2      0       0      38        0.0%
BITBIGSFRlhllll      2      0       0      35        0.0%
BITBIGSFRllllll      2      0       0      45        0.0%
BITBIGSFRlhlllh      1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1      46        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Dec 05 20:19:22 2023

                                               l43 19B6                                                 l70 1ACC  
                                               l82 1B08                                                 l67 1ABA  
                                               l85 1AFE                                                 l88 1B12  
                                    ?_hazardButton 003A                                                 _rx 001E  
                                    ?_hazardSignal 003B                                                l101 1B20  
                                              l143 19EE                                                l502 0D18  
                                              l511 071A                                                l512 091E  
                                              l513 081C                                                l516 091E  
                                              l526 0B72                                                l702 13C6  
                                              l519 0A4A                                                l711 145E  
                                              l720 1626                                                l705 132E  
                                              l546 0FC6                                                l554 0E8C  
                                              l714 14F6                                                l723 17EE  
                                              l708 1886                                                l549 1978  
                                              l557 1B1C                                                l581 1AE2  
                                              l717 16BE                                                l726 1756  
                                              l670 0090                                                l584 1AF4  
                                              l680 05FE                                                l729 1900  
                                              l842 1A72                                                l754 11A6  
                                              l667 008C                                                l836 1A1A  
                                              l782 1296                                                l839 1A46  
                                              l768 10B6                                                l699 158E  
            ECAN_SetWakeUpInterruptHandler@handler 003A                                 motorSpeed@checksum 003E  
                                              _tx1 00B4                                                _tx2 00A6  
                                              _tx3 0098                                                _tx4 008A  
                                              _tx5 007C                                                _tx6 006E  
                                              _tx7 0060                                                tosl 000FFD  
                                              wreg 000FE8                                         _TXSTA1bits 000FAC  
                       ??_convertReg2StandardCANid 003E                             batterySOCGraphic@value 003B  
                                             l4000 0676                                               l4010 06A4  
                                             l4002 067A                                               l4100 0EAE  
                                             l4020 06F4                                               l4012 06B4  
                                             l4004 067E                                               l4110 0F70  
                                             l4102 0ED8                                               l4030 0774  
                                             l4022 0704                                               l4014 06C4  
                                             l4006 0682                                               l4112 0FA6  
                                             l4104 0EF0                                               l4120 1904  
                                             l4040 0796                                               l4032 0778  
                                             l4024 0714                                               l4016 06D4  
                                             l4008 0694                                               l4200 15F4  
                                             l4114 0FB6                                               l4106 0F22  
                                             l4122 192E                                               l4130 1AE4  
                                             l4050 07E6                                               l4042 07A6  
                                             l4034 077C                                               l4026 0716  
                                             l4018 06E4                                               l4202 15FA  
                                             l4210 13C8                                               l4108 0F58  
                                             l4124 1958                                               l4060 082A  
                                             l4052 07F6                                               l4044 07B6  
                                             l4036 0780                                               l4028 0728  
                                             l4204 160A                                               l4300 14AE  
                                             l4220 1406                                               l4212 13E0  
                                             l4140 1368                                               l4132 1330  
                                             l4126 1968                                               l4118 1904  
                                             l4070 0886                                               l4062 0876  
                                             l4054 0806                                               l4046 07C6  
                                             l4038 0784                                               l4206 1610  
                                             l4310 14E0                                               l4302 14B4  
                                             l4230 1442                                               l4222 1416  
                                             l4214 13EA                                               l4150 139A  
                                             l4142 136E                                               l4134 1348  
                                             l4400 094C                                               l4080 08D8  
                                             l4072 0898                                               l4064 087A  
                                             l4056 0816                                               l4048 07D6  
                                             l4320 1650                                               l4208 1620  
                                             l4160 1510                                               l4312 14F0  
                                             l4304 14C4                                               l4232 1448  
                                             l4224 141C                                               l4216 13F0  
                                             l4152 13AA                                               l4144 137E  
                                             l4136 1352                                               l4240 12BA  
                                             l4410 09D0                                               l4402 097E  
                                             l4082 08E8                                               l4074 08A8  
                                             l4066 087E                                               l4330 168C  
                                             l4322 1660                                               l4314 1628  
                                             l4170 1546                                               l4162 151A  
                                             l4306 14CA                                               l4234 1458  
                                             l4226 142C                                               l4218 1400  
                                             l4154 13B0                                               l4146 1384  
                                             l4138 1358                                               l4250 12EC  
                                             l4242 12C0                                               l5050 1116  
                                             l4420 0A20                                               l4412 09E0  
                                             l4404 098A                                               l4084 08F8  
                                             l4076 08B8                                               l4068 0882  
                                             l5060 1280                                               l4340 1758  
                                             l4332 1692                                               l4324 1666  
                                             l4316 1640                                               l4180 1578  
                                             l4172 154C                                               l4164 1520  
                                             l4308 14DA                                               l4228 1432  
                                             l4156 13C0                                               l4148 1394  
                                             l4260 1328                                               l4252 12FC  
                                             l4244 12D0                                               l4236 1298  
                                             l5052 115E                                               l4500 10E4  
                                             l5044 1026                                               l4094 0E90  
                                             l4430 0A68                                               l4422 0A30  
                                             l4414 09F0                                               l4406 09B0  
                                             l4086 0908                                               l4078 08C8  
                                             l4270 1828                                               l4262 17F0  
                                             l4350 1796                                               l4342 1770  
                                             l4334 16A2                                               l4326 1676  
                                             l4318 164A                                               l4190 15B8  
                                             l4182 1588                                               l4174 155C  
                                             l4166 1530                                               l4158 14F8  
                                             l4254 1302                                               l4246 12D6  
                                             l4238 12B0                                               l5054 1190  
                                             l4510 1140                                               l5046 106E  
                                             l4096 0EA0                                               l4440 0AE8  
                                             l4432 0A74                                               l4424 0A40  
                                             l4416 0A00                                               l4408 09C0  
                                             l4088 0918                                               l5056 1206  
                                             l4280 185A                                               l4272 182E  
                                             l4264 1808                                               l4360 17D2  
                                             l4352 17A6                                               l4344 177A  
                                             l4336 16A8                                               l4328 167C  
                                             l4192 15C8                                               l4184 1590  
                                             l4176 1562                                               l4168 1536  
                                             l4256 1312                                               l4248 12E6  
                                             l4504 10F8                                               l5048 10A0  
                                             l4600 0070                                               l4098 0EA6  
                                             l4450 0B38                                               l4442 0AF8  
                                             l4434 0AA6                                               l4426 0A42  
                                             l4418 0A10                                               l5058 124E  
                                             l4282 186A                                               l4274 183E  
                                             l4266 1812                                               l4362 17D8  
                                             l4354 17AC                                               l4346 1780  
                                             l4370 16E2                                               l4338 16B8  
                                             l4194 15CE                                               l4186 15A8  
                                             l4178 1572                                               l4290 1478  
                                             l4258 1318                                               l4506 112C  
                                             l4514 116C                                               l4530 0FCC  
                                             l4610 00AA                                               l4452 0B48  
                                             l4444 0B08                                               l4436 0AB2  
                                             l4428 0A5A                                               l4460 0B70  
                                             l3900 1B0A                                               l4284 1870  
                                             l4276 1844                                               l4268 1818  
                                             l4364 17E8                                               l4356 17BC  
                                             l4348 1790                                               l4380 1714  
                                             l4372 16E8                                               l4196 15DE  
                                             l4188 15B2                                               l4292 1482  
                                             l4540 103C                                               l4532 0FE0  
                                             l4700 0330                                               l4620 00D8  
                                             l4612 00AE                                               l4454 0B58  
                                             l4446 0B18                                               l4438 0AD8  
                                             l4470 1ADA                                               l3910 0D1A  
                                             l3902 1ABA                                               l4286 1880  
                                             l4278 1854                                               l4358 17C2  
                                             l4390 1750                                               l4382 1724  
                                             l4374 16F8                                               l4366 16C0  
                                             l4198 15E4                                               l4294 1488  
                                             l4534 0FF4                                               l4710 0378  
                                             l4702 0340                                               l4630 012A  
                                             l4622 00DE                                               l4614 00C6  
                                             l4456 0B68                                               l4448 0B28  
                                             l4392 0920                                               l4472 1ADE  
                                             l4464 1ACE                                               l3920 0DA6  
                                             l3912 0D2C                                               l4480 1A0E  
                                             l3904 1AC8                                               l4384 172A  
                                             l4376 16FE                                               l4368 16D8  
                                             l4296 1498                                               l4288 1460  
                                             l4544 1050                                               l4528 0FC8  
                                             l4720 03B4                                               l4712 0388  
                                             l4704 0352                                               l4640 016C  
                                             l4632 013C                                               l4624 00F4  
                                             l4616 00C6                                               l4608 0092  
                                             l4394 0924                                               l3906 1B14  
                                             l4466 1AD2                                               l3930 0E22  
                                             l3922 0DD8                                               l3914 0D38  
                                             l4490 1A62                                               l4482 1A1C  
                                             l4562 11A8                                               l4386 173A  
                                             l4378 170E                                               l4298 149E  
                                             l4474 1888                                               l4538 1008  
                                             l4730 0416                                               l4722 03BC  
                                             l4714 0394                                               l4706 0364  
                                             l4650 01C4                                               l4634 0144  
                                             l4626 0106                                               l4642 017C  
                                             l4618 00D0                                               l4396 0932  
                                             l4468 1AD6                                               l3924 0DE0  
                                             l3916 0D66                                               l3932 0E32  
                                             l3908 0D1A                                               l4492 1A66  
                                             l4484 1A36                                               l4476 19F0  
                                             l4572 11E8                                               l4564 11AC  
                                             l4388 1740                                               l4548 107C  
                                             l4740 0460                                               l4732 042A  
                                             l4724 03D0                                               l4708 036C  
                                             l4716 03A4                                               l4652 01CC  
                                             l4644 018E                                               l4660 0204  
                                             l4636 0150                                               l4628 0118  
                                             l4398 0940                                               l3950 19B2  
                                             l3942 197A                                               l3934 0E4A  
                                             l3926 0DE6                                               l3918 0DA0  
                                             l4486 1A3A                                               l4478 1A0A  
                                             l4574 121C                                               l4566 11C0  
                                             l4582 125C                                               l4494 10B8  
                                             l4750 04E0                                               l4742 0470  
                                             l4734 0432                                               l4726 03E4  
                                             l4718 03AC                                               l4670 025C  
                                             l4662 0216                                               l4654 01D8  
                                             l4646 01A0                                               l4638 0160  
                                             l3960 0B74                                               l3944 198E  
                                             l3952 1B1E                                               l3936 0E7C  
                                             l3928 0DF4                                               l4488 1A48  
                                             l4568 11D4                                               l4496 10BC  
                                             l4760 0548                                               l4752 04FC  
                                             l4744 048C                                               l4736 043E  
                                             l4728 03F8                                               l4680 02A4  
                                             l4672 0268                                               l4664 0228  
                                             l4656 01E8                                               l4648 01B2  
                                             l3970 0BA6                                               l3962 0B78  
                                             l3946 199A                                               l3954 19B8  
                                             l4578 1230                                               l4498 10D0  
                                             l4762 0558                                               l4770 0594  
                                             l4746 04A8                                               l4754 0514  
                                             l4738 0444                                               l4690 02EE  
                                             l4682 02B0                                               l4666 0240  
                                             l4674 0278                                               l4658 01F4  
                                             l3980 0CDC                                               l3972 0BA8  
                                             l3964 0B8C                                               l3948 19A6  
                                             l3956 19DC                                               l4780 05EE  
                                             l4772 05AC                                               l4764 0568  
                                             l4756 0524                                               l4748 04C4  
                                             l4692 0300                                               l4684 02C0  
                                             l4676 028A                                               l4668 024C  
                                             l4596 0050                                               l3990 0D02  
                                             l3982 0CEE                                               l3974 0BAA  
                                             l3966 0B9A                                               l3958 19EC  
                                             l4774 05BC                                               l4766 0578  
                                             l4758 0530                                               l4694 0308  
                                             l4686 02CC                                               l4678 029C  
                                             l4598 0054                                               l3984 0CFA  
                                             l3976 0CD8                                               l3968 0B9C  
                                             l3896 1B00                                               l3992 0606  
                                             l4776 05C4                                               l4768 0588  
                                             l4696 0314                                               l4688 02DC  
                                             l3986 0CFC                                               l3978 0CDA  
                                             l3898 1AF6                                               l3994 0616  
                                             l4778 05DE                                               l4698 0324  
                                             l3988 0CFE                                               l3996 0626  
                                             l3998 0672                                               u1200 1AC8  
                                             u1201 1AC4                                               u1210 0D2C  
                                             u1211 0D28                                               u1310 0932  
                                             u1311 092E                                               u2007 138A  
                                             u1320 0940                                               u1240 0B8C  
                                             u1400 126E                                               u1305 1936  
                                             u1321 093C                                               u1241 0B88  
                                             u1225 0DB8                                               u2017 13A0  
                                             u1330 0A5A                                               u1250 0D18  
                                             u1410 0070                                               u1331 0A56  
                                             u1251 0D14                                               u1235 0E5C  
                                             u2107 14BA                                               u2027 13B6  
                                             u1411 006C                                               u1340 0A68  
                                             u1260 0626                                               u1500 01C4  
                                             u1420 0088                                               u1341 0A64  
                                             u1261 0622                                               u2117 14D0  
                                             u2037 13F6                                               u1501 01C0  
                                             u1421 0084                                               _LATA 000F89  
                                             u1270 0728                                               u1350 117C  
                                             u1510 0216                                               u1430 0106  
                                             _LATB 000F8A                                               u1271 0724  
                                             u2207 15EA                                               u2127 14E6  
                                             u2047 140C                                               u1351 1176  
                                             u1511 0212                                               u1431 0102  
                                             _LATC 000F8B                                               u1280 082A  
                                             u1360 117E                                               u1600 042A  
                                             u1520 0228                                               u1440 0118  
                                             _LATD 000F8C                                               u1281 0826  
                                             u2217 1600                                               u2137 1526  
                                             u2057 1422                                               u1601 0426  
                                             u1521 0224                                               u1441 0114  
                                             _LATE 000F8D                                               u1370 108C  
                                             u1610 0460                                               u1530 028A  
                                             u1450 012A                                               u2307 171A  
                                             u2227 1616                                               u2147 153C  
                                             u2067 1438                                               u1371 1086  
                                             u1611 045C                                               u1531 0286  
                                             u1451 0126                                               u1380 108E  
                                             u1700 0558                                               u1620 0470  
                                             u1540 029C                                               u1460 013C  
                                             u2317 1730                                               u2237 1656  
                                             u2157 1552                                               u2077 144E  
                                             u1701 0554                                               u1621 046C  
                                             u1541 0298                                               u1461 0138  
                                             u1390 126C                                               u1710 05AC  
                                             u1630 048C                                               u1550 02EE  
                                             u1470 018E                                               u1295 0F02  
                                             u1391 1266                                               u2407 184A  
                                             u2327 1746                                               u2247 166C  
                                             u2167 1568                                               u2087 148E  
                                             u1711 05A8                                               u1631 0488  
                                             u1551 02EA                                               u1471 018A  
                                             u1720 05DE                                               u1640 04A8  
                                             u1560 0300                                               u1480 01A0  
                                             u2417 1860                                               u2337 1786  
                                             u2257 1682                                               u2177 157E  
                                             u2097 14A4                                               u1721 05DA  
                                             u1641 04A4                                               u1561 02FC  
                                             u1481 019C                                               u1650 04C4  
                                             u1570 0352                                               u1490 01B2  
                                             u2427 1876                                               u2347 179C  
                                             u2267 1698                                               u2187 15BE  
                                             u1651 04C0                                               u1571 034E  
                                             u1491 01AE                                               u1660 04E0  
                                             u1580 0364                                               u2357 17B2  
                                             u2277 16AE                                               u2197 15D4  
                                             u1661 04DC                                               u1581 0360  
                                             u1670 04FC                                               u1590 0416  
                                             u2367 17C8                                               u2287 16EE  
                                             u1671 04F8                                               u1591 0412  
                                             u1807 0252                                               u1680 0514  
                                             u2377 17DE                                               u2297 1704  
                                             u1681 0510                                               u1817 026E  
                                             u1737 009C                                        main@counter 00C2  
                                             u1690 0548                                               u2387 181E  
                                             u1907 057E                                               u1691 0544  
                                             u1827 02B6                                               u1747 00B8  
                                             u2397 1834                                               u1917 05B2  
                                             u1837 02D2                                               u1757 00E8  
                                             u1927 05E4                                               u1847 031A  
                                             u1767 0156                                               u1937 12C6  
                                             u1857 0336                                               u1777 0172  
                                             u1947 12DC                                               u1867 037E  
                                             u1787 01DE                                               u1957 12F2  
                                             u1877 039A                                               u1797 01FA  
                                             u1967 1308                                               u1887 051A  
                                             u1977 131E                                               u1897 055E  
                                             u1987 135E                                               u1997 1374  
                              _motorControllerTemp 1460                                               _WPUB 000F5B  
                                    _EUSART1_Write 1AB8                            rightTurnButton@b10Latch 003C  
                                             _main 0050                                               _init 1888  
                     convertCANid2Reg@passedInEIDH 003F                       convertCANid2Reg@passedInEIDL 0041  
                                             fsr2h 000FDA                                               indf2 000FDF  
                                             fsr2l 000FD9                                               btemp 005A  
                     convertCANid2Reg@passedInSIDH 0043                       convertCANid2Reg@passedInSIDL 0045  
                                             start 004C                                       warningLED@v2 0040  
                                     warningLED@v3 0042                                       warningLED@v4 0044  
                                     ___param_bank 000000                                     ??_hazardButton 003E  
                                 ?_canHazardSignal 0052                               ?_motorControllerTemp 003B  
                                   ??_hazardSignal 003D                         __end_of_rightTurnIndicator 13C8  
                    __end_of_OSCILLATOR_Initialize 1AF6                                              ?_main 0038  
                                            ?_init 0038                                              _BSEL0 000E7D  
                                            i2l110 0040                                              i2l560 1AB6  
                                            i2l493 1B22                                              _MSEL0 000E79  
                                            _MSEL1 000E7A                                              _MSEL2 000E7B  
                                            _MSEL3 000E7C                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                                     _b1FuncActive 0036                              CAN_receive@tempCanMsg 004D  
                             __end_of_CAN_transmit 0920                             leftTurnIndicator@value 003B  
                                   ?_EUSART1_Write 0038                                       _b2FuncActive 0032  
                                            pclath 000FFA                                              pclatu 000FFB  
                                            ttemp5 005B                                              ttemp6 005E  
                                            ttemp7 0062                convertReg2ExtendedCANid@ConvertedID 0049  
                                            status 000FD8                                              wtemp8 005B  
                             CAN_transmit@tempEIDH 004E                               CAN_transmit@tempEIDL 004F  
                             CAN_transmit@tempSIDH 0050                               CAN_transmit@tempSIDL 0051  
               _EUSART1_DefaultFramingErrorHandler 000000                                       _b3FuncActive 0011  
                         motorControllerTemp@value 003B                                    __initialization 1A74  
                       __end_of_EUSART1_Initialize 19B8                                       __end_of_main 0606  
                                     __end_of_init 1902                              ??_motorControllerTemp 003D  
                                     _b4FuncActive 000F                        ?_INTERRUPT_InterruptManager 0038  
                                           ??_main 0054                                             ??_init 0046  
                                _leftTurnIndicator 14F8                                      __activetblptr 000002  
                               ?_leftTurnIndicator 003B                                       _b5FuncActive 000D  
                  ??_WakeUpDefaultInterruptHandler 0038                                  ??_ECAN_Initialize 003C  
                                 batteryTemp@value 003B                                             _CANCON 000F6F  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                           _CIOCON 000F70                                ??_leftTurnIndicator 003D  
                                     _b6FuncActive 000B                                             i2l2026 1A9A  
                                           i2l2028 1AB4                                             i2l2270 003C  
                                           i2l2264 0012                                             i2l2266 0020  
                                           i2l2268 002E                                             _RCREG1 000FAE  
                                           _RCSTA1 000FAB                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB1D0 000F36                                             _RXB0D4 000F6A  
                                           _RXB1D1 000F37                                             _RXB0D5 000F6B  
                                           _RXB1D2 000F38                                             _RXB0D6 000F6C  
                                           _RXB1D3 000F39                                             _RXB0D7 000F6D  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                           _SPBRG1 000FAF                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB1D0 000F16  
                                           _TXB0D4 000F2A                                             _TXB1D1 000F17  
                                           _TXB0D5 000F2B                                             _TXB1D2 000F18  
                                           _TXB0D6 000F2C                                             _TXB1D3 000F19  
                                           _TXB0D7 000F2D                                             _TXB2D0 000F06  
                                           _TXB1D4 000F1A                                             _TXB2D1 000F07  
                                           _TXB1D5 000F1B                                             _TXB2D2 000F08  
                                           _TXB1D6 000F1C                                             _TXB2D3 000F09  
                                           _TXB1D7 000F1D                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             _TXREG1 000FAD  
                                           _TXSTA1 000FAC                               canRightSignal@number 0052  
                                     _b7FuncActive 0009                           ?_EUSART1_SetErrorHandler 003A  
                                           _lastb1 0019                                             _lastb2 0015  
                        __end_of_leftTurnIndicator 1590                                       _b8FuncActive 0007  
                                           clear_0 1A7A                                             clear_1 1A86  
                                           isa$std 000001                   ??_EUSART1_SetOverrunErrorHandler 003C  
                  ?_EUSART1_SetOverrunErrorHandler 003A                                      _canLeftSignal 1A1C  
                                     _b9FuncActive 0005                   __end_of_convertReg2StandardCANid 197A  
                                           tblptru 000FF8                                    ??_EUSART1_Write 003A  
                       rightTurnIndicator@checksum 003E                               __end_of_hazardButton 1298  
                                _SYSTEM_Initialize 1ACE                               __end_of_hazardSignal 1628  
                                       __accesstop 0060                            __end_of__initialization 1A8C  
                               ?_SYSTEM_Initialize 0038                           _convertReg2ExtendedCANid 0E8E  
                           CAN_receive@returnValue 004F                                      ___rparam_used 000001  
                               warningLED@checksum 003E                                     __pcstackCOMRAM 0038  
                                   _leftTurnButton 10B8                                ??_SYSTEM_Initialize 003D  
                              batteryTemp@checksum 003E                                     ?_canLeftSignal 0052  
                                    _ECAN_WAKI_ISR 1A9A              convertReg2StandardCANid@tempRXBn_SIDH 0040  
            convertReg2StandardCANid@tempRXBn_SIDL 003A                              leftTurnButton@b1Latch 003C  
                        __end_of_SYSTEM_Initialize 1AE4                                         __pbssBANK0 0060  
            __end_of_WakeUpDefaultInterruptHandler 1B24                      _WakeUpDefaultInterruptHandler 1B22  
                                       __pnvCOMRAM 0056                                         _batterySOC 1758  
                                hazardSignal@value 003B                             __end_of_leftTurnButton 11A8  
                  __end_of_EUSART1_SetErrorHandler 1B14                                       _CAN_transmit 0606  
                 rightTurnButton@b10FunctionActive 003A                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                   ??_ECAN_SetWakeUpInterruptHandler 003C  
                  ?_ECAN_SetWakeUpInterruptHandler 003A                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
           __end_of_EUSART1_SetFramingErrorHandler 1B0A                     _EUSART1_SetFramingErrorHandler 1B00  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                   ?_ECAN_WAKI_ISR 0038                                            i2u12_48 1AA0  
                                          i2u12_49 1AB4                                            _RXB0DLC 000F65  
                                          i2u27_40 0020                                            i2u27_41 001C  
                                          _RXB1DLC 000F35                                            i2u28_40 002E  
                                          i2u28_41 002A                                            i2u29_40 003C  
                                          i2u29_41 0038                                            _OSCTUNE 000F9B  
                                          _SPBRGH1 000F7D                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                                          _RXFCON0 000E46                                            _RXFCON1 000E47  
                               _rightTurnIndicator 1330                                    motorSpeed@value 003B  
                        leftTurnIndicator@checksum 003E                                ?_rightTurnIndicator 003B  
                                          __Hparam 0000                                    ?_leftTurnButton 003A  
                                          __Lparam 0000                          ?_convertReg2StandardCANid 003A  
                                  _ECAN_Initialize 0B74                                    ??_canLeftSignal 0054  
                                   hazardSignal@v2 0040                                            __pcinit 1A74  
                                   hazardSignal@v3 0042                                     hazardSignal@v4 0044  
                                          __ramtop 0F00                                            _blinkb1 0017  
                                          _blinkb2 0013                                            __ptext0 0050  
                                          __ptext1 0FC8                                            __ptext2 10B8  
                                          __ptext3 1888                                            __ptext4 1298  
                                          __ptext5 1330                                            __ptext6 13C8  
                                          __ptext7 1460                                            __ptext8 14F8  
                                          __ptext9 1590                                            _lastb10 0003  
                                          _latchb1 0034                                            _latchb2 0030  
                             ??_rightTurnIndicator 003D                              _OSCILLATOR_Initialize 1AE4  
                                ??_rightTurnButton 003E                                 _EUSART1_Initialize 197A  
                                 _convertCANid2Reg 0D1A                           ??_PIN_MANAGER_Initialize 003A  
                              hazardButton@b2Latch 003C                               end_of_initialization 1A8C  
                           _WakeUpInterruptHandler 001B                                ?_EUSART1_Initialize 0038  
                                    __Lmediumconst 0000                        _EUSART1_OverrunErrorHandler 0056  
                                    ??_batteryTemp 003D                                      ??_CAN_receive 004F  
                                      ?_batterySOC 003B                   fp__WakeUpDefaultInterruptHandler 0000  
                   ?_WakeUpDefaultInterruptHandler 0038                        __end_of_motorControllerTemp 14F8  
                                        _RXF10EIDH 000E5A                                          _RXF10EIDL 000E5B  
                                        _RXF11EIDH 000E5E                                          _RXF11EIDL 000E5F  
                                        _RXF12EIDH 000E62                                          _RXF12EIDL 000E63  
                                        _RXF13EIDH 000E66                                          _RXF13EIDL 000E67  
                                        _RXF14EIDH 000E6A                                          _RXF14EIDL 000E6B  
                                        _RXF15EIDH 000E6E                                          _RXF15EIDL 000E6F  
                                        _RXF10SIDH 000E58                                          _RXF10SIDL 000E59  
                                        _RXF11SIDH 000E5C                                          _RXF11SIDL 000E5D  
                                        _RXF12SIDH 000E60                                          _RXF12SIDL 000E61  
                                          postdec2 000FDD                                          _RXF13SIDH 000E64  
                                        _RXF13SIDL 000E65                                          _RXF14SIDH 000E68  
                                        _RXF14SIDL 000E69                                          _RXF15SIDH 000E6C  
                                        _RXF15SIDL 000E6D                                            postinc0 000FEE  
                                          postinc2 000FDE                                         _motorSpeed 13C8  
                             ??_EUSART1_Initialize 003C                                       _hazardButton 11A8  
                                     _hazardSignal 1590                                          _PORTAbits 000F80  
                                        _PORTCbits 000F82                                      _b10FuncActive 002E  
                                  ??_ECAN_WAKI_ISR 0038                                         _warningLED 1298  
                           CAN_transmit@tempCanMsg 004C                         ??_convertReg2ExtendedCANid 003E  
                              EUSART1_Write@txData 003A                                      ??_auxBattConn 003D  
                              leftTurnIndicator@v2 0040                                leftTurnIndicator@v3 0042  
                              leftTurnIndicator@v4 0044                              motorControllerTemp@v2 0040  
                            motorControllerTemp@v3 0042                              motorControllerTemp@v4 0044  
                                    batteryTemp@v2 0040                                      batteryTemp@v3 0042  
                                    batteryTemp@v4 0044                            __end_of_ECAN_Initialize 0D1A  
                                  warningLED@value 003B                                __end_of_batteryTemp 16C0  
                     __end_of_INTERRUPT_Initialize 1B22                                __end_of_CAN_receive 0B74  
                      motorControllerTemp@checksum 003E                             ?_OSCILLATOR_Initialize 0038  
                              start_initialization 1A74                            rightTurnIndicator@value 003B  
                             rightTurnIndicator@v2 0040                               rightTurnIndicator@v3 0042  
                             rightTurnIndicator@v4 0044                              __end_of_EUSART1_Write 1ACE  
                                ??_canHazardSignal 0054                                     _canRightSignal 19F0  
              convertReg2StandardCANid@returnValue 0041                               hazardSignal@checksum 003E  
                              __end_of_auxBattConn 1888                                        ?_motorSpeed 003B  
                                      ?_warningLED 003B                                batterySOCGraphic@v2 0040  
                              batterySOCGraphic@v3 0042                                batterySOCGraphic@v4 0044  
                                      __pbssCOMRAM 0001                                      __pcstackBANK0 00C2  
                           __end_of_canRightSignal 1A1C             __end_of_ECAN_SetWakeUpInterruptHandler 1B1E  
                   _ECAN_SetWakeUpInterruptHandler 1B14                                   ??_leftTurnButton 003E  
                 ??_EUSART1_SetFramingErrorHandler 003C                    ?_EUSART1_SetFramingErrorHandler 003A  
                                      _batteryTemp 1628                                          __pnvBANK0 00C6  
                                      _CAN_receive 0920                                   ?_ECAN_Initialize 0038  
                           _PIN_MANAGER_Initialize 19B8                           __end_of_convertCANid2Reg 0E8E  
                                        __pintcode 0008                                auxBattConn@checksum 003E  
                                  _rightTurnButton 0FC8                       ??_INTERRUPT_InterruptManager 0038  
                                         _BAUDCON1 000FA7                                        _COMSTATbits 000F71  
               _EUSART1_DefaultOverrunErrorHandler 000000                               _EUSART1_ErrorHandler 00C6  
                 __end_of_convertReg2ExtendedCANid 0FC8                            _EUSART1_SetErrorHandler 1B0A  
                   convertCANid2Reg@tempPassedInID 003A                                    ?_canRightSignal 0052  
                             _INTERRUPT_Initialize 1B1E                                        _auxBattConn 17F0  
          EUSART1_SetErrorHandler@interruptHandler 003A                                           _LATCbits 000F8B  
                                     ??_batterySOC 003D                                           _PIE5bits 000F76  
                                         _PIR1bits 000F9E                                           _PIR5bits 000F77  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RCONbits 000FD0                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDH 000F31                                           _RXF0EIDL 000EE3  
                                         _RXB1SIDL 000F32                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF6EIDH 000E4A  
                                         _RXF6EIDL 000E4B                                           _RXF0SIDH 000EE0  
                                         _RXF7EIDH 000E4E                                           _RXF0SIDL 000EE1  
                                         _RXF7EIDL 000E4F                                           _RXF1SIDH 000EE4  
                                         _RXF8EIDH 000E52                                           _TXB0EIDH 000F23  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _RXF8EIDL 000E53                                           _RXF2SIDH 000EE8  
                                         _RXF9EIDH 000E56                                           _TXB1EIDH 000F13  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _RXF9EIDL 000E57                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDH 000F03                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _RXF6SIDH 000E48  
                                         _RXF6SIDL 000E49                                           _RXM0EIDH 000EFA  
                                         _RXF7SIDH 000E4C                                           _RXM0EIDL 000EFB  
                                         _RXF7SIDL 000E4D                                           _RXM1EIDH 000EFE  
                                         _RXF8SIDH 000E50                                           _TXB0SIDH 000F21  
                                         _RXM1EIDL 000EFF                                           _RXF8SIDL 000E51  
                                         _TXB0SIDL 000F22                                           _RXF9SIDH 000E54  
                                         _TXB1SIDH 000F11                                           _RXF9SIDL 000E55  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                           _RXFBCON0 000E71  
                                         _RXFBCON1 000E72                                           _RXFBCON2 000E73  
                                         _RXFBCON3 000E74                                           _RXFBCON4 000E75  
                                         _RXFBCON5 000E76                                           _RXFBCON6 000E77  
                                         _RXFBCON7 000E78                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                       batterySOC@v2 0040  
                                     batterySOC@v3 0042                                       batterySOC@v4 0044  
                            __end_of_canLeftSignal 1A48                                 batterySOC@checksum 003E  
                                        main@speed 00C4                                canLeftSignal@number 0052  
                               __end_of_batterySOC 17F0                                        _INTCON2bits 000FF1  
                            ?_INTERRUPT_Initialize 0038                     leftTurnButton@b1FunctionActive 003A  
                         _convertReg2StandardCANid 1902                            __end_of_rightTurnButton 10B8  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0042              convertReg2ExtendedCANid@tempRXBn_EIDL 003A  
                                _batterySOCGraphic 16C0              convertReg2ExtendedCANid@tempRXBn_SIDH 003B  
            convertReg2ExtendedCANid@tempRXBn_SIDL 003C                                           __Hrparam 0000  
                                         __Lrparam 0000                                 ?_batterySOCGraphic 003B  
                        convertCANid2Reg@canIdType 003E                            ??_OSCILLATOR_Initialize 003A  
                              ??_batterySOCGraphic 003D  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 0048  
                        ??_EUSART1_SetErrorHandler 003C                        _EUSART1_DefaultErrorHandler 000000  
                                  _canHazardSignal 1A48  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 0047  
                          convertCANid2Reg@wipSIDL 004B                              canHazardSignal@number 0052  
                            __end_of_ECAN_WAKI_ISR 1AB8                                           _blinkb10 0001  
                                         __ptext10 1628                                           __ptext11 16C0  
                                         __ptext20 0D1A                                           __ptext12 1758  
                                         __ptext21 1ACE                                           __ptext13 17F0  
                                         __ptext30 1B14                                           __ptext22 19B8  
                                         __ptext14 1AB8                                           __ptext31 0920  
                                         __ptext23 1AE4                                           __ptext15 11A8  
                                         __ptext32 1902                                           __ptext24 1B1E  
                                         __ptext16 19F0                                           __ptext33 0E8E  
                                         __ptext25 197A                                           __ptext17 1A1C  
                                         __ptext26 1AF6                                           __ptext18 1A48  
                                         __ptext35 1A9A                                           __ptext27 1B00  
                                         __ptext19 0606                                           __ptext36 1B22  
                                         __ptext28 1B0A                                           __ptext37 0000  
                                         __ptext29 0B74                                   auxBattConn@value 003B  
                                         _latchb10 002C                convertReg2StandardCANid@ConvertedID 0045  
                        __end_of_batterySOCGraphic 1758                          batterySOCGraphic@checksum 003E  
              convertReg2ExtendedCANid@returnValue 0043     EUSART1_SetOverrunErrorHandler@interruptHandler 003A  
                                         isa$xinst 000000                          ?_convertReg2ExtendedCANid 003A  
                                    ?_CAN_transmit 004C                                       ??_motorSpeed 003D  
                                         int$flags 005A                 __end_of_INTERRUPT_InterruptManager 004C  
                       _INTERRUPT_InterruptManager 0008                        _EUSART1_FramingErrorHandler 0058  
                                     ??_warningLED 003D                                        _RXB0CONbits 000F60  
                                      _RXB1CONbits 000F30                                         _INTCONbits 000FF2  
                           ??_INTERRUPT_Initialize 003A                                           intlevel2 0000  
                               __end_of_motorSpeed 1460                            ?_PIN_MANAGER_Initialize 0038  
                                     motorSpeed@v2 0040                                       motorSpeed@v3 0042  
                                     motorSpeed@v4 0044                                       ?_batteryTemp 003B  
           __end_of_EUSART1_SetOverrunErrorHandler 1B00                     _EUSART1_SetOverrunErrorHandler 1AF6  
                                      _TXB0CONbits 000F20                                         _RCSTA1bits 000FAB  
                                     ?_CAN_receive 004D                                   ?_rightTurnButton 003A  
                                      _TXB1CONbits 000F10                                        _TXB2CONbits 000F00  
                               __end_of_warningLED 1330                                     ??_CAN_transmit 004E  
                                ?_convertCANid2Reg 003A     EUSART1_SetFramingErrorHandler@interruptHandler 003A  
                               ??_convertCANid2Reg 0047                            __end_of_canHazardSignal 1A74  
                               _eusart1RxLastError 001D                                   ??_canRightSignal 0054  
                                  batterySOC@value 003B                                      auxBattConn@v2 0040  
                                    auxBattConn@v3 0042                                      auxBattConn@v4 0044  
                                     ?_auxBattConn 003B                     __end_of_PIN_MANAGER_Initialize 19F0  
                     hazardButton@b2FunctionActive 003A  
