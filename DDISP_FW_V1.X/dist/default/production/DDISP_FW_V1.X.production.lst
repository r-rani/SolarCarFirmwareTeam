

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Nov 28 20:59:28 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 05/05/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F46K80 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    92  0000                     
    93 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    94  0000                     
    95 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    96  0000                     _COMSTATbits	set	3953
    97  0000                     _RXB1SIDH	set	3889
    98  0000                     _RXB1SIDL	set	3890
    99  0000                     _RXB0D7	set	3949
   100  0000                     _RXB0D6	set	3948
   101  0000                     _RXB0D5	set	3947
   102  0000                     _RXB0D4	set	3946
   103  0000                     _RXB0D3	set	3945
   104  0000                     _RXB0D2	set	3944
   105  0000                     _RXB0D1	set	3943
   106  0000                     _RXB0D0	set	3942
   107  0000                     _RXB0DLC	set	3941
   108  0000                     _RXB0SIDH	set	3937
   109  0000                     _RXB0EIDL	set	3940
   110  0000                     _RXB0EIDH	set	3939
   111  0000                     _RXB0SIDL	set	3938
   112  0000                     _TXB2SIDL	set	3842
   113  0000                     _TXB2SIDH	set	3841
   114  0000                     _TXB2EIDH	set	3843
   115  0000                     _TXB2CONbits	set	3840
   116  0000                     _TXB1SIDL	set	3858
   117  0000                     _TXB1SIDH	set	3857
   118  0000                     _TXB1EIDH	set	3859
   119  0000                     _TXB1CONbits	set	3856
   120  0000                     _TXB0SIDL	set	3874
   121  0000                     _TXB0SIDH	set	3873
   122  0000                     _TXB0EIDH	set	3875
   123  0000                     _TXB0CONbits	set	3872
   124  0000                     _BRGCON3	set	3653
   125  0000                     _BRGCON2	set	3652
   126  0000                     _RXF15SIDL	set	3693
   127  0000                     _RXF15SIDH	set	3692
   128  0000                     _RXF15EIDH	set	3694
   129  0000                     _RXF14SIDL	set	3689
   130  0000                     _RXF14SIDH	set	3688
   131  0000                     _RXF14EIDL	set	3691
   132  0000                     _RXF14EIDH	set	3690
   133  0000                     _RXF13SIDL	set	3685
   134  0000                     _RXF13SIDH	set	3684
   135  0000                     _RXF13EIDL	set	3687
   136  0000                     _RXF13EIDH	set	3686
   137  0000                     _RXF12SIDL	set	3681
   138  0000                     _RXF12SIDH	set	3680
   139  0000                     _RXF12EIDL	set	3683
   140  0000                     _RXF12EIDH	set	3682
   141  0000                     _RXF11SIDL	set	3677
   142  0000                     _RXF11SIDH	set	3676
   143  0000                     _RXF11EIDL	set	3679
   144  0000                     _RXF11EIDH	set	3678
   145  0000                     _RXF10SIDL	set	3673
   146  0000                     _RXF10SIDH	set	3672
   147  0000                     _RXF10EIDL	set	3675
   148  0000                     _RXF10EIDH	set	3674
   149  0000                     _RXF9SIDL	set	3669
   150  0000                     _RXF9SIDH	set	3668
   151  0000                     _RXF9EIDL	set	3671
   152  0000                     _RXF9EIDH	set	3670
   153  0000                     _RXF8SIDL	set	3665
   154  0000                     _RXF8SIDH	set	3664
   155  0000                     _RXF8EIDL	set	3667
   156  0000                     _RXF8EIDH	set	3666
   157  0000                     _RXF7SIDL	set	3661
   158  0000                     _RXF7SIDH	set	3660
   159  0000                     _RXF7EIDL	set	3663
   160  0000                     _RXF7EIDH	set	3662
   161  0000                     _RXF6SIDL	set	3657
   162  0000                     _RXF6SIDH	set	3656
   163  0000                     _RXF6EIDL	set	3659
   164  0000                     _RXF6EIDH	set	3658
   165  0000                     _RXF5SIDL	set	3829
   166  0000                     _RXF5SIDH	set	3828
   167  0000                     _RXF5EIDL	set	3831
   168  0000                     _RXF5EIDH	set	3830
   169  0000                     _RXF4SIDL	set	3825
   170  0000                     _RXF4SIDH	set	3824
   171  0000                     _RXF4EIDL	set	3827
   172  0000                     _RXF4EIDH	set	3826
   173  0000                     _RXF3SIDL	set	3821
   174  0000                     _RXF3SIDH	set	3820
   175  0000                     _RXF3EIDL	set	3823
   176  0000                     _RXF3EIDH	set	3822
   177  0000                     _RXF2SIDL	set	3817
   178  0000                     _RXF2SIDH	set	3816
   179  0000                     _RXF2EIDL	set	3819
   180  0000                     _RXF2EIDH	set	3818
   181  0000                     _RXF1SIDL	set	3813
   182  0000                     _RXF1SIDH	set	3812
   183  0000                     _RXF1EIDL	set	3815
   184  0000                     _RXF1EIDH	set	3814
   185  0000                     _RXF0SIDL	set	3809
   186  0000                     _RXF0EIDL	set	3811
   187  0000                     _RXFBCON7	set	3704
   188  0000                     _RXFBCON6	set	3703
   189  0000                     _RXFBCON5	set	3702
   190  0000                     _RXFBCON4	set	3701
   191  0000                     _RXFBCON3	set	3700
   192  0000                     _RXFBCON2	set	3699
   193  0000                     _RXFBCON1	set	3698
   194  0000                     _RXFBCON0	set	3697
   195  0000                     _MSEL3	set	3708
   196  0000                     _MSEL2	set	3707
   197  0000                     _MSEL1	set	3706
   198  0000                     _MSEL0	set	3705
   199  0000                     _RXFCON1	set	3655
   200  0000                     _RXM1SIDL	set	3837
   201  0000                     _RXM1SIDH	set	3836
   202  0000                     _RXM1EIDL	set	3839
   203  0000                     _RXM1EIDH	set	3838
   204  0000                     _RXM0SIDL	set	3833
   205  0000                     _RXM0EIDL	set	3835
   206  0000                     _CIOCON	set	3952
   207  0000                     _ECANCON	set	3954
   208  0000                     _TRISD	set	3989
   209  0000                     _TRISC	set	3988
   210  0000                     _TRISB	set	3987
   211  0000                     _LATC	set	3979
   212  0000                     _LATB	set	3978
   213  0000                     _TXREG1	set	4013
   214  0000                     _RCREG1	set	4014
   215  0000                     _SPBRG1	set	4015
   216  0000                     _TXSTA1	set	4012
   217                           
   218                           	psect	nvCOMRAM
   219  000056                     __pnvCOMRAM:
   220                           	callstack 0
   221  000056                     _EUSART1_OverrunErrorHandler:
   222                           	callstack 0
   223  000056                     	ds	2
   224  000058                     _EUSART1_FramingErrorHandler:
   225                           	callstack 0
   226  000058                     	ds	2
   227                           
   228                           	psect	nvBANK0
   229  0000C6                     __pnvBANK0:
   230                           	callstack 0
   231  0000C6                     _EUSART1_ErrorHandler:
   232                           	callstack 0
   233  0000C6                     	ds	2
   234  0000                     _LATCbits	set	3979
   235  0000                     _RCSTA1bits	set	4011
   236  0000                     _TXSTA1bits	set	4012
   237  0000                     _BRGCON1	set	3651
   238  0000                     _RXFCON0	set	3654
   239  0000                     _BSEL0	set	3709
   240  0000                     _WPUB	set	3931
   241  0000                     _ANCON1	set	3932
   242  0000                     _ANCON0	set	3933
   243  0000                     _PIE5bits	set	3958
   244  0000                     _SPBRGH1	set	3965
   245  0000                     _BAUDCON1	set	4007
   246  0000                     _RCSTA1	set	4011
   247  0000                     _RCONbits	set	4048
   248  0000                     _PORTAbits	set	3968
   249  0000                     _LATA	set	3977
   250  0000                     _LATD	set	3980
   251  0000                     _LATE	set	3981
   252  0000                     _PIR1bits	set	3998
   253  0000                     _OSCCON2	set	4050
   254  0000                     _OSCCON	set	4051
   255  0000                     _INTCON2bits	set	4081
   256  0000                     _INTCONbits	set	4082
   257  0000                     _PIR5bits	set	3959
   258  0000                     _TRISA	set	3986
   259  0000                     _TRISE	set	3990
   260  0000                     _REFOCON	set	3994
   261  0000                     _OSCTUNE	set	3995
   262  0000                     _RXB0CONbits	set	3936
   263  0000                     _CANSTAT	set	3950
   264  0000                     _CANCON	set	3951
   265  0000                     _RXF0SIDH	set	3808
   266  0000                     _RXF0EIDH	set	3810
   267  0000                     _RXM0SIDH	set	3832
   268  0000                     _RXM0EIDH	set	3834
   269  0000                     _RXF15EIDL	set	3695
   270  0000                     _RXB1CONbits	set	3888
   271  0000                     _TXB0D7	set	3885
   272  0000                     _TXB0D6	set	3884
   273  0000                     _TXB0D5	set	3883
   274  0000                     _TXB0D4	set	3882
   275  0000                     _TXB0D3	set	3881
   276  0000                     _TXB0D2	set	3880
   277  0000                     _TXB0D1	set	3879
   278  0000                     _TXB0D0	set	3878
   279  0000                     _TXB0DLC	set	3877
   280  0000                     _TXB0EIDL	set	3876
   281  0000                     _TXB1D7	set	3869
   282  0000                     _TXB1D6	set	3868
   283  0000                     _TXB1D5	set	3867
   284  0000                     _TXB1D4	set	3866
   285  0000                     _TXB1D3	set	3865
   286  0000                     _TXB1D2	set	3864
   287  0000                     _TXB1D1	set	3863
   288  0000                     _TXB1D0	set	3862
   289  0000                     _TXB1DLC	set	3861
   290  0000                     _TXB1EIDL	set	3860
   291  0000                     _TXB2D7	set	3853
   292  0000                     _TXB2D6	set	3852
   293  0000                     _TXB2D5	set	3851
   294  0000                     _TXB2D4	set	3850
   295  0000                     _TXB2D3	set	3849
   296  0000                     _TXB2D2	set	3848
   297  0000                     _TXB2D1	set	3847
   298  0000                     _TXB2D0	set	3846
   299  0000                     _TXB2DLC	set	3845
   300  0000                     _TXB2EIDL	set	3844
   301  0000                     _RXB1D7	set	3901
   302  0000                     _RXB1D6	set	3900
   303  0000                     _RXB1D5	set	3899
   304  0000                     _RXB1D4	set	3898
   305  0000                     _RXB1D3	set	3897
   306  0000                     _RXB1D2	set	3896
   307  0000                     _RXB1D1	set	3895
   308  0000                     _RXB1D0	set	3894
   309  0000                     _RXB1DLC	set	3893
   310  0000                     _RXB1EIDL	set	3892
   311  0000                     _RXB1EIDH	set	3891
   312  0000                     _PORTCbits	set	3970
   313                           
   314                           ; #config settings
   315                           
   316                           	psect	cinit
   317  001A94                     __pcinit:
   318                           	callstack 0
   319  001A94                     start_initialization:
   320                           	callstack 0
   321  001A94                     __initialization:
   322                           	callstack 0
   323                           
   324                           ; Clear objects allocated to BANK0 (98 bytes)
   325  001A94  EE00  F060         	lfsr	0,__pbssBANK0
   326  001A98  0E62               	movlw	98
   327  001A9A                     clear_0:
   328  001A9A  6AEE               	clrf	postinc0,c
   329  001A9C  06E8               	decf	wreg,f,c
   330  001A9E  E1FD               	bnz	clear_0
   331                           
   332                           ; Clear objects allocated to COMRAM (55 bytes)
   333  001AA0  EE00  F001         	lfsr	0,__pbssCOMRAM
   334  001AA4  0E37               	movlw	55
   335  001AA6                     clear_1:
   336  001AA6  6AEE               	clrf	postinc0,c
   337  001AA8  06E8               	decf	wreg,f,c
   338  001AAA  E1FD               	bnz	clear_1
   339  001AAC                     end_of_initialization:
   340                           	callstack 0
   341  001AAC                     __end_of__initialization:
   342                           	callstack 0
   343  001AAC  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   344  001AAE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   345  001AB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   346  001AB2  6EF8               	movwf	tblptru,c
   347  001AB4  0100               	movlb	0
   348  001AB6  EF28  F000         	goto	_main	;jump to C main() function
   349                           
   350                           	psect	bssCOMRAM
   351  000001                     __pbssCOMRAM:
   352                           	callstack 0
   353  000001                     _blinkb10:
   354                           	callstack 0
   355  000001                     	ds	2
   356  000003                     _lastb10:
   357                           	callstack 0
   358  000003                     	ds	2
   359  000005                     _b9FuncActive:
   360                           	callstack 0
   361  000005                     	ds	2
   362  000007                     _b8FuncActive:
   363                           	callstack 0
   364  000007                     	ds	2
   365  000009                     _b7FuncActive:
   366                           	callstack 0
   367  000009                     	ds	2
   368  00000B                     _b6FuncActive:
   369                           	callstack 0
   370  00000B                     	ds	2
   371  00000D                     _b5FuncActive:
   372                           	callstack 0
   373  00000D                     	ds	2
   374  00000F                     _b4FuncActive:
   375                           	callstack 0
   376  00000F                     	ds	2
   377  000011                     _b3FuncActive:
   378                           	callstack 0
   379  000011                     	ds	2
   380  000013                     _blinkb2:
   381                           	callstack 0
   382  000013                     	ds	2
   383  000015                     _lastb2:
   384                           	callstack 0
   385  000015                     	ds	2
   386  000017                     _blinkb1:
   387                           	callstack 0
   388  000017                     	ds	2
   389  000019                     _lastb1:
   390                           	callstack 0
   391  000019                     	ds	2
   392  00001B                     _WakeUpInterruptHandler:
   393                           	callstack 0
   394  00001B                     	ds	2
   395  00001D                     _eusart1RxLastError:
   396                           	callstack 0
   397  00001D                     	ds	1
   398  00001E                     _rx:
   399                           	callstack 0
   400  00001E                     	ds	14
   401  00002C                     _latchb10:
   402                           	callstack 0
   403  00002C                     	ds	2
   404  00002E                     _b10FuncActive:
   405                           	callstack 0
   406  00002E                     	ds	2
   407  000030                     _latchb2:
   408                           	callstack 0
   409  000030                     	ds	2
   410  000032                     _b2FuncActive:
   411                           	callstack 0
   412  000032                     	ds	2
   413  000034                     _latchb1:
   414                           	callstack 0
   415  000034                     	ds	2
   416  000036                     _b1FuncActive:
   417                           	callstack 0
   418  000036                     	ds	2
   419                           
   420                           	psect	bssBANK0
   421  000060                     __pbssBANK0:
   422                           	callstack 0
   423  000060                     _tx7:
   424                           	callstack 0
   425  000060                     	ds	14
   426  00006E                     _tx6:
   427                           	callstack 0
   428  00006E                     	ds	14
   429  00007C                     _tx5:
   430                           	callstack 0
   431  00007C                     	ds	14
   432  00008A                     _tx4:
   433                           	callstack 0
   434  00008A                     	ds	14
   435  000098                     _tx3:
   436                           	callstack 0
   437  000098                     	ds	14
   438  0000A6                     _tx2:
   439                           	callstack 0
   440  0000A6                     	ds	14
   441  0000B4                     _tx1:
   442                           	callstack 0
   443  0000B4                     	ds	14
   444                           
   445                           	psect	cstackBANK0
   446  0000C2                     __pcstackBANK0:
   447                           	callstack 0
   448  0000C2                     main@counter:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x0
   452  0000C2                     	ds	2
   453  0000C4                     main@speed:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x2
   457  0000C4                     	ds	2
   458                           
   459                           	psect	cstackCOMRAM
   460  000038                     __pcstackCOMRAM:
   461                           	callstack 0
   462  000038                     ??_INTERRUPT_InterruptManager:
   463  000038                     
   464                           ; 1 bytes @ 0x0
   465  000038                     	ds	2
   466  00003A                     ?_convertReg2ExtendedCANid:
   467                           	callstack 0
   468  00003A                     ?_convertReg2StandardCANid:
   469                           	callstack 0
   470  00003A                     EUSART1_Write@txData:
   471                           	callstack 0
   472  00003A                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   473                           	callstack 0
   474  00003A                     convertReg2StandardCANid@tempRXBn_SIDL:
   475                           	callstack 0
   476  00003A                     EUSART1_SetFramingErrorHandler@interruptHandler:
   477                           	callstack 0
   478  00003A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   479                           	callstack 0
   480  00003A                     EUSART1_SetErrorHandler@interruptHandler:
   481                           	callstack 0
   482  00003A                     ECAN_SetWakeUpInterruptHandler@handler:
   483                           	callstack 0
   484  00003A                     leftTurnButton@b1FunctionActive:
   485                           	callstack 0
   486  00003A                     rightTurnButton@b10FunctionActive:
   487                           	callstack 0
   488  00003A                     hazardButton@b2FunctionActive:
   489                           	callstack 0
   490  00003A                     convertCANid2Reg@tempPassedInID:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x2
   494  00003A                     	ds	1
   495  00003B                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   496                           	callstack 0
   497  00003B                     leftTurnIndicator@value:
   498                           	callstack 0
   499  00003B                     rightTurnIndicator@value:
   500                           	callstack 0
   501  00003B                     warningLED@value:
   502                           	callstack 0
   503  00003B                     auxBattConn@value:
   504                           	callstack 0
   505  00003B                     motorSpeed@value:
   506                           	callstack 0
   507  00003B                     motorControllerTemp@value:
   508                           	callstack 0
   509  00003B                     batteryTemp@value:
   510                           	callstack 0
   511  00003B                     hazardSignal@value:
   512                           	callstack 0
   513  00003B                     batterySOC@value:
   514                           	callstack 0
   515  00003B                     batterySOCGraphic@value:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x3
   519  00003B                     	ds	1
   520  00003C                     ??_ECAN_Initialize:
   521  00003C                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   522                           	callstack 0
   523  00003C                     leftTurnButton@b1Latch:
   524                           	callstack 0
   525  00003C                     rightTurnButton@b10Latch:
   526                           	callstack 0
   527  00003C                     hazardButton@b2Latch:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x4
   531  00003C                     	ds	1
   532  00003D                     ??_rightTurnIndicator:
   533  00003D                     ??_leftTurnIndicator:
   534  00003D                     ??_hazardSignal:
   535  00003D                     ??_motorSpeed:
   536  00003D                     ??_warningLED:
   537  00003D                     ??_auxBattConn:
   538  00003D                     ??_motorControllerTemp:
   539  00003D                     ??_batteryTemp:
   540  00003D                     ??_batterySOC:
   541  00003D                     ??_batterySOCGraphic:
   542                           
   543                           ; 1 bytes @ 0x5
   544  00003D                     	ds	1
   545  00003E                     ??_convertReg2ExtendedCANid:
   546  00003E                     ??_convertReg2StandardCANid:
   547  00003E                     ??_leftTurnButton:
   548  00003E                     ??_rightTurnButton:
   549  00003E                     ??_hazardButton:
   550  00003E                     convertCANid2Reg@canIdType:
   551                           	callstack 0
   552  00003E                     leftTurnIndicator@checksum:
   553                           	callstack 0
   554  00003E                     rightTurnIndicator@checksum:
   555                           	callstack 0
   556  00003E                     warningLED@checksum:
   557                           	callstack 0
   558  00003E                     auxBattConn@checksum:
   559                           	callstack 0
   560  00003E                     motorSpeed@checksum:
   561                           	callstack 0
   562  00003E                     motorControllerTemp@checksum:
   563                           	callstack 0
   564  00003E                     batteryTemp@checksum:
   565                           	callstack 0
   566  00003E                     hazardSignal@checksum:
   567                           	callstack 0
   568  00003E                     batterySOC@checksum:
   569                           	callstack 0
   570  00003E                     batterySOCGraphic@checksum:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x6
   574  00003E                     	ds	1
   575  00003F                     convertCANid2Reg@passedInEIDH:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x7
   579  00003F                     	ds	1
   580  000040                     convertReg2StandardCANid@tempRXBn_SIDH:
   581                           	callstack 0
   582  000040                     leftTurnIndicator@v2:
   583                           	callstack 0
   584  000040                     rightTurnIndicator@v2:
   585                           	callstack 0
   586  000040                     warningLED@v2:
   587                           	callstack 0
   588  000040                     auxBattConn@v2:
   589                           	callstack 0
   590  000040                     motorSpeed@v2:
   591                           	callstack 0
   592  000040                     motorControllerTemp@v2:
   593                           	callstack 0
   594  000040                     batteryTemp@v2:
   595                           	callstack 0
   596  000040                     hazardSignal@v2:
   597                           	callstack 0
   598  000040                     batterySOC@v2:
   599                           	callstack 0
   600  000040                     batterySOCGraphic@v2:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x8
   604  000040                     	ds	1
   605  000041                     convertCANid2Reg@passedInEIDL:
   606                           	callstack 0
   607  000041                     convertReg2StandardCANid@returnValue:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x9
   611  000041                     	ds	1
   612  000042                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   613                           	callstack 0
   614  000042                     leftTurnIndicator@v3:
   615                           	callstack 0
   616  000042                     rightTurnIndicator@v3:
   617                           	callstack 0
   618  000042                     warningLED@v3:
   619                           	callstack 0
   620  000042                     auxBattConn@v3:
   621                           	callstack 0
   622  000042                     motorSpeed@v3:
   623                           	callstack 0
   624  000042                     motorControllerTemp@v3:
   625                           	callstack 0
   626  000042                     batteryTemp@v3:
   627                           	callstack 0
   628  000042                     hazardSignal@v3:
   629                           	callstack 0
   630  000042                     batterySOC@v3:
   631                           	callstack 0
   632  000042                     batterySOCGraphic@v3:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0xA
   636  000042                     	ds	1
   637  000043                     convertCANid2Reg@passedInSIDH:
   638                           	callstack 0
   639  000043                     convertReg2ExtendedCANid@returnValue:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0xB
   643  000043                     	ds	1
   644  000044                     leftTurnIndicator@v4:
   645                           	callstack 0
   646  000044                     rightTurnIndicator@v4:
   647                           	callstack 0
   648  000044                     warningLED@v4:
   649                           	callstack 0
   650  000044                     auxBattConn@v4:
   651                           	callstack 0
   652  000044                     motorSpeed@v4:
   653                           	callstack 0
   654  000044                     motorControllerTemp@v4:
   655                           	callstack 0
   656  000044                     batteryTemp@v4:
   657                           	callstack 0
   658  000044                     hazardSignal@v4:
   659                           	callstack 0
   660  000044                     batterySOC@v4:
   661                           	callstack 0
   662  000044                     batterySOCGraphic@v4:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xC
   666  000044                     	ds	1
   667  000045                     convertCANid2Reg@passedInSIDL:
   668                           	callstack 0
   669  000045                     convertReg2StandardCANid@ConvertedID:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0xD
   673  000045                     	ds	1
   674  000046                     
   675                           ; 1 bytes @ 0xE
   676  000046                     	ds	1
   677  000047                     ??_convertCANid2Reg:
   678  000047                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0xF
   682  000047                     	ds	1
   683  000048                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x10
   687  000048                     	ds	1
   688  000049                     convertReg2ExtendedCANid@ConvertedID:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x11
   692  000049                     	ds	2
   693  00004B                     convertCANid2Reg@wipSIDL:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x13
   697  00004B                     	ds	1
   698  00004C                     CAN_transmit@tempCanMsg:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x14
   702  00004C                     	ds	1
   703  00004D                     CAN_receive@tempCanMsg:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x15
   707  00004D                     	ds	1
   708  00004E                     CAN_transmit@tempEIDH:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x16
   712  00004E                     	ds	1
   713  00004F                     CAN_transmit@tempEIDL:
   714                           	callstack 0
   715  00004F                     CAN_receive@returnValue:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x17
   719  00004F                     	ds	1
   720  000050                     CAN_transmit@tempSIDH:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x18
   724  000050                     	ds	1
   725  000051                     CAN_transmit@tempSIDL:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x19
   729  000051                     	ds	1
   730  000052                     canRightSignal@number:
   731                           	callstack 0
   732  000052                     canLeftSignal@number:
   733                           	callstack 0
   734  000052                     canHazardSignal@number:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x1A
   738  000052                     	ds	2
   739  000054                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x1C
   742  000054                     	ds	2
   743                           
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 50 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  speed           2    2[BANK0 ] int 
   754 ;;  counter         2    0[BANK0 ] int 
   755 ;;  tog             1    0        unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   768 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   769 ;;Total ram usage:        6 bytes
   770 ;; Hardware stack levels required when called: 6
   771 ;; This function calls:
   772 ;;		_CAN_receive
   773 ;;		_SYSTEM_Initialize
   774 ;;		_auxBattConn
   775 ;;		_canHazardSignal
   776 ;;		_canLeftSignal
   777 ;;		_canRightSignal
   778 ;;		_hazardButton
   779 ;;		_hazardSignal
   780 ;;		_init
   781 ;;		_leftTurnButton
   782 ;;		_leftTurnIndicator
   783 ;;		_motorSpeed
   784 ;;		_rightTurnButton
   785 ;;		_rightTurnIndicator
   786 ;;		_warningLED
   787 ;; This function is called by:
   788 ;;		Startup code after reset
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text0
   793  000050                     __ptext0:
   794                           	callstack 0
   795  000050                     _main:
   796                           	callstack 25
   797  000050                     
   798                           ;main.c: 51:     SYSTEM_Initialize();
   799  000050  EC77  F00D         	call	_SYSTEM_Initialize	;wreg free
   800  000054                     l4619:
   801                           
   802                           ;main.c: 54:         if (CAN_receive(&rx)){
   803  000054  0E1E               	movlw	low _rx
   804  000056  6E4D               	movwf	CAN_receive@tempCanMsg^0,c
   805  000058  0E00               	movlw	high _rx
   806  00005A  6E4E               	movwf	(CAN_receive@tempCanMsg+1)^0,c
   807  00005C  ECA1  F004         	call	_CAN_receive	;wreg free
   808  000060  0900               	iorlw	0
   809  000062  B4D8               	btfsc	status,2,c
   810  000064  EF36  F000         	goto	u1371
   811  000068  EF38  F000         	goto	u1370
   812  00006C                     u1371:
   813  00006C  EF2A  F000         	goto	l4619
   814  000070                     u1370:
   815  000070                     
   816                           ;main.c: 55:             if (rx.frame.id == 0x22){
   817  000070  0E22               	movlw	34
   818  000072  181F               	xorwf	(_rx+1)^0,w,c
   819  000074  1020               	iorwf	(_rx+2)^0,w,c
   820  000076  1021               	iorwf	(_rx+3)^0,w,c
   821  000078  1022               	iorwf	(_rx+4)^0,w,c
   822  00007A  A4D8               	btfss	status,2,c
   823  00007C  EF42  F000         	goto	u1381
   824  000080  EF44  F000         	goto	u1380
   825  000084                     u1381:
   826  000084  EF46  F000         	goto	l667
   827  000088                     u1380:
   828  000088  EF48  F000         	goto	l670
   829  00008C                     l667:
   830  00008C  EF2A  F000         	goto	l4619
   831  000090                     l670:
   832  000090  8C8B               	bsf	139,6,c	;volatile
   833  000092                     
   834                           ;main.c: 64:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   835  000092  0E1A               	movlw	26
   836  000094  6E55               	movwf	(??_main+1)^0,c
   837  000096  0E5E               	movlw	94
   838  000098  6E54               	movwf	??_main^0,c
   839  00009A  0E6E               	movlw	110
   840  00009C                     u1677:
   841  00009C  2EE8               	decfsz	wreg,f,c
   842  00009E  D7FE               	bra	u1677
   843  0000A0  2E54               	decfsz	??_main^0,f,c
   844  0000A2  D7FC               	bra	u1677
   845  0000A4  2E55               	decfsz	(??_main+1)^0,f,c
   846  0000A6  D7FA               	bra	u1677
   847  0000A8  D000               	nop2	
   848  0000AA                     
   849                           ;main.c: 65:     init();
   850  0000AA  EC54  F00C         	call	_init	;wreg free
   851  0000AE                     
   852                           ;main.c: 66:     _delay((unsigned long)((500)*(20000000/4000.0)));
   853  0000AE  0E0D               	movlw	13
   854  0000B0  6E55               	movwf	(??_main+1)^0,c
   855  0000B2  0EAF               	movlw	175
   856  0000B4  6E54               	movwf	??_main^0,c
   857  0000B6  0EB6               	movlw	182
   858  0000B8                     u1687:
   859  0000B8  2EE8               	decfsz	wreg,f,c
   860  0000BA  D7FE               	bra	u1687
   861  0000BC  2E54               	decfsz	??_main^0,f,c
   862  0000BE  D7FC               	bra	u1687
   863  0000C0  2E55               	decfsz	(??_main+1)^0,f,c
   864  0000C2  D7FA               	bra	u1687
   865  0000C4  D000               	nop2	
   866  0000C6                     
   867                           ;main.c: 68:     int counter = 0;
   868  0000C6  0E00               	movlw	0
   869  0000C8  0100               	movlb	0	; () banked
   870  0000CA  6FC3               	movwf	(main@counter+1)& (0+255),b
   871  0000CC  0E00               	movlw	0
   872  0000CE  6FC2               	movwf	main@counter& (0+255),b
   873  0000D0                     
   874                           ; BSR set to: 0
   875                           ;main.c: 69:     int speed = 0;
   876  0000D0  0E00               	movlw	0
   877  0000D2  6FC5               	movwf	(main@speed+1)& (0+255),b
   878  0000D4  0E00               	movlw	0
   879  0000D6  6FC4               	movwf	main@speed& (0+255),b
   880  0000D8                     l4641:
   881                           
   882                           ;main.c: 72:         counter++;
   883  0000D8  0100               	movlb	0	; () banked
   884  0000DA  4BC2               	infsnz	main@counter& (0+255),f,b
   885  0000DC  2BC3               	incf	(main@counter+1)& (0+255),f,b
   886  0000DE                     
   887                           ; BSR set to: 0
   888                           ;main.c: 73:         _delay((unsigned long)((50)*(20000000/4000.0)));
   889  0000DE  0E02               	movlw	2
   890  0000E0  6E55               	movwf	(??_main+1)^0,c
   891  0000E2  0E45               	movlw	69
   892  0000E4  6E54               	movwf	??_main^0,c
   893  0000E6  0EAA               	movlw	170
   894  0000E8                     u1697:
   895  0000E8  2EE8               	decfsz	wreg,f,c
   896  0000EA  D7FE               	bra	u1697
   897  0000EC  2E54               	decfsz	??_main^0,f,c
   898  0000EE  D7FC               	bra	u1697
   899  0000F0  2E55               	decfsz	(??_main+1)^0,f,c
   900  0000F2  D7FA               	bra	u1697
   901  0000F4                     
   902                           ;main.c: 79:         if (b10FuncActive && !lastb10 && !blinkb1 && !blinkb2){
   903  0000F4  502E               	movf	_b10FuncActive^0,w,c
   904  0000F6  102F               	iorwf	(_b10FuncActive+1)^0,w,c
   905  0000F8  B4D8               	btfsc	status,2,c
   906  0000FA  EF81  F000         	goto	u1391
   907  0000FE  EF83  F000         	goto	u1390
   908  000102                     u1391:
   909  000102  EFBE  F000         	goto	l4663
   910  000106                     u1390:
   911  000106  5003               	movf	_lastb10^0,w,c
   912  000108  1004               	iorwf	(_lastb10+1)^0,w,c
   913  00010A  A4D8               	btfss	status,2,c
   914  00010C  EF8A  F000         	goto	u1401
   915  000110  EF8C  F000         	goto	u1400
   916  000114                     u1401:
   917  000114  EFBE  F000         	goto	l4663
   918  000118                     u1400:
   919  000118  5017               	movf	_blinkb1^0,w,c
   920  00011A  1018               	iorwf	(_blinkb1+1)^0,w,c
   921  00011C  A4D8               	btfss	status,2,c
   922  00011E  EF93  F000         	goto	u1411
   923  000122  EF95  F000         	goto	u1410
   924  000126                     u1411:
   925  000126  EFBE  F000         	goto	l4663
   926  00012A                     u1410:
   927  00012A  5013               	movf	_blinkb2^0,w,c
   928  00012C  1014               	iorwf	(_blinkb2+1)^0,w,c
   929  00012E  A4D8               	btfss	status,2,c
   930  000130  EF9C  F000         	goto	u1421
   931  000134  EF9E  F000         	goto	u1420
   932  000138                     u1421:
   933  000138  EFBE  F000         	goto	l4663
   934  00013C                     u1420:
   935  00013C                     
   936                           ;main.c: 80:             blinkb10 = 1;
   937  00013C  0E00               	movlw	0
   938  00013E  6E02               	movwf	(_blinkb10+1)^0,c
   939  000140  0E01               	movlw	1
   940  000142  6E01               	movwf	_blinkb10^0,c
   941  000144                     
   942                           ;main.c: 81:             canRightSignal(1);
   943  000144  0E00               	movlw	0
   944  000146  6E53               	movwf	(canRightSignal@number+1)^0,c
   945  000148  0E01               	movlw	1
   946  00014A  6E52               	movwf	canRightSignal@number^0,c
   947  00014C  EC08  F00D         	call	_canRightSignal	;wreg free
   948  000150                     
   949                           ;main.c: 82:             _delay((unsigned long)((1)*(20000000/4000.0)));
   950  000150  0E07               	movlw	7
   951  000152  6E54               	movwf	??_main^0,c
   952  000154  0E7D               	movlw	125
   953  000156                     u1707:
   954  000156  2EE8               	decfsz	wreg,f,c
   955  000158  D7FE               	bra	u1707
   956  00015A  2E54               	decfsz	??_main^0,f,c
   957  00015C  D7FC               	bra	u1707
   958  00015E  F000               	nop	
   959  000160                     
   960                           ;main.c: 83:             rightTurnIndicator(1);
   961  000160  0E00               	movlw	0
   962  000162  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
   963  000164  0E01               	movlw	1
   964  000166  6E3B               	movwf	rightTurnIndicator@value^0,c
   965  000168  ECA8  F009         	call	_rightTurnIndicator	;wreg free
   966  00016C                     
   967                           ;main.c: 84:              _delay((unsigned long)((1)*(20000000/4000.0)));
   968  00016C  0E07               	movlw	7
   969  00016E  6E54               	movwf	??_main^0,c
   970  000170  0E7D               	movlw	125
   971  000172                     u1717:
   972  000172  2EE8               	decfsz	wreg,f,c
   973  000174  D7FE               	bra	u1717
   974  000176  2E54               	decfsz	??_main^0,f,c
   975  000178  D7FC               	bra	u1717
   976  00017A  F000               	nop	
   977  00017C                     l4663:
   978                           
   979                           ;main.c: 86:         if (b1FuncActive && !lastb1 && !blinkb2 && !blinkb10){
   980  00017C  5036               	movf	_b1FuncActive^0,w,c
   981  00017E  1037               	iorwf	(_b1FuncActive+1)^0,w,c
   982  000180  B4D8               	btfsc	status,2,c
   983  000182  EFC5  F000         	goto	u1431
   984  000186  EFC7  F000         	goto	u1430
   985  00018A                     u1431:
   986  00018A  EF02  F001         	goto	l4681
   987  00018E                     u1430:
   988  00018E  5019               	movf	_lastb1^0,w,c
   989  000190  101A               	iorwf	(_lastb1+1)^0,w,c
   990  000192  A4D8               	btfss	status,2,c
   991  000194  EFCE  F000         	goto	u1441
   992  000198  EFD0  F000         	goto	u1440
   993  00019C                     u1441:
   994  00019C  EF02  F001         	goto	l4681
   995  0001A0                     u1440:
   996  0001A0  5013               	movf	_blinkb2^0,w,c
   997  0001A2  1014               	iorwf	(_blinkb2+1)^0,w,c
   998  0001A4  A4D8               	btfss	status,2,c
   999  0001A6  EFD7  F000         	goto	u1451
  1000  0001AA  EFD9  F000         	goto	u1450
  1001  0001AE                     u1451:
  1002  0001AE  EF02  F001         	goto	l4681
  1003  0001B2                     u1450:
  1004  0001B2  5001               	movf	_blinkb10^0,w,c
  1005  0001B4  1002               	iorwf	(_blinkb10+1)^0,w,c
  1006  0001B6  A4D8               	btfss	status,2,c
  1007  0001B8  EFE0  F000         	goto	u1461
  1008  0001BC  EFE2  F000         	goto	u1460
  1009  0001C0                     u1461:
  1010  0001C0  EF02  F001         	goto	l4681
  1011  0001C4                     u1460:
  1012  0001C4                     
  1013                           ;main.c: 87:             blinkb1 = 1;
  1014  0001C4  0E00               	movlw	0
  1015  0001C6  6E18               	movwf	(_blinkb1+1)^0,c
  1016  0001C8  0E01               	movlw	1
  1017  0001CA  6E17               	movwf	_blinkb1^0,c
  1018  0001CC                     
  1019                           ;main.c: 88:             canLeftSignal(1);
  1020  0001CC  0E00               	movlw	0
  1021  0001CE  6E53               	movwf	(canLeftSignal@number+1)^0,c
  1022  0001D0  0E01               	movlw	1
  1023  0001D2  6E52               	movwf	canLeftSignal@number^0,c
  1024  0001D4  EC1E  F00D         	call	_canLeftSignal	;wreg free
  1025  0001D8                     
  1026                           ;main.c: 89:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1027  0001D8  0E07               	movlw	7
  1028  0001DA  6E54               	movwf	??_main^0,c
  1029  0001DC  0E7D               	movlw	125
  1030  0001DE                     u1727:
  1031  0001DE  2EE8               	decfsz	wreg,f,c
  1032  0001E0  D7FE               	bra	u1727
  1033  0001E2  2E54               	decfsz	??_main^0,f,c
  1034  0001E4  D7FC               	bra	u1727
  1035  0001E6  F000               	nop	
  1036  0001E8                     
  1037                           ;main.c: 90:             leftTurnIndicator(1);
  1038  0001E8  0E00               	movlw	0
  1039  0001EA  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  1040  0001EC  0E01               	movlw	1
  1041  0001EE  6E3B               	movwf	leftTurnIndicator@value^0,c
  1042  0001F0  EC8C  F00A         	call	_leftTurnIndicator	;wreg free
  1043  0001F4                     
  1044                           ;main.c: 91:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1045  0001F4  0E07               	movlw	7
  1046  0001F6  6E54               	movwf	??_main^0,c
  1047  0001F8  0E7D               	movlw	125
  1048  0001FA                     u1737:
  1049  0001FA  2EE8               	decfsz	wreg,f,c
  1050  0001FC  D7FE               	bra	u1737
  1051  0001FE  2E54               	decfsz	??_main^0,f,c
  1052  000200  D7FC               	bra	u1737
  1053  000202  F000               	nop	
  1054  000204                     l4681:
  1055                           
  1056                           ;main.c: 93:         if (b2FuncActive && !lastb2){
  1057  000204  5032               	movf	_b2FuncActive^0,w,c
  1058  000206  1033               	iorwf	(_b2FuncActive+1)^0,w,c
  1059  000208  B4D8               	btfsc	status,2,c
  1060  00020A  EF09  F001         	goto	u1471
  1061  00020E  EF0B  F001         	goto	u1470
  1062  000212                     u1471:
  1063  000212  EF74  F001         	goto	l4711
  1064  000216                     u1470:
  1065  000216  5015               	movf	_lastb2^0,w,c
  1066  000218  1016               	iorwf	(_lastb2+1)^0,w,c
  1067  00021A  A4D8               	btfss	status,2,c
  1068  00021C  EF12  F001         	goto	u1481
  1069  000220  EF14  F001         	goto	u1480
  1070  000224                     u1481:
  1071  000224  EF74  F001         	goto	l4711
  1072  000228                     u1480:
  1073  000228                     
  1074                           ;main.c: 94:             blinkb2 = 1;
  1075  000228  0E00               	movlw	0
  1076  00022A  6E14               	movwf	(_blinkb2+1)^0,c
  1077  00022C  0E01               	movlw	1
  1078  00022E  6E13               	movwf	_blinkb2^0,c
  1079                           
  1080                           ;main.c: 95:             blinkb1 = 0;
  1081  000230  0E00               	movlw	0
  1082  000232  6E18               	movwf	(_blinkb1+1)^0,c
  1083  000234  0E00               	movlw	0
  1084  000236  6E17               	movwf	_blinkb1^0,c
  1085                           
  1086                           ;main.c: 96:             blinkb10 = 0;
  1087  000238  0E00               	movlw	0
  1088  00023A  6E02               	movwf	(_blinkb10+1)^0,c
  1089  00023C  0E00               	movlw	0
  1090  00023E  6E01               	movwf	_blinkb10^0,c
  1091  000240                     
  1092                           ;main.c: 99:             canLeftSignal(0);
  1093  000240  0E00               	movlw	0
  1094  000242  6E53               	movwf	(canLeftSignal@number+1)^0,c
  1095  000244  0E00               	movlw	0
  1096  000246  6E52               	movwf	canLeftSignal@number^0,c
  1097  000248  EC1E  F00D         	call	_canLeftSignal	;wreg free
  1098  00024C                     
  1099                           ;main.c: 100:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1100  00024C  0E07               	movlw	7
  1101  00024E  6E54               	movwf	??_main^0,c
  1102  000250  0E7D               	movlw	125
  1103  000252                     u1747:
  1104  000252  2EE8               	decfsz	wreg,f,c
  1105  000254  D7FE               	bra	u1747
  1106  000256  2E54               	decfsz	??_main^0,f,c
  1107  000258  D7FC               	bra	u1747
  1108  00025A  F000               	nop	
  1109  00025C                     
  1110                           ;main.c: 101:             canRightSignal(0);
  1111  00025C  0E00               	movlw	0
  1112  00025E  6E53               	movwf	(canRightSignal@number+1)^0,c
  1113  000260  0E00               	movlw	0
  1114  000262  6E52               	movwf	canRightSignal@number^0,c
  1115  000264  EC08  F00D         	call	_canRightSignal	;wreg free
  1116  000268                     
  1117                           ;main.c: 102:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1118  000268  0E07               	movlw	7
  1119  00026A  6E54               	movwf	??_main^0,c
  1120  00026C  0E7D               	movlw	125
  1121  00026E                     u1757:
  1122  00026E  2EE8               	decfsz	wreg,f,c
  1123  000270  D7FE               	bra	u1757
  1124  000272  2E54               	decfsz	??_main^0,f,c
  1125  000274  D7FC               	bra	u1757
  1126  000276  F000               	nop	
  1127  000278                     
  1128                           ;main.c: 103:             leftTurnIndicator(0);
  1129  000278  0E00               	movlw	0
  1130  00027A  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  1131  00027C  0E00               	movlw	0
  1132  00027E  6E3B               	movwf	leftTurnIndicator@value^0,c
  1133  000280  EC8C  F00A         	call	_leftTurnIndicator	;wreg free
  1134  000284                     
  1135                           ;main.c: 104:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1136  000284  0E07               	movlw	7
  1137  000286  6E54               	movwf	??_main^0,c
  1138  000288  0E7D               	movlw	125
  1139  00028A                     u1767:
  1140  00028A  2EE8               	decfsz	wreg,f,c
  1141  00028C  D7FE               	bra	u1767
  1142  00028E  2E54               	decfsz	??_main^0,f,c
  1143  000290  D7FC               	bra	u1767
  1144  000292  F000               	nop	
  1145  000294                     
  1146                           ;main.c: 105:             rightTurnIndicator(0);
  1147  000294  0E00               	movlw	0
  1148  000296  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
  1149  000298  0E00               	movlw	0
  1150  00029A  6E3B               	movwf	rightTurnIndicator@value^0,c
  1151  00029C  ECA8  F009         	call	_rightTurnIndicator	;wreg free
  1152  0002A0                     
  1153                           ;main.c: 106:              _delay((unsigned long)((1)*(20000000/4000.0)));
  1154  0002A0  0E07               	movlw	7
  1155  0002A2  6E54               	movwf	??_main^0,c
  1156  0002A4  0E7D               	movlw	125
  1157  0002A6                     u1777:
  1158  0002A6  2EE8               	decfsz	wreg,f,c
  1159  0002A8  D7FE               	bra	u1777
  1160  0002AA  2E54               	decfsz	??_main^0,f,c
  1161  0002AC  D7FC               	bra	u1777
  1162  0002AE  F000               	nop	
  1163  0002B0                     
  1164                           ;main.c: 108:             canHazardSignal(1);
  1165  0002B0  0E00               	movlw	0
  1166  0002B2  6E53               	movwf	(canHazardSignal@number+1)^0,c
  1167  0002B4  0E01               	movlw	1
  1168  0002B6  6E52               	movwf	canHazardSignal@number^0,c
  1169  0002B8  EC34  F00D         	call	_canHazardSignal	;wreg free
  1170  0002BC                     
  1171                           ;main.c: 109:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1172  0002BC  0E07               	movlw	7
  1173  0002BE  6E54               	movwf	??_main^0,c
  1174  0002C0  0E7D               	movlw	125
  1175  0002C2                     u1787:
  1176  0002C2  2EE8               	decfsz	wreg,f,c
  1177  0002C4  D7FE               	bra	u1787
  1178  0002C6  2E54               	decfsz	??_main^0,f,c
  1179  0002C8  D7FC               	bra	u1787
  1180  0002CA  F000               	nop	
  1181  0002CC                     
  1182                           ;main.c: 110:             hazardSignal(1);
  1183  0002CC  0E00               	movlw	0
  1184  0002CE  6E3C               	movwf	(hazardSignal@value+1)^0,c
  1185  0002D0  0E01               	movlw	1
  1186  0002D2  6E3B               	movwf	hazardSignal@value^0,c
  1187  0002D4  ECD8  F00A         	call	_hazardSignal	;wreg free
  1188  0002D8                     
  1189                           ;main.c: 111:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1190  0002D8  0E07               	movlw	7
  1191  0002DA  6E54               	movwf	??_main^0,c
  1192  0002DC  0E7D               	movlw	125
  1193  0002DE                     u1797:
  1194  0002DE  2EE8               	decfsz	wreg,f,c
  1195  0002E0  D7FE               	bra	u1797
  1196  0002E2  2E54               	decfsz	??_main^0,f,c
  1197  0002E4  D7FC               	bra	u1797
  1198  0002E6  F000               	nop	
  1199  0002E8                     l4711:
  1200                           
  1201                           ;main.c: 115:         if (!b10FuncActive && lastb10){
  1202  0002E8  502E               	movf	_b10FuncActive^0,w,c
  1203  0002EA  102F               	iorwf	(_b10FuncActive+1)^0,w,c
  1204  0002EC  A4D8               	btfss	status,2,c
  1205  0002EE  EF7B  F001         	goto	u1491
  1206  0002F2  EF7D  F001         	goto	u1490
  1207  0002F6                     u1491:
  1208  0002F6  EFA6  F001         	goto	l4725
  1209  0002FA                     u1490:
  1210  0002FA  5003               	movf	_lastb10^0,w,c
  1211  0002FC  1004               	iorwf	(_lastb10+1)^0,w,c
  1212  0002FE  B4D8               	btfsc	status,2,c
  1213  000300  EF84  F001         	goto	u1501
  1214  000304  EF86  F001         	goto	u1500
  1215  000308                     u1501:
  1216  000308  EFA6  F001         	goto	l4725
  1217  00030C                     u1500:
  1218  00030C                     
  1219                           ;main.c: 116:             blinkb10 = 0;
  1220  00030C  0E00               	movlw	0
  1221  00030E  6E02               	movwf	(_blinkb10+1)^0,c
  1222  000310  0E00               	movlw	0
  1223  000312  6E01               	movwf	_blinkb10^0,c
  1224  000314                     
  1225                           ;main.c: 117:             canRightSignal(0);
  1226  000314  0E00               	movlw	0
  1227  000316  6E53               	movwf	(canRightSignal@number+1)^0,c
  1228  000318  0E00               	movlw	0
  1229  00031A  6E52               	movwf	canRightSignal@number^0,c
  1230  00031C  EC08  F00D         	call	_canRightSignal	;wreg free
  1231  000320                     
  1232                           ;main.c: 118:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1233  000320  0E07               	movlw	7
  1234  000322  6E54               	movwf	??_main^0,c
  1235  000324  0E7D               	movlw	125
  1236  000326                     u1807:
  1237  000326  2EE8               	decfsz	wreg,f,c
  1238  000328  D7FE               	bra	u1807
  1239  00032A  2E54               	decfsz	??_main^0,f,c
  1240  00032C  D7FC               	bra	u1807
  1241  00032E  F000               	nop	
  1242  000330                     
  1243                           ;main.c: 119:             rightTurnIndicator(0);
  1244  000330  0E00               	movlw	0
  1245  000332  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
  1246  000334  0E00               	movlw	0
  1247  000336  6E3B               	movwf	rightTurnIndicator@value^0,c
  1248  000338  ECA8  F009         	call	_rightTurnIndicator	;wreg free
  1249  00033C                     
  1250                           ;main.c: 120:              _delay((unsigned long)((1)*(20000000/4000.0)));
  1251  00033C  0E07               	movlw	7
  1252  00033E  6E54               	movwf	??_main^0,c
  1253  000340  0E7D               	movlw	125
  1254  000342                     u1817:
  1255  000342  2EE8               	decfsz	wreg,f,c
  1256  000344  D7FE               	bra	u1817
  1257  000346  2E54               	decfsz	??_main^0,f,c
  1258  000348  D7FC               	bra	u1817
  1259  00034A  F000               	nop	
  1260  00034C                     l4725:
  1261                           
  1262                           ;main.c: 122:         if (!b1FuncActive && lastb1){
  1263  00034C  5036               	movf	_b1FuncActive^0,w,c
  1264  00034E  1037               	iorwf	(_b1FuncActive+1)^0,w,c
  1265  000350  A4D8               	btfss	status,2,c
  1266  000352  EFAD  F001         	goto	u1511
  1267  000356  EFAF  F001         	goto	u1510
  1268  00035A                     u1511:
  1269  00035A  EFD8  F001         	goto	l4739
  1270  00035E                     u1510:
  1271  00035E  5019               	movf	_lastb1^0,w,c
  1272  000360  101A               	iorwf	(_lastb1+1)^0,w,c
  1273  000362  B4D8               	btfsc	status,2,c
  1274  000364  EFB6  F001         	goto	u1521
  1275  000368  EFB8  F001         	goto	u1520
  1276  00036C                     u1521:
  1277  00036C  EFD8  F001         	goto	l4739
  1278  000370                     u1520:
  1279  000370                     
  1280                           ;main.c: 123:             blinkb1 = 0;
  1281  000370  0E00               	movlw	0
  1282  000372  6E18               	movwf	(_blinkb1+1)^0,c
  1283  000374  0E00               	movlw	0
  1284  000376  6E17               	movwf	_blinkb1^0,c
  1285  000378                     
  1286                           ;main.c: 124:             canLeftSignal(0);
  1287  000378  0E00               	movlw	0
  1288  00037A  6E53               	movwf	(canLeftSignal@number+1)^0,c
  1289  00037C  0E00               	movlw	0
  1290  00037E  6E52               	movwf	canLeftSignal@number^0,c
  1291  000380  EC1E  F00D         	call	_canLeftSignal	;wreg free
  1292  000384                     
  1293                           ;main.c: 125:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1294  000384  0E07               	movlw	7
  1295  000386  6E54               	movwf	??_main^0,c
  1296  000388  0E7D               	movlw	125
  1297  00038A                     u1827:
  1298  00038A  2EE8               	decfsz	wreg,f,c
  1299  00038C  D7FE               	bra	u1827
  1300  00038E  2E54               	decfsz	??_main^0,f,c
  1301  000390  D7FC               	bra	u1827
  1302  000392  F000               	nop	
  1303  000394                     
  1304                           ;main.c: 126:             leftTurnIndicator(0);
  1305  000394  0E00               	movlw	0
  1306  000396  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  1307  000398  0E00               	movlw	0
  1308  00039A  6E3B               	movwf	leftTurnIndicator@value^0,c
  1309  00039C  EC8C  F00A         	call	_leftTurnIndicator	;wreg free
  1310  0003A0                     
  1311                           ;main.c: 127:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1312  0003A0  0E07               	movlw	7
  1313  0003A2  6E54               	movwf	??_main^0,c
  1314  0003A4  0E7D               	movlw	125
  1315  0003A6                     u1837:
  1316  0003A6  2EE8               	decfsz	wreg,f,c
  1317  0003A8  D7FE               	bra	u1837
  1318  0003AA  2E54               	decfsz	??_main^0,f,c
  1319  0003AC  D7FC               	bra	u1837
  1320  0003AE  F000               	nop	
  1321  0003B0                     l4739:
  1322                           
  1323                           ;main.c: 129:         if (!b2FuncActive && lastb2){
  1324  0003B0  5032               	movf	_b2FuncActive^0,w,c
  1325  0003B2  1033               	iorwf	(_b2FuncActive+1)^0,w,c
  1326  0003B4  A4D8               	btfss	status,2,c
  1327  0003B6  EFDF  F001         	goto	u1531
  1328  0003BA  EFE1  F001         	goto	u1530
  1329  0003BE                     u1531:
  1330  0003BE  EF0A  F002         	goto	l4753
  1331  0003C2                     u1530:
  1332  0003C2  5015               	movf	_lastb2^0,w,c
  1333  0003C4  1016               	iorwf	(_lastb2+1)^0,w,c
  1334  0003C6  B4D8               	btfsc	status,2,c
  1335  0003C8  EFE8  F001         	goto	u1541
  1336  0003CC  EFEA  F001         	goto	u1540
  1337  0003D0                     u1541:
  1338  0003D0  EF0A  F002         	goto	l4753
  1339  0003D4                     u1540:
  1340  0003D4                     
  1341                           ;main.c: 130:             blinkb2 = 0;
  1342  0003D4  0E00               	movlw	0
  1343  0003D6  6E14               	movwf	(_blinkb2+1)^0,c
  1344  0003D8  0E00               	movlw	0
  1345  0003DA  6E13               	movwf	_blinkb2^0,c
  1346  0003DC                     
  1347                           ;main.c: 131:             canHazardSignal(0);
  1348  0003DC  0E00               	movlw	0
  1349  0003DE  6E53               	movwf	(canHazardSignal@number+1)^0,c
  1350  0003E0  0E00               	movlw	0
  1351  0003E2  6E52               	movwf	canHazardSignal@number^0,c
  1352  0003E4  EC34  F00D         	call	_canHazardSignal	;wreg free
  1353  0003E8                     
  1354                           ;main.c: 132:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1355  0003E8  0E07               	movlw	7
  1356  0003EA  6E54               	movwf	??_main^0,c
  1357  0003EC  0E7D               	movlw	125
  1358  0003EE                     u1847:
  1359  0003EE  2EE8               	decfsz	wreg,f,c
  1360  0003F0  D7FE               	bra	u1847
  1361  0003F2  2E54               	decfsz	??_main^0,f,c
  1362  0003F4  D7FC               	bra	u1847
  1363  0003F6  F000               	nop	
  1364  0003F8                     
  1365                           ;main.c: 133:             hazardSignal(0);
  1366  0003F8  0E00               	movlw	0
  1367  0003FA  6E3C               	movwf	(hazardSignal@value+1)^0,c
  1368  0003FC  0E00               	movlw	0
  1369  0003FE  6E3B               	movwf	hazardSignal@value^0,c
  1370  000400  ECD8  F00A         	call	_hazardSignal	;wreg free
  1371  000404                     
  1372                           ;main.c: 134:             _delay((unsigned long)((1)*(20000000/4000.0)));
  1373  000404  0E07               	movlw	7
  1374  000406  6E54               	movwf	??_main^0,c
  1375  000408  0E7D               	movlw	125
  1376  00040A                     u1857:
  1377  00040A  2EE8               	decfsz	wreg,f,c
  1378  00040C  D7FE               	bra	u1857
  1379  00040E  2E54               	decfsz	??_main^0,f,c
  1380  000410  D7FC               	bra	u1857
  1381  000412  F000               	nop	
  1382  000414                     l4753:
  1383                           
  1384                           ;main.c: 147:         lastb1 = b1FuncActive;
  1385  000414  C036  F019         	movff	_b1FuncActive,_lastb1
  1386  000418  C037  F01A         	movff	_b1FuncActive+1,_lastb1+1
  1387  00041C                     
  1388                           ;main.c: 148:         lastb2 = b2FuncActive;
  1389  00041C  C032  F015         	movff	_b2FuncActive,_lastb2
  1390  000420  C033  F016         	movff	_b2FuncActive+1,_lastb2+1
  1391  000424                     
  1392                           ;main.c: 149:         lastb10 = b10FuncActive;
  1393  000424  C02E  F003         	movff	_b10FuncActive,_lastb10
  1394  000428  C02F  F004         	movff	_b10FuncActive+1,_lastb10+1
  1395  00042C                     
  1396                           ;main.c: 151:         leftTurnButton(&b1FuncActive, &latchb1);
  1397  00042C  0E36               	movlw	low _b1FuncActive
  1398  00042E  6E3A               	movwf	leftTurnButton@b1FunctionActive^0,c
  1399  000430  0E00               	movlw	high _b1FuncActive
  1400  000432  6E3B               	movwf	(leftTurnButton@b1FunctionActive+1)^0,c
  1401  000434  0E34               	movlw	low _latchb1
  1402  000436  6E3C               	movwf	leftTurnButton@b1Latch^0,c
  1403  000438  0E00               	movlw	high _latchb1
  1404  00043A  6E3D               	movwf	(leftTurnButton@b1Latch+1)^0,c
  1405  00043C  EC6C  F008         	call	_leftTurnButton	;wreg free
  1406  000440                     
  1407                           ;main.c: 152:         rightTurnButton(&b10FuncActive, &latchb10);
  1408  000440  0E2E               	movlw	low _b10FuncActive
  1409  000442  6E3A               	movwf	rightTurnButton@b10FunctionActive^0,c
  1410  000444  0E00               	movlw	high _b10FuncActive
  1411  000446  6E3B               	movwf	(rightTurnButton@b10FunctionActive+1)^0,c
  1412  000448  0E2C               	movlw	low _latchb10
  1413  00044A  6E3C               	movwf	rightTurnButton@b10Latch^0,c
  1414  00044C  0E00               	movlw	high _latchb10
  1415  00044E  6E3D               	movwf	(rightTurnButton@b10Latch+1)^0,c
  1416  000450  ECF4  F007         	call	_rightTurnButton	;wreg free
  1417  000454                     
  1418                           ;main.c: 153:         hazardButton(&b2FuncActive, &latchb2);
  1419  000454  0E32               	movlw	low _b2FuncActive
  1420  000456  6E3A               	movwf	hazardButton@b2FunctionActive^0,c
  1421  000458  0E00               	movlw	high _b2FuncActive
  1422  00045A  6E3B               	movwf	(hazardButton@b2FunctionActive+1)^0,c
  1423  00045C  0E30               	movlw	low _latchb2
  1424  00045E  6E3C               	movwf	hazardButton@b2Latch^0,c
  1425  000460  0E00               	movlw	high _latchb2
  1426  000462  6E3D               	movwf	(hazardButton@b2Latch+1)^0,c
  1427  000464  ECE4  F008         	call	_hazardButton	;wreg free
  1428  000468                     
  1429                           ;main.c: 155:         if (counter >= 10 && speed != -1){
  1430  000468  0100               	movlb	0	; () banked
  1431  00046A  BFC3               	btfsc	(main@counter+1)& (0+255),7,b
  1432  00046C  EF41  F002         	goto	u1551
  1433  000470  51C3               	movf	(main@counter+1)& (0+255),w,b
  1434  000472  E109               	bnz	u1550
  1435  000474  0E0A               	movlw	10
  1436  000476  5DC2               	subwf	main@counter& (0+255),w,b
  1437  000478  A0D8               	btfss	status,0,c
  1438  00047A  EF41  F002         	goto	u1551
  1439  00047E  EF43  F002         	goto	u1550
  1440  000482                     u1551:
  1441  000482  EF5A  F002         	goto	l4775
  1442  000486                     u1550:
  1443  000486                     
  1444                           ; BSR set to: 0
  1445  000486  29C4               	incf	main@speed& (0+255),w,b
  1446  000488  E108               	bnz	u1560
  1447  00048A  29C5               	incf	(main@speed+1)& (0+255),w,b
  1448  00048C  B4D8               	btfsc	status,2,c
  1449  00048E  EF4B  F002         	goto	u1561
  1450  000492  EF4D  F002         	goto	u1560
  1451  000496                     u1561:
  1452  000496  EF5A  F002         	goto	l4775
  1453  00049A                     u1560:
  1454  00049A                     
  1455                           ; BSR set to: 0
  1456                           ;main.c: 156:             counter = 0;
  1457  00049A  0E00               	movlw	0
  1458  00049C  6FC3               	movwf	(main@counter+1)& (0+255),b
  1459  00049E  0E00               	movlw	0
  1460  0004A0  6FC2               	movwf	main@counter& (0+255),b
  1461  0004A2                     
  1462                           ; BSR set to: 0
  1463                           ;main.c: 157:             motorSpeed(speed);
  1464  0004A2  C0C4  F03B         	movff	main@speed,motorSpeed@value
  1465  0004A6  C0C5  F03C         	movff	main@speed+1,motorSpeed@value+1
  1466  0004AA  ECF4  F009         	call	_motorSpeed	;wreg free
  1467  0004AE                     
  1468                           ;main.c: 158:             speed++;
  1469  0004AE  0100               	movlb	0	; () banked
  1470  0004B0  4BC4               	infsnz	main@speed& (0+255),f,b
  1471  0004B2  2BC5               	incf	(main@speed+1)& (0+255),f,b
  1472  0004B4                     l4775:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;main.c: 164:         if (CAN_receive(&rx)){
  1476  0004B4  0E1E               	movlw	low _rx
  1477  0004B6  6E4D               	movwf	CAN_receive@tempCanMsg^0,c
  1478  0004B8  0E00               	movlw	high _rx
  1479  0004BA  6E4E               	movwf	(CAN_receive@tempCanMsg+1)^0,c
  1480  0004BC  ECA1  F004         	call	_CAN_receive	;wreg free
  1481  0004C0  0900               	iorlw	0
  1482  0004C2  B4D8               	btfsc	status,2,c
  1483  0004C4  EF66  F002         	goto	u1571
  1484  0004C8  EF68  F002         	goto	u1570
  1485  0004CC                     u1571:
  1486  0004CC  EF6C  F000         	goto	l4641
  1487  0004D0                     u1570:
  1488  0004D0                     
  1489                           ;main.c: 165:             if (rx.frame.idType == 1){
  1490  0004D0  041E               	decf	_rx^0,w,c
  1491  0004D2  A4D8               	btfss	status,2,c
  1492  0004D4  EF6E  F002         	goto	u1581
  1493  0004D8  EF70  F002         	goto	u1580
  1494  0004DC                     u1581:
  1495  0004DC  EF6C  F000         	goto	l4641
  1496  0004E0                     u1580:
  1497  0004E0                     
  1498                           ;main.c: 167:                 if (rx.frame.id == 0x02F4 || rx.frame.id == 0x04F4 || rx.f
      +                          rame.id == 0x05F4 || rx.frame.id == 0x07F4 || rx.frame.id == 0x08F4){
  1499  0004E0  0EF4               	movlw	244
  1500  0004E2  181F               	xorwf	(_rx+1)^0,w,c
  1501  0004E4  E10B               	bnz	u1590
  1502  0004E6  0E02               	movlw	2
  1503  0004E8  1820               	xorwf	(_rx+2)^0,w,c
  1504  0004EA  1021               	iorwf	(_rx+3)^0,w,c
  1505  0004EC  1022               	iorwf	(_rx+4)^0,w,c
  1506  0004EE  B4D8               	btfsc	status,2,c
  1507  0004F0  EF7C  F002         	goto	u1591
  1508  0004F4  EF7E  F002         	goto	u1590
  1509  0004F8                     u1591:
  1510  0004F8  EFB6  F002         	goto	l4789
  1511  0004FC                     u1590:
  1512  0004FC  0EF4               	movlw	244
  1513  0004FE  181F               	xorwf	(_rx+1)^0,w,c
  1514  000500  E10B               	bnz	u1600
  1515  000502  0E04               	movlw	4
  1516  000504  1820               	xorwf	(_rx+2)^0,w,c
  1517  000506  1021               	iorwf	(_rx+3)^0,w,c
  1518  000508  1022               	iorwf	(_rx+4)^0,w,c
  1519  00050A  B4D8               	btfsc	status,2,c
  1520  00050C  EF8A  F002         	goto	u1601
  1521  000510  EF8C  F002         	goto	u1600
  1522  000514                     u1601:
  1523  000514  EFB6  F002         	goto	l4789
  1524  000518                     u1600:
  1525  000518  0EF4               	movlw	244
  1526  00051A  181F               	xorwf	(_rx+1)^0,w,c
  1527  00051C  E10B               	bnz	u1610
  1528  00051E  0E05               	movlw	5
  1529  000520  1820               	xorwf	(_rx+2)^0,w,c
  1530  000522  1021               	iorwf	(_rx+3)^0,w,c
  1531  000524  1022               	iorwf	(_rx+4)^0,w,c
  1532  000526  B4D8               	btfsc	status,2,c
  1533  000528  EF98  F002         	goto	u1611
  1534  00052C  EF9A  F002         	goto	u1610
  1535  000530                     u1611:
  1536  000530  EFB6  F002         	goto	l4789
  1537  000534                     u1610:
  1538  000534  0EF4               	movlw	244
  1539  000536  181F               	xorwf	(_rx+1)^0,w,c
  1540  000538  E10B               	bnz	u1620
  1541  00053A  0E07               	movlw	7
  1542  00053C  1820               	xorwf	(_rx+2)^0,w,c
  1543  00053E  1021               	iorwf	(_rx+3)^0,w,c
  1544  000540  1022               	iorwf	(_rx+4)^0,w,c
  1545  000542  B4D8               	btfsc	status,2,c
  1546  000544  EFA6  F002         	goto	u1621
  1547  000548  EFA8  F002         	goto	u1620
  1548  00054C                     u1621:
  1549  00054C  EFB6  F002         	goto	l4789
  1550  000550                     u1620:
  1551  000550  0EF4               	movlw	244
  1552  000552  181F               	xorwf	(_rx+1)^0,w,c
  1553  000554  E109               	bnz	u1631
  1554  000556  0E08               	movlw	8
  1555  000558  1820               	xorwf	(_rx+2)^0,w,c
  1556  00055A  1021               	iorwf	(_rx+3)^0,w,c
  1557  00055C  1022               	iorwf	(_rx+4)^0,w,c
  1558  00055E  A4D8               	btfss	status,2,c
  1559  000560  EFB4  F002         	goto	u1631
  1560  000564  EFB6  F002         	goto	u1630
  1561  000568                     u1631:
  1562  000568  EFC4  F002         	goto	l4793
  1563  00056C                     u1630:
  1564  00056C                     l4789:
  1565                           
  1566                           ;main.c: 168:                     _delay((unsigned long)((1)*(20000000/4000.0)));
  1567  00056C  0E07               	movlw	7
  1568  00056E  6E54               	movwf	??_main^0,c
  1569  000570  0E7D               	movlw	125
  1570  000572                     u1867:
  1571  000572  2EE8               	decfsz	wreg,f,c
  1572  000574  D7FE               	bra	u1867
  1573  000576  2E54               	decfsz	??_main^0,f,c
  1574  000578  D7FC               	bra	u1867
  1575  00057A  F000               	nop	
  1576  00057C                     
  1577                           ;main.c: 169:                     warningLED(1);
  1578  00057C  0E00               	movlw	0
  1579  00057E  6E3C               	movwf	(warningLED@value+1)^0,c
  1580  000580  0E01               	movlw	1
  1581  000582  6E3B               	movwf	warningLED@value^0,c
  1582  000584  EC5C  F009         	call	_warningLED	;wreg free
  1583  000588                     l4793:
  1584                           
  1585                           ;main.c: 172:                 if (rx.frame.id == 0x80){
  1586  000588  0E80               	movlw	128
  1587  00058A  181F               	xorwf	(_rx+1)^0,w,c
  1588  00058C  1020               	iorwf	(_rx+2)^0,w,c
  1589  00058E  1021               	iorwf	(_rx+3)^0,w,c
  1590  000590  1022               	iorwf	(_rx+4)^0,w,c
  1591  000592  A4D8               	btfss	status,2,c
  1592  000594  EFCE  F002         	goto	u1641
  1593  000598  EFD0  F002         	goto	u1640
  1594  00059C                     u1641:
  1595  00059C  EFF6  F002         	goto	l4805
  1596  0005A0                     u1640:
  1597  0005A0                     
  1598                           ;main.c: 173:                     if (rx.frame.data0 == 1){
  1599  0005A0  0424               	decf	(_rx+6)^0,w,c
  1600  0005A2  A4D8               	btfss	status,2,c
  1601  0005A4  EFD6  F002         	goto	u1651
  1602  0005A8  EFD8  F002         	goto	u1650
  1603  0005AC                     u1651:
  1604  0005AC  EFE8  F002         	goto	l4801
  1605  0005B0                     u1650:
  1606  0005B0                     
  1607                           ;main.c: 174:                         _delay((unsigned long)((1)*(20000000/4000.0)));
  1608  0005B0  0E07               	movlw	7
  1609  0005B2  6E54               	movwf	??_main^0,c
  1610  0005B4  0E7D               	movlw	125
  1611  0005B6                     u1877:
  1612  0005B6  2EE8               	decfsz	wreg,f,c
  1613  0005B8  D7FE               	bra	u1877
  1614  0005BA  2E54               	decfsz	??_main^0,f,c
  1615  0005BC  D7FC               	bra	u1877
  1616  0005BE  F000               	nop	
  1617  0005C0                     
  1618                           ;main.c: 175:                         auxBattConn(1);
  1619  0005C0  0E00               	movlw	0
  1620  0005C2  6E3C               	movwf	(auxBattConn@value+1)^0,c
  1621  0005C4  0E01               	movlw	1
  1622  0005C6  6E3B               	movwf	auxBattConn@value^0,c
  1623  0005C8  EC08  F00C         	call	_auxBattConn	;wreg free
  1624                           
  1625                           ;main.c: 176:                     }
  1626  0005CC  EFF6  F002         	goto	l4805
  1627  0005D0                     l4801:
  1628                           
  1629                           ;main.c: 178:                         _delay((unsigned long)((1)*(20000000/4000.0)));
  1630  0005D0  0E07               	movlw	7
  1631  0005D2  6E54               	movwf	??_main^0,c
  1632  0005D4  0E7D               	movlw	125
  1633  0005D6                     u1887:
  1634  0005D6  2EE8               	decfsz	wreg,f,c
  1635  0005D8  D7FE               	bra	u1887
  1636  0005DA  2E54               	decfsz	??_main^0,f,c
  1637  0005DC  D7FC               	bra	u1887
  1638  0005DE  F000               	nop	
  1639  0005E0                     
  1640                           ;main.c: 179:                         auxBattConn(0);
  1641  0005E0  0E00               	movlw	0
  1642  0005E2  6E3C               	movwf	(auxBattConn@value+1)^0,c
  1643  0005E4  0E00               	movlw	0
  1644  0005E6  6E3B               	movwf	auxBattConn@value^0,c
  1645  0005E8  EC08  F00C         	call	_auxBattConn	;wreg free
  1646  0005EC                     l4805:
  1647                           
  1648                           ;main.c: 183:                 if (rx.frame.id == 0x81){
  1649  0005EC  0E81               	movlw	129
  1650  0005EE  181F               	xorwf	(_rx+1)^0,w,c
  1651  0005F0  1020               	iorwf	(_rx+2)^0,w,c
  1652  0005F2  1021               	iorwf	(_rx+3)^0,w,c
  1653  0005F4  1022               	iorwf	(_rx+4)^0,w,c
  1654  0005F6  A4D8               	btfss	status,2,c
  1655  0005F8  EF00  F003         	goto	u1661
  1656  0005FC  EF02  F003         	goto	u1660
  1657  000600                     u1661:
  1658  000600  EF10  F003         	goto	l680
  1659  000604                     u1660:
  1660  000604                     
  1661                           ;main.c: 184:                     _delay((unsigned long)((1)*(20000000/4000.0)));
  1662  000604  0E07               	movlw	7
  1663  000606  6E54               	movwf	??_main^0,c
  1664  000608  0E7D               	movlw	125
  1665  00060A                     u1897:
  1666  00060A  2EE8               	decfsz	wreg,f,c
  1667  00060C  D7FE               	bra	u1897
  1668  00060E  2E54               	decfsz	??_main^0,f,c
  1669  000610  D7FC               	bra	u1897
  1670  000612  F000               	nop	
  1671  000614                     
  1672                           ;main.c: 185:                     speed = rx.frame.data0;
  1673  000614  C024  F0C4         	movff	_rx+6,main@speed
  1674  000618  0100               	movlb	0	; () banked
  1675  00061A  6BC5               	clrf	(main@speed+1)& (0+255),b
  1676  00061C  EF6C  F000         	goto	l4641
  1677  000620                     l680:
  1678  000620  EF6C  F000         	goto	l4641
  1679  000624  EF26  F000         	goto	start
  1680  000628                     __end_of_main:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _rightTurnButton *****************
  1684 ;; Defined at:
  1685 ;;		line 33 in file "button_functionality.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  b10FunctionA    2    2[COMRAM] PTR int 
  1688 ;;		 -> b10FuncActive(2), 
  1689 ;;  b10Latch        2    4[COMRAM] PTR int 
  1690 ;;		 -> buttonRuntime@var(2), latchb10(2), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1705 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1706 ;;Total ram usage:        6 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 3
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;;		_buttonRuntime
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text1
  1718  000FE8                     __ptext1:
  1719                           	callstack 0
  1720  000FE8                     _rightTurnButton:
  1721                           	callstack 27
  1722  000FE8                     
  1723                           ;button_functionality.c: 34:     switch (PORTCbits.RC1) {
  1724  000FE8  EF4E  F008         	goto	l4569
  1725  000FEC                     l4551:
  1726                           
  1727                           ;button_functionality.c: 36:         *b10Latch = 0;
  1728  000FEC  C03C  FFD9         	movff	rightTurnButton@b10Latch,fsr2l
  1729  000FF0  C03D  FFDA         	movff	rightTurnButton@b10Latch+1,fsr2h
  1730  000FF4  0E00               	movlw	0
  1731  000FF6  6EDE               	movwf	postinc2,c
  1732  000FF8  0E00               	movlw	0
  1733  000FFA  6EDD               	movwf	postdec2,c
  1734                           
  1735                           ;button_functionality.c: 37:         break;
  1736  000FFC  EF6B  F008         	goto	l767
  1737  001000                     l4553:
  1738                           
  1739                           ;button_functionality.c: 44:                 *b10FunctionActive = 1;
  1740  001000  C03A  FFD9         	movff	rightTurnButton@b10FunctionActive,fsr2l
  1741  001004  C03B  FFDA         	movff	rightTurnButton@b10FunctionActive+1,fsr2h
  1742  001008  0E01               	movlw	1
  1743  00100A  6EDE               	movwf	postinc2,c
  1744  00100C  0E00               	movlw	0
  1745  00100E  6EDD               	movwf	postdec2,c
  1746                           
  1747                           ;button_functionality.c: 45:                 break;
  1748  001010  EF2E  F008         	goto	l4561
  1749  001014                     l4555:
  1750                           
  1751                           ;button_functionality.c: 48:                 *b10FunctionActive = 0;
  1752  001014  C03A  FFD9         	movff	rightTurnButton@b10FunctionActive,fsr2l
  1753  001018  C03B  FFDA         	movff	rightTurnButton@b10FunctionActive+1,fsr2h
  1754  00101C  0E00               	movlw	0
  1755  00101E  6EDE               	movwf	postinc2,c
  1756  001020  0E00               	movlw	0
  1757  001022  6EDD               	movwf	postdec2,c
  1758                           
  1759                           ;button_functionality.c: 49:                 break;
  1760  001024  EF2E  F008         	goto	l4561
  1761  001028                     l4559:
  1762  001028  C03A  FFD9         	movff	rightTurnButton@b10FunctionActive,fsr2l
  1763  00102C  C03B  FFDA         	movff	rightTurnButton@b10FunctionActive+1,fsr2h
  1764  001030  CFDE F03E          	movff	postinc2,??_rightTurnButton
  1765  001034  CFDD F03F          	movff	postdec2,??_rightTurnButton+1
  1766                           
  1767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1768                           ; Switch size 1, requested type "simple"
  1769                           ; Number of cases is 1, Range of values is 0 to 0
  1770                           ; switch strategies available:
  1771                           ; Name         Instructions Cycles
  1772                           ; simple_byte            4     3 (average)
  1773                           ;	Chosen strategy is simple_byte
  1774  001038  503F               	movf	(??_rightTurnButton+1)^0,w,c
  1775  00103A  0A00               	xorlw	0	; case 0
  1776  00103C  B4D8               	btfsc	status,2,c
  1777  00103E  EF23  F008         	goto	l5073
  1778  001042  EF2E  F008         	goto	l4561
  1779  001046                     l5073:
  1780                           
  1781                           ; Switch size 1, requested type "simple"
  1782                           ; Number of cases is 2, Range of values is 0 to 1
  1783                           ; switch strategies available:
  1784                           ; Name         Instructions Cycles
  1785                           ; simple_byte            7     4 (average)
  1786                           ;	Chosen strategy is simple_byte
  1787  001046  503E               	movf	??_rightTurnButton^0,w,c
  1788  001048  0A00               	xorlw	0	; case 0
  1789  00104A  B4D8               	btfsc	status,2,c
  1790  00104C  EF00  F008         	goto	l4553
  1791  001050  0A01               	xorlw	1	; case 1
  1792  001052  B4D8               	btfsc	status,2,c
  1793  001054  EF0A  F008         	goto	l4555
  1794  001058  EF2E  F008         	goto	l4561
  1795  00105C                     l4561:
  1796                           
  1797                           ;button_functionality.c: 51:             *b10Latch = 1;
  1798  00105C  C03C  FFD9         	movff	rightTurnButton@b10Latch,fsr2l
  1799  001060  C03D  FFDA         	movff	rightTurnButton@b10Latch+1,fsr2h
  1800  001064  0E01               	movlw	1
  1801  001066  6EDE               	movwf	postinc2,c
  1802  001068  0E00               	movlw	0
  1803  00106A  6EDD               	movwf	postdec2,c
  1804                           
  1805                           ;button_functionality.c: 52:             break;
  1806  00106C  EF6B  F008         	goto	l767
  1807  001070                     l4565:
  1808  001070  C03C  FFD9         	movff	rightTurnButton@b10Latch,fsr2l
  1809  001074  C03D  FFDA         	movff	rightTurnButton@b10Latch+1,fsr2h
  1810  001078  CFDE F03E          	movff	postinc2,??_rightTurnButton
  1811  00107C  CFDD F03F          	movff	postdec2,??_rightTurnButton+1
  1812                           
  1813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 1, Range of values is 0 to 0
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            4     3 (average)
  1819                           ;	Chosen strategy is simple_byte
  1820  001080  503F               	movf	(??_rightTurnButton+1)^0,w,c
  1821  001082  0A00               	xorlw	0	; case 0
  1822  001084  B4D8               	btfsc	status,2,c
  1823  001086  EF47  F008         	goto	l5075
  1824  00108A  EF6B  F008         	goto	l767
  1825  00108E                     l5075:
  1826                           
  1827                           ; Switch size 1, requested type "simple"
  1828                           ; Number of cases is 1, Range of values is 0 to 0
  1829                           ; switch strategies available:
  1830                           ; Name         Instructions Cycles
  1831                           ; simple_byte            4     3 (average)
  1832                           ;	Chosen strategy is simple_byte
  1833  00108E  503E               	movf	??_rightTurnButton^0,w,c
  1834  001090  0A00               	xorlw	0	; case 0
  1835  001092  B4D8               	btfsc	status,2,c
  1836  001094  EF14  F008         	goto	l4559
  1837  001098  EF6B  F008         	goto	l767
  1838  00109C                     l4569:
  1839  00109C  B282               	btfsc	130,1,c	;volatile
  1840  00109E  EF53  F008         	goto	u1331
  1841  0010A2  EF56  F008         	goto	u1330
  1842  0010A6                     u1331:
  1843  0010A6  0E01               	movlw	1
  1844  0010A8  EF57  F008         	goto	u1340
  1845  0010AC                     u1330:
  1846  0010AC  0E00               	movlw	0
  1847  0010AE                     u1340:
  1848  0010AE  6E3E               	movwf	??_rightTurnButton^0,c
  1849  0010B0  6A3F               	clrf	(??_rightTurnButton+1)^0,c
  1850                           
  1851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1852                           ; Switch size 1, requested type "simple"
  1853                           ; Number of cases is 1, Range of values is 0 to 0
  1854                           ; switch strategies available:
  1855                           ; Name         Instructions Cycles
  1856                           ; simple_byte            4     3 (average)
  1857                           ;	Chosen strategy is simple_byte
  1858  0010B2  503F               	movf	(??_rightTurnButton+1)^0,w,c
  1859  0010B4  0A00               	xorlw	0	; case 0
  1860  0010B6  B4D8               	btfsc	status,2,c
  1861  0010B8  EF60  F008         	goto	l5077
  1862  0010BC  EF6B  F008         	goto	l767
  1863  0010C0                     l5077:
  1864                           
  1865                           ; Switch size 1, requested type "simple"
  1866                           ; Number of cases is 2, Range of values is 0 to 1
  1867                           ; switch strategies available:
  1868                           ; Name         Instructions Cycles
  1869                           ; simple_byte            7     4 (average)
  1870                           ;	Chosen strategy is simple_byte
  1871  0010C0  503E               	movf	??_rightTurnButton^0,w,c
  1872  0010C2  0A00               	xorlw	0	; case 0
  1873  0010C4  B4D8               	btfsc	status,2,c
  1874  0010C6  EFF6  F007         	goto	l4551
  1875  0010CA  0A01               	xorlw	1	; case 1
  1876  0010CC  B4D8               	btfsc	status,2,c
  1877  0010CE  EF38  F008         	goto	l4565
  1878  0010D2  EF6B  F008         	goto	l767
  1879  0010D6                     l767:
  1880  0010D6  0012               	return		;funcret
  1881  0010D8                     __end_of_rightTurnButton:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _leftTurnButton *****************
  1885 ;; Defined at:
  1886 ;;		line 9 in file "button_functionality.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  b1FunctionAc    2    2[COMRAM] PTR int 
  1889 ;;		 -> b1FuncActive(2), 
  1890 ;;  b1Latch         2    4[COMRAM] PTR int 
  1891 ;;		 -> buttonRuntime@var(2), latchb1(2), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1907 ;;Total ram usage:        6 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 3
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;;		_buttonRuntime
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text2
  1919  0010D8                     __ptext2:
  1920                           	callstack 0
  1921  0010D8                     _leftTurnButton:
  1922                           	callstack 27
  1923  0010D8                     
  1924                           ;button_functionality.c: 10:     switch (PORTAbits.RA0) {
  1925  0010D8  EFC6  F008         	goto	l4535
  1926  0010DC                     l4517:
  1927                           
  1928                           ;button_functionality.c: 12:         *b1Latch = 0;
  1929  0010DC  C03C  FFD9         	movff	leftTurnButton@b1Latch,fsr2l
  1930  0010E0  C03D  FFDA         	movff	leftTurnButton@b1Latch+1,fsr2h
  1931  0010E4  0E00               	movlw	0
  1932  0010E6  6EDE               	movwf	postinc2,c
  1933  0010E8  0E00               	movlw	0
  1934  0010EA  6EDD               	movwf	postdec2,c
  1935                           
  1936                           ;button_functionality.c: 13:         break;
  1937  0010EC  EFE3  F008         	goto	l753
  1938  0010F0                     l4519:
  1939                           
  1940                           ;button_functionality.c: 20:                 *b1FunctionActive = 1;
  1941  0010F0  C03A  FFD9         	movff	leftTurnButton@b1FunctionActive,fsr2l
  1942  0010F4  C03B  FFDA         	movff	leftTurnButton@b1FunctionActive+1,fsr2h
  1943  0010F8  0E01               	movlw	1
  1944  0010FA  6EDE               	movwf	postinc2,c
  1945  0010FC  0E00               	movlw	0
  1946  0010FE  6EDD               	movwf	postdec2,c
  1947                           
  1948                           ;button_functionality.c: 21:                 break;
  1949  001100  EFA6  F008         	goto	l4527
  1950  001104                     l4521:
  1951                           
  1952                           ;button_functionality.c: 24:                 *b1FunctionActive = 0;
  1953  001104  C03A  FFD9         	movff	leftTurnButton@b1FunctionActive,fsr2l
  1954  001108  C03B  FFDA         	movff	leftTurnButton@b1FunctionActive+1,fsr2h
  1955  00110C  0E00               	movlw	0
  1956  00110E  6EDE               	movwf	postinc2,c
  1957  001110  0E00               	movlw	0
  1958  001112  6EDD               	movwf	postdec2,c
  1959                           
  1960                           ;button_functionality.c: 25:                 break;
  1961  001114  EFA6  F008         	goto	l4527
  1962  001118                     l4525:
  1963  001118  C03A  FFD9         	movff	leftTurnButton@b1FunctionActive,fsr2l
  1964  00111C  C03B  FFDA         	movff	leftTurnButton@b1FunctionActive+1,fsr2h
  1965  001120  CFDE F03E          	movff	postinc2,??_leftTurnButton
  1966  001124  CFDD F03F          	movff	postdec2,??_leftTurnButton+1
  1967                           
  1968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1969                           ; Switch size 1, requested type "simple"
  1970                           ; Number of cases is 1, Range of values is 0 to 0
  1971                           ; switch strategies available:
  1972                           ; Name         Instructions Cycles
  1973                           ; simple_byte            4     3 (average)
  1974                           ;	Chosen strategy is simple_byte
  1975  001128  503F               	movf	(??_leftTurnButton+1)^0,w,c
  1976  00112A  0A00               	xorlw	0	; case 0
  1977  00112C  B4D8               	btfsc	status,2,c
  1978  00112E  EF9B  F008         	goto	l5079
  1979  001132  EFA6  F008         	goto	l4527
  1980  001136                     l5079:
  1981                           
  1982                           ; Switch size 1, requested type "simple"
  1983                           ; Number of cases is 2, Range of values is 0 to 1
  1984                           ; switch strategies available:
  1985                           ; Name         Instructions Cycles
  1986                           ; simple_byte            7     4 (average)
  1987                           ;	Chosen strategy is simple_byte
  1988  001136  503E               	movf	??_leftTurnButton^0,w,c
  1989  001138  0A00               	xorlw	0	; case 0
  1990  00113A  B4D8               	btfsc	status,2,c
  1991  00113C  EF78  F008         	goto	l4519
  1992  001140  0A01               	xorlw	1	; case 1
  1993  001142  B4D8               	btfsc	status,2,c
  1994  001144  EF82  F008         	goto	l4521
  1995  001148  EFA6  F008         	goto	l4527
  1996  00114C                     l4527:
  1997                           
  1998                           ;button_functionality.c: 27:             *b1Latch = 1;
  1999  00114C  C03C  FFD9         	movff	leftTurnButton@b1Latch,fsr2l
  2000  001150  C03D  FFDA         	movff	leftTurnButton@b1Latch+1,fsr2h
  2001  001154  0E01               	movlw	1
  2002  001156  6EDE               	movwf	postinc2,c
  2003  001158  0E00               	movlw	0
  2004  00115A  6EDD               	movwf	postdec2,c
  2005                           
  2006                           ;button_functionality.c: 28:             break;
  2007  00115C  EFE3  F008         	goto	l753
  2008  001160                     l4531:
  2009  001160  C03C  FFD9         	movff	leftTurnButton@b1Latch,fsr2l
  2010  001164  C03D  FFDA         	movff	leftTurnButton@b1Latch+1,fsr2h
  2011  001168  CFDE F03E          	movff	postinc2,??_leftTurnButton
  2012  00116C  CFDD F03F          	movff	postdec2,??_leftTurnButton+1
  2013                           
  2014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2015                           ; Switch size 1, requested type "simple"
  2016                           ; Number of cases is 1, Range of values is 0 to 0
  2017                           ; switch strategies available:
  2018                           ; Name         Instructions Cycles
  2019                           ; simple_byte            4     3 (average)
  2020                           ;	Chosen strategy is simple_byte
  2021  001170  503F               	movf	(??_leftTurnButton+1)^0,w,c
  2022  001172  0A00               	xorlw	0	; case 0
  2023  001174  B4D8               	btfsc	status,2,c
  2024  001176  EFBF  F008         	goto	l5081
  2025  00117A  EFE3  F008         	goto	l753
  2026  00117E                     l5081:
  2027                           
  2028                           ; Switch size 1, requested type "simple"
  2029                           ; Number of cases is 1, Range of values is 0 to 0
  2030                           ; switch strategies available:
  2031                           ; Name         Instructions Cycles
  2032                           ; simple_byte            4     3 (average)
  2033                           ;	Chosen strategy is simple_byte
  2034  00117E  503E               	movf	??_leftTurnButton^0,w,c
  2035  001180  0A00               	xorlw	0	; case 0
  2036  001182  B4D8               	btfsc	status,2,c
  2037  001184  EF8C  F008         	goto	l4525
  2038  001188  EFE3  F008         	goto	l753
  2039  00118C                     l4535:
  2040  00118C  B080               	btfsc	128,0,c	;volatile
  2041  00118E  EFCB  F008         	goto	u1311
  2042  001192  EFCE  F008         	goto	u1310
  2043  001196                     u1311:
  2044  001196  0E01               	movlw	1
  2045  001198  EFCF  F008         	goto	u1320
  2046  00119C                     u1310:
  2047  00119C  0E00               	movlw	0
  2048  00119E                     u1320:
  2049  00119E  6E3E               	movwf	??_leftTurnButton^0,c
  2050  0011A0  6A3F               	clrf	(??_leftTurnButton+1)^0,c
  2051                           
  2052                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2053                           ; Switch size 1, requested type "simple"
  2054                           ; Number of cases is 1, Range of values is 0 to 0
  2055                           ; switch strategies available:
  2056                           ; Name         Instructions Cycles
  2057                           ; simple_byte            4     3 (average)
  2058                           ;	Chosen strategy is simple_byte
  2059  0011A2  503F               	movf	(??_leftTurnButton+1)^0,w,c
  2060  0011A4  0A00               	xorlw	0	; case 0
  2061  0011A6  B4D8               	btfsc	status,2,c
  2062  0011A8  EFD8  F008         	goto	l5083
  2063  0011AC  EFE3  F008         	goto	l753
  2064  0011B0                     l5083:
  2065                           
  2066                           ; Switch size 1, requested type "simple"
  2067                           ; Number of cases is 2, Range of values is 0 to 1
  2068                           ; switch strategies available:
  2069                           ; Name         Instructions Cycles
  2070                           ; simple_byte            7     4 (average)
  2071                           ;	Chosen strategy is simple_byte
  2072  0011B0  503E               	movf	??_leftTurnButton^0,w,c
  2073  0011B2  0A00               	xorlw	0	; case 0
  2074  0011B4  B4D8               	btfsc	status,2,c
  2075  0011B6  EF6E  F008         	goto	l4517
  2076  0011BA  0A01               	xorlw	1	; case 1
  2077  0011BC  B4D8               	btfsc	status,2,c
  2078  0011BE  EFB0  F008         	goto	l4531
  2079  0011C2  EFE3  F008         	goto	l753
  2080  0011C6                     l753:
  2081  0011C6  0012               	return		;funcret
  2082  0011C8                     __end_of_leftTurnButton:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _init *****************
  2086 ;; Defined at:
  2087 ;;		line 168 in file "uart_interface.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2105 ;;Total ram usage:        0 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 5
  2108 ;; This function calls:
  2109 ;;		_auxBattConn
  2110 ;;		_batterySOC
  2111 ;;		_batterySOCGraphic
  2112 ;;		_batteryTemp
  2113 ;;		_hazardSignal
  2114 ;;		_leftTurnIndicator
  2115 ;;		_motorControllerTemp
  2116 ;;		_motorSpeed
  2117 ;;		_rightTurnIndicator
  2118 ;;		_warningLED
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text3
  2125  0018A8                     __ptext3:
  2126                           	callstack 0
  2127  0018A8                     _init:
  2128                           	callstack 25
  2129  0018A8                     
  2130                           ;uart_interface.c: 169:     leftTurnIndicator(0);
  2131  0018A8  0E00               	movlw	0
  2132  0018AA  6E3C               	movwf	(leftTurnIndicator@value+1)^0,c
  2133  0018AC  0E00               	movlw	0
  2134  0018AE  6E3B               	movwf	leftTurnIndicator@value^0,c
  2135  0018B0  EC8C  F00A         	call	_leftTurnIndicator	;wreg free
  2136                           
  2137                           ;uart_interface.c: 170:     rightTurnIndicator(0);
  2138  0018B4  0E00               	movlw	0
  2139  0018B6  6E3C               	movwf	(rightTurnIndicator@value+1)^0,c
  2140  0018B8  0E00               	movlw	0
  2141  0018BA  6E3B               	movwf	rightTurnIndicator@value^0,c
  2142  0018BC  ECA8  F009         	call	_rightTurnIndicator	;wreg free
  2143                           
  2144                           ;uart_interface.c: 171:     hazardSignal(0);
  2145  0018C0  0E00               	movlw	0
  2146  0018C2  6E3C               	movwf	(hazardSignal@value+1)^0,c
  2147  0018C4  0E00               	movlw	0
  2148  0018C6  6E3B               	movwf	hazardSignal@value^0,c
  2149  0018C8  ECD8  F00A         	call	_hazardSignal	;wreg free
  2150                           
  2151                           ;uart_interface.c: 172:     batterySOC(0);
  2152  0018CC  0E00               	movlw	0
  2153  0018CE  6E3C               	movwf	(batterySOC@value+1)^0,c
  2154  0018D0  0E00               	movlw	0
  2155  0018D2  6E3B               	movwf	batterySOC@value^0,c
  2156  0018D4  ECBC  F00B         	call	_batterySOC	;wreg free
  2157                           
  2158                           ;uart_interface.c: 173:     batterySOCGraphic(0);
  2159  0018D8  0E00               	movlw	0
  2160  0018DA  6E3C               	movwf	(batterySOCGraphic@value+1)^0,c
  2161  0018DC  0E00               	movlw	0
  2162  0018DE  6E3B               	movwf	batterySOCGraphic@value^0,c
  2163  0018E0  EC70  F00B         	call	_batterySOCGraphic	;wreg free
  2164                           
  2165                           ;uart_interface.c: 174:     batteryTemp(0);
  2166  0018E4  0E00               	movlw	0
  2167  0018E6  6E3C               	movwf	(batteryTemp@value+1)^0,c
  2168  0018E8  0E00               	movlw	0
  2169  0018EA  6E3B               	movwf	batteryTemp@value^0,c
  2170  0018EC  EC24  F00B         	call	_batteryTemp	;wreg free
  2171                           
  2172                           ;uart_interface.c: 175:     warningLED(0);
  2173  0018F0  0E00               	movlw	0
  2174  0018F2  6E3C               	movwf	(warningLED@value+1)^0,c
  2175  0018F4  0E00               	movlw	0
  2176  0018F6  6E3B               	movwf	warningLED@value^0,c
  2177  0018F8  EC5C  F009         	call	_warningLED	;wreg free
  2178                           
  2179                           ;uart_interface.c: 176:     auxBattConn(0);
  2180  0018FC  0E00               	movlw	0
  2181  0018FE  6E3C               	movwf	(auxBattConn@value+1)^0,c
  2182  001900  0E00               	movlw	0
  2183  001902  6E3B               	movwf	auxBattConn@value^0,c
  2184  001904  EC08  F00C         	call	_auxBattConn	;wreg free
  2185                           
  2186                           ;uart_interface.c: 177:     motorSpeed(0);
  2187  001908  0E00               	movlw	0
  2188  00190A  6E3C               	movwf	(motorSpeed@value+1)^0,c
  2189  00190C  0E00               	movlw	0
  2190  00190E  6E3B               	movwf	motorSpeed@value^0,c
  2191  001910  ECF4  F009         	call	_motorSpeed	;wreg free
  2192                           
  2193                           ;uart_interface.c: 178:     motorControllerTemp(0);
  2194  001914  0E00               	movlw	0
  2195  001916  6E3C               	movwf	(motorControllerTemp@value+1)^0,c
  2196  001918  0E00               	movlw	0
  2197  00191A  6E3B               	movwf	motorControllerTemp@value^0,c
  2198  00191C  EC40  F00A         	call	_motorControllerTemp	;wreg free
  2199  001920  0012               	return		;funcret
  2200  001922                     __end_of_init:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _warningLED *****************
  2204 ;; Defined at:
  2205 ;;		line 36 in file "uart_interface.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  value           2    3[COMRAM] int 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  v4              2   12[COMRAM] int 
  2210 ;;  v3              2   10[COMRAM] int 
  2211 ;;  v2              2    8[COMRAM] int 
  2212 ;;  v1              2    0        int 
  2213 ;;  checksum        2    6[COMRAM] int 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2224 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2226 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2227 ;;Total ram usage:       11 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 4
  2230 ;; This function calls:
  2231 ;;		_EUSART1_Write
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;;		_init
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text4
  2239  0012B8                     __ptext4:
  2240                           	callstack 0
  2241  0012B8                     _warningLED:
  2242                           	callstack 26
  2243  0012B8  0E00               	movlw	0
  2244  0012BA  6E41               	movwf	(warningLED@v2+1)^0,c
  2245  0012BC  0E2E               	movlw	46
  2246  0012BE  6E40               	movwf	warningLED@v2^0,c
  2247  0012C0  0E00               	movlw	0
  2248  0012C2  6E43               	movwf	(warningLED@v3+1)^0,c
  2249  0012C4  0E02               	movlw	2
  2250  0012C6  6E42               	movwf	warningLED@v3^0,c
  2251  0012C8  0E00               	movlw	0
  2252  0012CA  6E45               	movwf	(warningLED@v4+1)^0,c
  2253  0012CC  0E00               	movlw	0
  2254  0012CE  6E44               	movwf	warningLED@v4^0,c
  2255  0012D0                     
  2256                           ;uart_interface.c: 38:     int checksum = v1^v2^v3^v4^value;
  2257  0012D0  0E2D               	movlw	45
  2258  0012D2  183B               	xorwf	warningLED@value^0,w,c
  2259  0012D4  6E3E               	movwf	warningLED@checksum^0,c
  2260  0012D6  503C               	movf	(warningLED@value+1)^0,w,c
  2261  0012D8  6E3F               	movwf	(warningLED@checksum+1)^0,c
  2262  0012DA                     
  2263                           ;uart_interface.c: 40:     EUSART1_Write(v1);
  2264  0012DA  0E01               	movlw	1
  2265  0012DC  EC6C  F00D         	call	_EUSART1_Write
  2266  0012E0                     
  2267                           ;uart_interface.c: 41:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2268  0012E0  0E41               	movlw	65
  2269  0012E2  6E3D               	movwf	??_warningLED^0,c
  2270  0012E4  0EEE               	movlw	238
  2271  0012E6                     u1907:
  2272  0012E6  2EE8               	decfsz	wreg,f,c
  2273  0012E8  D7FE               	bra	u1907
  2274  0012EA  2E3D               	decfsz	??_warningLED^0,f,c
  2275  0012EC  D7FC               	bra	u1907
  2276  0012EE  D000               	nop2	
  2277  0012F0                     
  2278                           ;uart_interface.c: 42:     EUSART1_Write(v2);
  2279  0012F0  0E2E               	movlw	46
  2280  0012F2  EC6C  F00D         	call	_EUSART1_Write
  2281  0012F6                     
  2282                           ;uart_interface.c: 43:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2283  0012F6  0E41               	movlw	65
  2284  0012F8  6E3D               	movwf	??_warningLED^0,c
  2285  0012FA  0EEE               	movlw	238
  2286  0012FC                     u1917:
  2287  0012FC  2EE8               	decfsz	wreg,f,c
  2288  0012FE  D7FE               	bra	u1917
  2289  001300  2E3D               	decfsz	??_warningLED^0,f,c
  2290  001302  D7FC               	bra	u1917
  2291  001304  D000               	nop2	
  2292  001306                     
  2293                           ;uart_interface.c: 44:     EUSART1_Write(v3);
  2294  001306  0E02               	movlw	2
  2295  001308  EC6C  F00D         	call	_EUSART1_Write
  2296  00130C                     
  2297                           ;uart_interface.c: 45:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2298  00130C  0E41               	movlw	65
  2299  00130E  6E3D               	movwf	??_warningLED^0,c
  2300  001310  0EEE               	movlw	238
  2301  001312                     u1927:
  2302  001312  2EE8               	decfsz	wreg,f,c
  2303  001314  D7FE               	bra	u1927
  2304  001316  2E3D               	decfsz	??_warningLED^0,f,c
  2305  001318  D7FC               	bra	u1927
  2306  00131A  D000               	nop2	
  2307  00131C                     
  2308                           ;uart_interface.c: 46:     EUSART1_Write(v4);
  2309  00131C  0E00               	movlw	0
  2310  00131E  EC6C  F00D         	call	_EUSART1_Write
  2311  001322                     
  2312                           ;uart_interface.c: 47:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2313  001322  0E41               	movlw	65
  2314  001324  6E3D               	movwf	??_warningLED^0,c
  2315  001326  0EEE               	movlw	238
  2316  001328                     u1937:
  2317  001328  2EE8               	decfsz	wreg,f,c
  2318  00132A  D7FE               	bra	u1937
  2319  00132C  2E3D               	decfsz	??_warningLED^0,f,c
  2320  00132E  D7FC               	bra	u1937
  2321  001330  D000               	nop2	
  2322  001332                     
  2323                           ;uart_interface.c: 48:     EUSART1_Write(value);
  2324  001332  503B               	movf	warningLED@value^0,w,c
  2325  001334  EC6C  F00D         	call	_EUSART1_Write
  2326  001338                     
  2327                           ;uart_interface.c: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2328  001338  0E41               	movlw	65
  2329  00133A  6E3D               	movwf	??_warningLED^0,c
  2330  00133C  0EEE               	movlw	238
  2331  00133E                     u1947:
  2332  00133E  2EE8               	decfsz	wreg,f,c
  2333  001340  D7FE               	bra	u1947
  2334  001342  2E3D               	decfsz	??_warningLED^0,f,c
  2335  001344  D7FC               	bra	u1947
  2336  001346  D000               	nop2	
  2337  001348                     
  2338                           ;uart_interface.c: 50:     EUSART1_Write(checksum);
  2339  001348  503E               	movf	warningLED@checksum^0,w,c
  2340  00134A  EC6C  F00D         	call	_EUSART1_Write
  2341  00134E  0012               	return		;funcret
  2342  001350                     __end_of_warningLED:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _rightTurnIndicator *****************
  2346 ;; Defined at:
  2347 ;;		line 20 in file "uart_interface.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  value           2    3[COMRAM] int 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  v4              2   12[COMRAM] int 
  2352 ;;  v3              2   10[COMRAM] int 
  2353 ;;  v2              2    8[COMRAM] int 
  2354 ;;  v1              2    0        int 
  2355 ;;  checksum        2    6[COMRAM] int 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;Total ram usage:       11 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 4
  2372 ;; This function calls:
  2373 ;;		_EUSART1_Write
  2374 ;; This function is called by:
  2375 ;;		_main
  2376 ;;		_init
  2377 ;;		_rightTurnSignal
  2378 ;;		_hazardTurnSignal
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text5
  2383  001350                     __ptext5:
  2384                           	callstack 0
  2385  001350                     _rightTurnIndicator:
  2386                           	callstack 26
  2387  001350  0E00               	movlw	0
  2388  001352  6E41               	movwf	(rightTurnIndicator@v2+1)^0,c
  2389  001354  0E13               	movlw	19
  2390  001356  6E40               	movwf	rightTurnIndicator@v2^0,c
  2391  001358  0E00               	movlw	0
  2392  00135A  6E43               	movwf	(rightTurnIndicator@v3+1)^0,c
  2393  00135C  0E01               	movlw	1
  2394  00135E  6E42               	movwf	rightTurnIndicator@v3^0,c
  2395  001360  0E00               	movlw	0
  2396  001362  6E45               	movwf	(rightTurnIndicator@v4+1)^0,c
  2397  001364  0E00               	movlw	0
  2398  001366  6E44               	movwf	rightTurnIndicator@v4^0,c
  2399  001368                     
  2400                           ;uart_interface.c: 22:     int checksum = v1^v2^v3^v4^value;
  2401  001368  0E13               	movlw	19
  2402  00136A  183B               	xorwf	rightTurnIndicator@value^0,w,c
  2403  00136C  6E3E               	movwf	rightTurnIndicator@checksum^0,c
  2404  00136E  503C               	movf	(rightTurnIndicator@value+1)^0,w,c
  2405  001370  6E3F               	movwf	(rightTurnIndicator@checksum+1)^0,c
  2406  001372                     
  2407                           ;uart_interface.c: 24:     EUSART1_Write(v1);
  2408  001372  0E01               	movlw	1
  2409  001374  EC6C  F00D         	call	_EUSART1_Write
  2410  001378                     
  2411                           ;uart_interface.c: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2412  001378  0E41               	movlw	65
  2413  00137A  6E3D               	movwf	??_rightTurnIndicator^0,c
  2414  00137C  0EEE               	movlw	238
  2415  00137E                     u1957:
  2416  00137E  2EE8               	decfsz	wreg,f,c
  2417  001380  D7FE               	bra	u1957
  2418  001382  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2419  001384  D7FC               	bra	u1957
  2420  001386  D000               	nop2	
  2421  001388                     
  2422                           ;uart_interface.c: 26:     EUSART1_Write(v2);
  2423  001388  0E13               	movlw	19
  2424  00138A  EC6C  F00D         	call	_EUSART1_Write
  2425  00138E                     
  2426                           ;uart_interface.c: 27:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2427  00138E  0E41               	movlw	65
  2428  001390  6E3D               	movwf	??_rightTurnIndicator^0,c
  2429  001392  0EEE               	movlw	238
  2430  001394                     u1967:
  2431  001394  2EE8               	decfsz	wreg,f,c
  2432  001396  D7FE               	bra	u1967
  2433  001398  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2434  00139A  D7FC               	bra	u1967
  2435  00139C  D000               	nop2	
  2436  00139E                     
  2437                           ;uart_interface.c: 28:     EUSART1_Write(v3);
  2438  00139E  0E01               	movlw	1
  2439  0013A0  EC6C  F00D         	call	_EUSART1_Write
  2440  0013A4                     
  2441                           ;uart_interface.c: 29:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2442  0013A4  0E41               	movlw	65
  2443  0013A6  6E3D               	movwf	??_rightTurnIndicator^0,c
  2444  0013A8  0EEE               	movlw	238
  2445  0013AA                     u1977:
  2446  0013AA  2EE8               	decfsz	wreg,f,c
  2447  0013AC  D7FE               	bra	u1977
  2448  0013AE  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2449  0013B0  D7FC               	bra	u1977
  2450  0013B2  D000               	nop2	
  2451  0013B4                     
  2452                           ;uart_interface.c: 30:     EUSART1_Write(v4);
  2453  0013B4  0E00               	movlw	0
  2454  0013B6  EC6C  F00D         	call	_EUSART1_Write
  2455  0013BA                     
  2456                           ;uart_interface.c: 31:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2457  0013BA  0E41               	movlw	65
  2458  0013BC  6E3D               	movwf	??_rightTurnIndicator^0,c
  2459  0013BE  0EEE               	movlw	238
  2460  0013C0                     u1987:
  2461  0013C0  2EE8               	decfsz	wreg,f,c
  2462  0013C2  D7FE               	bra	u1987
  2463  0013C4  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2464  0013C6  D7FC               	bra	u1987
  2465  0013C8  D000               	nop2	
  2466  0013CA                     
  2467                           ;uart_interface.c: 32:     EUSART1_Write(value);
  2468  0013CA  503B               	movf	rightTurnIndicator@value^0,w,c
  2469  0013CC  EC6C  F00D         	call	_EUSART1_Write
  2470  0013D0                     
  2471                           ;uart_interface.c: 33:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2472  0013D0  0E41               	movlw	65
  2473  0013D2  6E3D               	movwf	??_rightTurnIndicator^0,c
  2474  0013D4  0EEE               	movlw	238
  2475  0013D6                     u1997:
  2476  0013D6  2EE8               	decfsz	wreg,f,c
  2477  0013D8  D7FE               	bra	u1997
  2478  0013DA  2E3D               	decfsz	??_rightTurnIndicator^0,f,c
  2479  0013DC  D7FC               	bra	u1997
  2480  0013DE  D000               	nop2	
  2481  0013E0                     
  2482                           ;uart_interface.c: 34:     EUSART1_Write(checksum);
  2483  0013E0  503E               	movf	rightTurnIndicator@checksum^0,w,c
  2484  0013E2  EC6C  F00D         	call	_EUSART1_Write
  2485  0013E6  0012               	return		;funcret
  2486  0013E8                     __end_of_rightTurnIndicator:
  2487                           	callstack 0
  2488                           
  2489 ;; *************** function _motorSpeed *****************
  2490 ;; Defined at:
  2491 ;;		line 68 in file "uart_interface.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  value           2    3[COMRAM] int 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  v4              2   12[COMRAM] int 
  2496 ;;  v3              2   10[COMRAM] int 
  2497 ;;  v2              2    8[COMRAM] int 
  2498 ;;  v1              2    0        int 
  2499 ;;  checksum        2    6[COMRAM] int 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2510 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2512 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2513 ;;Total ram usage:       11 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 4
  2516 ;; This function calls:
  2517 ;;		_EUSART1_Write
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;;		_init
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text6
  2525  0013E8                     __ptext6:
  2526                           	callstack 0
  2527  0013E8                     _motorSpeed:
  2528                           	callstack 26
  2529  0013E8  0E00               	movlw	0
  2530  0013EA  6E41               	movwf	(motorSpeed@v2+1)^0,c
  2531  0013EC  0E0F               	movlw	15
  2532  0013EE  6E40               	movwf	motorSpeed@v2^0,c
  2533  0013F0  0E00               	movlw	0
  2534  0013F2  6E43               	movwf	(motorSpeed@v3+1)^0,c
  2535  0013F4  0E00               	movlw	0
  2536  0013F6  6E42               	movwf	motorSpeed@v3^0,c
  2537  0013F8  0E00               	movlw	0
  2538  0013FA  6E45               	movwf	(motorSpeed@v4+1)^0,c
  2539  0013FC  0E00               	movlw	0
  2540  0013FE  6E44               	movwf	motorSpeed@v4^0,c
  2541  001400                     
  2542                           ;uart_interface.c: 73:     int checksum = v1^v2^v3^v4^value;
  2543  001400  0E0E               	movlw	14
  2544  001402  183B               	xorwf	motorSpeed@value^0,w,c
  2545  001404  6E3E               	movwf	motorSpeed@checksum^0,c
  2546  001406  503C               	movf	(motorSpeed@value+1)^0,w,c
  2547  001408  6E3F               	movwf	(motorSpeed@checksum+1)^0,c
  2548  00140A                     
  2549                           ;uart_interface.c: 75:     EUSART1_Write(v1);
  2550  00140A  0E01               	movlw	1
  2551  00140C  EC6C  F00D         	call	_EUSART1_Write
  2552  001410                     
  2553                           ;uart_interface.c: 76:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2554  001410  0E41               	movlw	65
  2555  001412  6E3D               	movwf	??_motorSpeed^0,c
  2556  001414  0EEE               	movlw	238
  2557  001416                     u2007:
  2558  001416  2EE8               	decfsz	wreg,f,c
  2559  001418  D7FE               	bra	u2007
  2560  00141A  2E3D               	decfsz	??_motorSpeed^0,f,c
  2561  00141C  D7FC               	bra	u2007
  2562  00141E  D000               	nop2	
  2563  001420                     
  2564                           ;uart_interface.c: 77:     EUSART1_Write(v2);
  2565  001420  0E0F               	movlw	15
  2566  001422  EC6C  F00D         	call	_EUSART1_Write
  2567  001426                     
  2568                           ;uart_interface.c: 78:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2569  001426  0E41               	movlw	65
  2570  001428  6E3D               	movwf	??_motorSpeed^0,c
  2571  00142A  0EEE               	movlw	238
  2572  00142C                     u2017:
  2573  00142C  2EE8               	decfsz	wreg,f,c
  2574  00142E  D7FE               	bra	u2017
  2575  001430  2E3D               	decfsz	??_motorSpeed^0,f,c
  2576  001432  D7FC               	bra	u2017
  2577  001434  D000               	nop2	
  2578  001436                     
  2579                           ;uart_interface.c: 79:     EUSART1_Write(v3);
  2580  001436  0E00               	movlw	0
  2581  001438  EC6C  F00D         	call	_EUSART1_Write
  2582  00143C                     
  2583                           ;uart_interface.c: 80:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2584  00143C  0E41               	movlw	65
  2585  00143E  6E3D               	movwf	??_motorSpeed^0,c
  2586  001440  0EEE               	movlw	238
  2587  001442                     u2027:
  2588  001442  2EE8               	decfsz	wreg,f,c
  2589  001444  D7FE               	bra	u2027
  2590  001446  2E3D               	decfsz	??_motorSpeed^0,f,c
  2591  001448  D7FC               	bra	u2027
  2592  00144A  D000               	nop2	
  2593  00144C                     
  2594                           ;uart_interface.c: 81:     EUSART1_Write(v4);
  2595  00144C  0E00               	movlw	0
  2596  00144E  EC6C  F00D         	call	_EUSART1_Write
  2597  001452                     
  2598                           ;uart_interface.c: 82:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2599  001452  0E41               	movlw	65
  2600  001454  6E3D               	movwf	??_motorSpeed^0,c
  2601  001456  0EEE               	movlw	238
  2602  001458                     u2037:
  2603  001458  2EE8               	decfsz	wreg,f,c
  2604  00145A  D7FE               	bra	u2037
  2605  00145C  2E3D               	decfsz	??_motorSpeed^0,f,c
  2606  00145E  D7FC               	bra	u2037
  2607  001460  D000               	nop2	
  2608  001462                     
  2609                           ;uart_interface.c: 83:     EUSART1_Write(value);
  2610  001462  503B               	movf	motorSpeed@value^0,w,c
  2611  001464  EC6C  F00D         	call	_EUSART1_Write
  2612  001468                     
  2613                           ;uart_interface.c: 84:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2614  001468  0E41               	movlw	65
  2615  00146A  6E3D               	movwf	??_motorSpeed^0,c
  2616  00146C  0EEE               	movlw	238
  2617  00146E                     u2047:
  2618  00146E  2EE8               	decfsz	wreg,f,c
  2619  001470  D7FE               	bra	u2047
  2620  001472  2E3D               	decfsz	??_motorSpeed^0,f,c
  2621  001474  D7FC               	bra	u2047
  2622  001476  D000               	nop2	
  2623  001478                     
  2624                           ;uart_interface.c: 85:     EUSART1_Write(checksum);
  2625  001478  503E               	movf	motorSpeed@checksum^0,w,c
  2626  00147A  EC6C  F00D         	call	_EUSART1_Write
  2627  00147E  0012               	return		;funcret
  2628  001480                     __end_of_motorSpeed:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _motorControllerTemp *****************
  2632 ;; Defined at:
  2633 ;;		line 87 in file "uart_interface.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  value           2    3[COMRAM] int 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  v4              2   12[COMRAM] int 
  2638 ;;  v3              2   10[COMRAM] int 
  2639 ;;  v2              2    8[COMRAM] int 
  2640 ;;  v1              2    0        int 
  2641 ;;  checksum        2    6[COMRAM] int 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2652 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2654 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2655 ;;Total ram usage:       11 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 4
  2658 ;; This function calls:
  2659 ;;		_EUSART1_Write
  2660 ;; This function is called by:
  2661 ;;		_init
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text7
  2666  001480                     __ptext7:
  2667                           	callstack 0
  2668  001480                     _motorControllerTemp:
  2669                           	callstack 25
  2670  001480  0E00               	movlw	0
  2671  001482  6E41               	movwf	(motorControllerTemp@v2+1)^0,c
  2672  001484  0E0F               	movlw	15
  2673  001486  6E40               	movwf	motorControllerTemp@v2^0,c
  2674  001488  0E00               	movlw	0
  2675  00148A  6E43               	movwf	(motorControllerTemp@v3+1)^0,c
  2676  00148C  0E01               	movlw	1
  2677  00148E  6E42               	movwf	motorControllerTemp@v3^0,c
  2678  001490  0E00               	movlw	0
  2679  001492  6E45               	movwf	(motorControllerTemp@v4+1)^0,c
  2680  001494  0E00               	movlw	0
  2681  001496  6E44               	movwf	motorControllerTemp@v4^0,c
  2682  001498                     
  2683                           ;uart_interface.c: 89:     int checksum = v1^v2^v3^v4^value;
  2684  001498  0E0F               	movlw	15
  2685  00149A  183B               	xorwf	motorControllerTemp@value^0,w,c
  2686  00149C  6E3E               	movwf	motorControllerTemp@checksum^0,c
  2687  00149E  503C               	movf	(motorControllerTemp@value+1)^0,w,c
  2688  0014A0  6E3F               	movwf	(motorControllerTemp@checksum+1)^0,c
  2689  0014A2                     
  2690                           ;uart_interface.c: 91:     EUSART1_Write(v1);
  2691  0014A2  0E01               	movlw	1
  2692  0014A4  EC6C  F00D         	call	_EUSART1_Write
  2693  0014A8                     
  2694                           ;uart_interface.c: 92:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2695  0014A8  0E41               	movlw	65
  2696  0014AA  6E3D               	movwf	??_motorControllerTemp^0,c
  2697  0014AC  0EEE               	movlw	238
  2698  0014AE                     u2057:
  2699  0014AE  2EE8               	decfsz	wreg,f,c
  2700  0014B0  D7FE               	bra	u2057
  2701  0014B2  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2702  0014B4  D7FC               	bra	u2057
  2703  0014B6  D000               	nop2	
  2704  0014B8                     
  2705                           ;uart_interface.c: 93:     EUSART1_Write(v2);
  2706  0014B8  0E0F               	movlw	15
  2707  0014BA  EC6C  F00D         	call	_EUSART1_Write
  2708  0014BE                     
  2709                           ;uart_interface.c: 94:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2710  0014BE  0E41               	movlw	65
  2711  0014C0  6E3D               	movwf	??_motorControllerTemp^0,c
  2712  0014C2  0EEE               	movlw	238
  2713  0014C4                     u2067:
  2714  0014C4  2EE8               	decfsz	wreg,f,c
  2715  0014C6  D7FE               	bra	u2067
  2716  0014C8  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2717  0014CA  D7FC               	bra	u2067
  2718  0014CC  D000               	nop2	
  2719  0014CE                     
  2720                           ;uart_interface.c: 95:     EUSART1_Write(v3);
  2721  0014CE  0E01               	movlw	1
  2722  0014D0  EC6C  F00D         	call	_EUSART1_Write
  2723  0014D4                     
  2724                           ;uart_interface.c: 96:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2725  0014D4  0E41               	movlw	65
  2726  0014D6  6E3D               	movwf	??_motorControllerTemp^0,c
  2727  0014D8  0EEE               	movlw	238
  2728  0014DA                     u2077:
  2729  0014DA  2EE8               	decfsz	wreg,f,c
  2730  0014DC  D7FE               	bra	u2077
  2731  0014DE  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2732  0014E0  D7FC               	bra	u2077
  2733  0014E2  D000               	nop2	
  2734  0014E4                     
  2735                           ;uart_interface.c: 97:     EUSART1_Write(v4);
  2736  0014E4  0E00               	movlw	0
  2737  0014E6  EC6C  F00D         	call	_EUSART1_Write
  2738  0014EA                     
  2739                           ;uart_interface.c: 98:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2740  0014EA  0E41               	movlw	65
  2741  0014EC  6E3D               	movwf	??_motorControllerTemp^0,c
  2742  0014EE  0EEE               	movlw	238
  2743  0014F0                     u2087:
  2744  0014F0  2EE8               	decfsz	wreg,f,c
  2745  0014F2  D7FE               	bra	u2087
  2746  0014F4  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2747  0014F6  D7FC               	bra	u2087
  2748  0014F8  D000               	nop2	
  2749  0014FA                     
  2750                           ;uart_interface.c: 99:     EUSART1_Write(value);
  2751  0014FA  503B               	movf	motorControllerTemp@value^0,w,c
  2752  0014FC  EC6C  F00D         	call	_EUSART1_Write
  2753  001500                     
  2754                           ;uart_interface.c: 100:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2755  001500  0E41               	movlw	65
  2756  001502  6E3D               	movwf	??_motorControllerTemp^0,c
  2757  001504  0EEE               	movlw	238
  2758  001506                     u2097:
  2759  001506  2EE8               	decfsz	wreg,f,c
  2760  001508  D7FE               	bra	u2097
  2761  00150A  2E3D               	decfsz	??_motorControllerTemp^0,f,c
  2762  00150C  D7FC               	bra	u2097
  2763  00150E  D000               	nop2	
  2764  001510                     
  2765                           ;uart_interface.c: 101:     EUSART1_Write(checksum);
  2766  001510  503E               	movf	motorControllerTemp@checksum^0,w,c
  2767  001512  EC6C  F00D         	call	_EUSART1_Write
  2768  001516  0012               	return		;funcret
  2769  001518                     __end_of_motorControllerTemp:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _leftTurnIndicator *****************
  2773 ;; Defined at:
  2774 ;;		line 4 in file "uart_interface.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  value           2    3[COMRAM] int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  v4              2   12[COMRAM] int 
  2779 ;;  v3              2   10[COMRAM] int 
  2780 ;;  v2              2    8[COMRAM] int 
  2781 ;;  v1              2    0        int 
  2782 ;;  checksum        2    6[COMRAM] int 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2793 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2795 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2796 ;;Total ram usage:       11 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; Hardware stack levels required when called: 4
  2799 ;; This function calls:
  2800 ;;		_EUSART1_Write
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;;		_init
  2804 ;;		_leftTurnSignal
  2805 ;;		_hazardTurnSignal
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text8
  2810  001518                     __ptext8:
  2811                           	callstack 0
  2812  001518                     _leftTurnIndicator:
  2813                           	callstack 26
  2814  001518  0E00               	movlw	0
  2815  00151A  6E41               	movwf	(leftTurnIndicator@v2+1)^0,c
  2816  00151C  0E13               	movlw	19
  2817  00151E  6E40               	movwf	leftTurnIndicator@v2^0,c
  2818  001520  0E00               	movlw	0
  2819  001522  6E43               	movwf	(leftTurnIndicator@v3+1)^0,c
  2820  001524  0E00               	movlw	0
  2821  001526  6E42               	movwf	leftTurnIndicator@v3^0,c
  2822  001528  0E00               	movlw	0
  2823  00152A  6E45               	movwf	(leftTurnIndicator@v4+1)^0,c
  2824  00152C  0E00               	movlw	0
  2825  00152E  6E44               	movwf	leftTurnIndicator@v4^0,c
  2826  001530                     
  2827                           ;uart_interface.c: 6:     int checksum = v1^v2^v3^v4^value;
  2828  001530  0E12               	movlw	18
  2829  001532  183B               	xorwf	leftTurnIndicator@value^0,w,c
  2830  001534  6E3E               	movwf	leftTurnIndicator@checksum^0,c
  2831  001536  503C               	movf	(leftTurnIndicator@value+1)^0,w,c
  2832  001538  6E3F               	movwf	(leftTurnIndicator@checksum+1)^0,c
  2833  00153A                     
  2834                           ;uart_interface.c: 8:     EUSART1_Write(v1);
  2835  00153A  0E01               	movlw	1
  2836  00153C  EC6C  F00D         	call	_EUSART1_Write
  2837  001540                     
  2838                           ;uart_interface.c: 9:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2839  001540  0E41               	movlw	65
  2840  001542  6E3D               	movwf	??_leftTurnIndicator^0,c
  2841  001544  0EEE               	movlw	238
  2842  001546                     u2107:
  2843  001546  2EE8               	decfsz	wreg,f,c
  2844  001548  D7FE               	bra	u2107
  2845  00154A  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2846  00154C  D7FC               	bra	u2107
  2847  00154E  D000               	nop2	
  2848  001550                     
  2849                           ;uart_interface.c: 10:     EUSART1_Write(v2);
  2850  001550  0E13               	movlw	19
  2851  001552  EC6C  F00D         	call	_EUSART1_Write
  2852  001556                     
  2853                           ;uart_interface.c: 11:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2854  001556  0E41               	movlw	65
  2855  001558  6E3D               	movwf	??_leftTurnIndicator^0,c
  2856  00155A  0EEE               	movlw	238
  2857  00155C                     u2117:
  2858  00155C  2EE8               	decfsz	wreg,f,c
  2859  00155E  D7FE               	bra	u2117
  2860  001560  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2861  001562  D7FC               	bra	u2117
  2862  001564  D000               	nop2	
  2863  001566                     
  2864                           ;uart_interface.c: 12:     EUSART1_Write(v3);
  2865  001566  0E00               	movlw	0
  2866  001568  EC6C  F00D         	call	_EUSART1_Write
  2867  00156C                     
  2868                           ;uart_interface.c: 13:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2869  00156C  0E41               	movlw	65
  2870  00156E  6E3D               	movwf	??_leftTurnIndicator^0,c
  2871  001570  0EEE               	movlw	238
  2872  001572                     u2127:
  2873  001572  2EE8               	decfsz	wreg,f,c
  2874  001574  D7FE               	bra	u2127
  2875  001576  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2876  001578  D7FC               	bra	u2127
  2877  00157A  D000               	nop2	
  2878  00157C                     
  2879                           ;uart_interface.c: 14:     EUSART1_Write(v4);
  2880  00157C  0E00               	movlw	0
  2881  00157E  EC6C  F00D         	call	_EUSART1_Write
  2882  001582                     
  2883                           ;uart_interface.c: 15:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2884  001582  0E41               	movlw	65
  2885  001584  6E3D               	movwf	??_leftTurnIndicator^0,c
  2886  001586  0EEE               	movlw	238
  2887  001588                     u2137:
  2888  001588  2EE8               	decfsz	wreg,f,c
  2889  00158A  D7FE               	bra	u2137
  2890  00158C  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2891  00158E  D7FC               	bra	u2137
  2892  001590  D000               	nop2	
  2893  001592                     
  2894                           ;uart_interface.c: 16:     EUSART1_Write(value);
  2895  001592  503B               	movf	leftTurnIndicator@value^0,w,c
  2896  001594  EC6C  F00D         	call	_EUSART1_Write
  2897  001598                     
  2898                           ;uart_interface.c: 17:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2899  001598  0E41               	movlw	65
  2900  00159A  6E3D               	movwf	??_leftTurnIndicator^0,c
  2901  00159C  0EEE               	movlw	238
  2902  00159E                     u2147:
  2903  00159E  2EE8               	decfsz	wreg,f,c
  2904  0015A0  D7FE               	bra	u2147
  2905  0015A2  2E3D               	decfsz	??_leftTurnIndicator^0,f,c
  2906  0015A4  D7FC               	bra	u2147
  2907  0015A6  D000               	nop2	
  2908  0015A8                     
  2909                           ;uart_interface.c: 18:     EUSART1_Write(checksum);
  2910  0015A8  503E               	movf	leftTurnIndicator@checksum^0,w,c
  2911  0015AA  EC6C  F00D         	call	_EUSART1_Write
  2912  0015AE  0012               	return		;funcret
  2913  0015B0                     __end_of_leftTurnIndicator:
  2914                           	callstack 0
  2915                           
  2916 ;; *************** function _hazardSignal *****************
  2917 ;; Defined at:
  2918 ;;		line 119 in file "uart_interface.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  value           2    3[COMRAM] int 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  v4              2   12[COMRAM] int 
  2923 ;;  v3              2   10[COMRAM] int 
  2924 ;;  v2              2    8[COMRAM] int 
  2925 ;;  v1              2    0        int 
  2926 ;;  checksum        2    6[COMRAM] int 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2939 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2940 ;;Total ram usage:       11 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 4
  2943 ;; This function calls:
  2944 ;;		_EUSART1_Write
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;;		_init
  2948 ;;		_hazardTurnSignal
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text9
  2953  0015B0                     __ptext9:
  2954                           	callstack 0
  2955  0015B0                     _hazardSignal:
  2956                           	callstack 25
  2957  0015B0  0E00               	movlw	0
  2958  0015B2  6E41               	movwf	(hazardSignal@v2+1)^0,c
  2959  0015B4  0E13               	movlw	19
  2960  0015B6  6E40               	movwf	hazardSignal@v2^0,c
  2961  0015B8  0E00               	movlw	0
  2962  0015BA  6E43               	movwf	(hazardSignal@v3+1)^0,c
  2963  0015BC  0E02               	movlw	2
  2964  0015BE  6E42               	movwf	hazardSignal@v3^0,c
  2965  0015C0  0E00               	movlw	0
  2966  0015C2  6E45               	movwf	(hazardSignal@v4+1)^0,c
  2967  0015C4  0E00               	movlw	0
  2968  0015C6  6E44               	movwf	hazardSignal@v4^0,c
  2969  0015C8                     
  2970                           ;uart_interface.c: 121:     int checksum = v1^v2^v3^v4^value;
  2971  0015C8  0E10               	movlw	16
  2972  0015CA  183B               	xorwf	hazardSignal@value^0,w,c
  2973  0015CC  6E3E               	movwf	hazardSignal@checksum^0,c
  2974  0015CE  503C               	movf	(hazardSignal@value+1)^0,w,c
  2975  0015D0  6E3F               	movwf	(hazardSignal@checksum+1)^0,c
  2976  0015D2                     
  2977                           ;uart_interface.c: 123:     EUSART1_Write(v1);
  2978  0015D2  0E01               	movlw	1
  2979  0015D4  EC6C  F00D         	call	_EUSART1_Write
  2980  0015D8                     
  2981                           ;uart_interface.c: 124:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2982  0015D8  0E41               	movlw	65
  2983  0015DA  6E3D               	movwf	??_hazardSignal^0,c
  2984  0015DC  0EEE               	movlw	238
  2985  0015DE                     u2157:
  2986  0015DE  2EE8               	decfsz	wreg,f,c
  2987  0015E0  D7FE               	bra	u2157
  2988  0015E2  2E3D               	decfsz	??_hazardSignal^0,f,c
  2989  0015E4  D7FC               	bra	u2157
  2990  0015E6  D000               	nop2	
  2991  0015E8                     
  2992                           ;uart_interface.c: 125:     EUSART1_Write(v2);
  2993  0015E8  0E13               	movlw	19
  2994  0015EA  EC6C  F00D         	call	_EUSART1_Write
  2995  0015EE                     
  2996                           ;uart_interface.c: 126:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2997  0015EE  0E41               	movlw	65
  2998  0015F0  6E3D               	movwf	??_hazardSignal^0,c
  2999  0015F2  0EEE               	movlw	238
  3000  0015F4                     u2167:
  3001  0015F4  2EE8               	decfsz	wreg,f,c
  3002  0015F6  D7FE               	bra	u2167
  3003  0015F8  2E3D               	decfsz	??_hazardSignal^0,f,c
  3004  0015FA  D7FC               	bra	u2167
  3005  0015FC  D000               	nop2	
  3006  0015FE                     
  3007                           ;uart_interface.c: 127:     EUSART1_Write(v3);
  3008  0015FE  0E02               	movlw	2
  3009  001600  EC6C  F00D         	call	_EUSART1_Write
  3010  001604                     
  3011                           ;uart_interface.c: 128:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3012  001604  0E41               	movlw	65
  3013  001606  6E3D               	movwf	??_hazardSignal^0,c
  3014  001608  0EEE               	movlw	238
  3015  00160A                     u2177:
  3016  00160A  2EE8               	decfsz	wreg,f,c
  3017  00160C  D7FE               	bra	u2177
  3018  00160E  2E3D               	decfsz	??_hazardSignal^0,f,c
  3019  001610  D7FC               	bra	u2177
  3020  001612  D000               	nop2	
  3021  001614                     
  3022                           ;uart_interface.c: 129:     EUSART1_Write(v4);
  3023  001614  0E00               	movlw	0
  3024  001616  EC6C  F00D         	call	_EUSART1_Write
  3025  00161A                     
  3026                           ;uart_interface.c: 130:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3027  00161A  0E41               	movlw	65
  3028  00161C  6E3D               	movwf	??_hazardSignal^0,c
  3029  00161E  0EEE               	movlw	238
  3030  001620                     u2187:
  3031  001620  2EE8               	decfsz	wreg,f,c
  3032  001622  D7FE               	bra	u2187
  3033  001624  2E3D               	decfsz	??_hazardSignal^0,f,c
  3034  001626  D7FC               	bra	u2187
  3035  001628  D000               	nop2	
  3036  00162A                     
  3037                           ;uart_interface.c: 131:     EUSART1_Write(value);
  3038  00162A  503B               	movf	hazardSignal@value^0,w,c
  3039  00162C  EC6C  F00D         	call	_EUSART1_Write
  3040  001630                     
  3041                           ;uart_interface.c: 132:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3042  001630  0E41               	movlw	65
  3043  001632  6E3D               	movwf	??_hazardSignal^0,c
  3044  001634  0EEE               	movlw	238
  3045  001636                     u2197:
  3046  001636  2EE8               	decfsz	wreg,f,c
  3047  001638  D7FE               	bra	u2197
  3048  00163A  2E3D               	decfsz	??_hazardSignal^0,f,c
  3049  00163C  D7FC               	bra	u2197
  3050  00163E  D000               	nop2	
  3051  001640                     
  3052                           ;uart_interface.c: 133:     EUSART1_Write(checksum);
  3053  001640  503E               	movf	hazardSignal@checksum^0,w,c
  3054  001642  EC6C  F00D         	call	_EUSART1_Write
  3055  001646  0012               	return		;funcret
  3056  001648                     __end_of_hazardSignal:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _batteryTemp *****************
  3060 ;; Defined at:
  3061 ;;		line 103 in file "uart_interface.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  value           2    3[COMRAM] int 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  v4              2   12[COMRAM] int 
  3066 ;;  v3              2   10[COMRAM] int 
  3067 ;;  v2              2    8[COMRAM] int 
  3068 ;;  v1              2    0        int 
  3069 ;;  checksum        2    6[COMRAM] int 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3080 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3082 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;Total ram usage:       11 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 4
  3086 ;; This function calls:
  3087 ;;		_EUSART1_Write
  3088 ;; This function is called by:
  3089 ;;		_init
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text10
  3094  001648                     __ptext10:
  3095                           	callstack 0
  3096  001648                     _batteryTemp:
  3097                           	callstack 25
  3098  001648  0E00               	movlw	0
  3099  00164A  6E41               	movwf	(batteryTemp@v2+1)^0,c
  3100  00164C  0E0F               	movlw	15
  3101  00164E  6E40               	movwf	batteryTemp@v2^0,c
  3102  001650  0E00               	movlw	0
  3103  001652  6E43               	movwf	(batteryTemp@v3+1)^0,c
  3104  001654  0E02               	movlw	2
  3105  001656  6E42               	movwf	batteryTemp@v3^0,c
  3106  001658  0E00               	movlw	0
  3107  00165A  6E45               	movwf	(batteryTemp@v4+1)^0,c
  3108  00165C  0E00               	movlw	0
  3109  00165E  6E44               	movwf	batteryTemp@v4^0,c
  3110  001660                     
  3111                           ;uart_interface.c: 105:     int checksum = v1^v2^v3^v4^value;
  3112  001660  0E0C               	movlw	12
  3113  001662  183B               	xorwf	batteryTemp@value^0,w,c
  3114  001664  6E3E               	movwf	batteryTemp@checksum^0,c
  3115  001666  503C               	movf	(batteryTemp@value+1)^0,w,c
  3116  001668  6E3F               	movwf	(batteryTemp@checksum+1)^0,c
  3117  00166A                     
  3118                           ;uart_interface.c: 107:     EUSART1_Write(v1);
  3119  00166A  0E01               	movlw	1
  3120  00166C  EC6C  F00D         	call	_EUSART1_Write
  3121  001670                     
  3122                           ;uart_interface.c: 108:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3123  001670  0E41               	movlw	65
  3124  001672  6E3D               	movwf	??_batteryTemp^0,c
  3125  001674  0EEE               	movlw	238
  3126  001676                     u2207:
  3127  001676  2EE8               	decfsz	wreg,f,c
  3128  001678  D7FE               	bra	u2207
  3129  00167A  2E3D               	decfsz	??_batteryTemp^0,f,c
  3130  00167C  D7FC               	bra	u2207
  3131  00167E  D000               	nop2	
  3132  001680                     
  3133                           ;uart_interface.c: 109:     EUSART1_Write(v2);
  3134  001680  0E0F               	movlw	15
  3135  001682  EC6C  F00D         	call	_EUSART1_Write
  3136  001686                     
  3137                           ;uart_interface.c: 110:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3138  001686  0E41               	movlw	65
  3139  001688  6E3D               	movwf	??_batteryTemp^0,c
  3140  00168A  0EEE               	movlw	238
  3141  00168C                     u2217:
  3142  00168C  2EE8               	decfsz	wreg,f,c
  3143  00168E  D7FE               	bra	u2217
  3144  001690  2E3D               	decfsz	??_batteryTemp^0,f,c
  3145  001692  D7FC               	bra	u2217
  3146  001694  D000               	nop2	
  3147  001696                     
  3148                           ;uart_interface.c: 111:     EUSART1_Write(v3);
  3149  001696  0E02               	movlw	2
  3150  001698  EC6C  F00D         	call	_EUSART1_Write
  3151  00169C                     
  3152                           ;uart_interface.c: 112:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3153  00169C  0E41               	movlw	65
  3154  00169E  6E3D               	movwf	??_batteryTemp^0,c
  3155  0016A0  0EEE               	movlw	238
  3156  0016A2                     u2227:
  3157  0016A2  2EE8               	decfsz	wreg,f,c
  3158  0016A4  D7FE               	bra	u2227
  3159  0016A6  2E3D               	decfsz	??_batteryTemp^0,f,c
  3160  0016A8  D7FC               	bra	u2227
  3161  0016AA  D000               	nop2	
  3162  0016AC                     
  3163                           ;uart_interface.c: 113:     EUSART1_Write(v4);
  3164  0016AC  0E00               	movlw	0
  3165  0016AE  EC6C  F00D         	call	_EUSART1_Write
  3166  0016B2                     
  3167                           ;uart_interface.c: 114:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3168  0016B2  0E41               	movlw	65
  3169  0016B4  6E3D               	movwf	??_batteryTemp^0,c
  3170  0016B6  0EEE               	movlw	238
  3171  0016B8                     u2237:
  3172  0016B8  2EE8               	decfsz	wreg,f,c
  3173  0016BA  D7FE               	bra	u2237
  3174  0016BC  2E3D               	decfsz	??_batteryTemp^0,f,c
  3175  0016BE  D7FC               	bra	u2237
  3176  0016C0  D000               	nop2	
  3177  0016C2                     
  3178                           ;uart_interface.c: 115:     EUSART1_Write(value);
  3179  0016C2  503B               	movf	batteryTemp@value^0,w,c
  3180  0016C4  EC6C  F00D         	call	_EUSART1_Write
  3181  0016C8                     
  3182                           ;uart_interface.c: 116:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3183  0016C8  0E41               	movlw	65
  3184  0016CA  6E3D               	movwf	??_batteryTemp^0,c
  3185  0016CC  0EEE               	movlw	238
  3186  0016CE                     u2247:
  3187  0016CE  2EE8               	decfsz	wreg,f,c
  3188  0016D0  D7FE               	bra	u2247
  3189  0016D2  2E3D               	decfsz	??_batteryTemp^0,f,c
  3190  0016D4  D7FC               	bra	u2247
  3191  0016D6  D000               	nop2	
  3192  0016D8                     
  3193                           ;uart_interface.c: 117:     EUSART1_Write(checksum);
  3194  0016D8  503E               	movf	batteryTemp@checksum^0,w,c
  3195  0016DA  EC6C  F00D         	call	_EUSART1_Write
  3196  0016DE  0012               	return		;funcret
  3197  0016E0                     __end_of_batteryTemp:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _batterySOCGraphic *****************
  3201 ;; Defined at:
  3202 ;;		line 151 in file "uart_interface.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  value           2    3[COMRAM] int 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  v4              2   12[COMRAM] int 
  3207 ;;  v3              2   10[COMRAM] int 
  3208 ;;  v2              2    8[COMRAM] int 
  3209 ;;  v1              2    0        int 
  3210 ;;  checksum        2    6[COMRAM] int 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3221 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;Total ram usage:       11 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 4
  3227 ;; This function calls:
  3228 ;;		_EUSART1_Write
  3229 ;; This function is called by:
  3230 ;;		_init
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text11
  3235  0016E0                     __ptext11:
  3236                           	callstack 0
  3237  0016E0                     _batterySOCGraphic:
  3238                           	callstack 25
  3239  0016E0  0E00               	movlw	0
  3240  0016E2  6E41               	movwf	(batterySOCGraphic@v2+1)^0,c
  3241  0016E4  0E0F               	movlw	15
  3242  0016E6  6E40               	movwf	batterySOCGraphic@v2^0,c
  3243  0016E8  0E00               	movlw	0
  3244  0016EA  6E43               	movwf	(batterySOCGraphic@v3+1)^0,c
  3245  0016EC  0E03               	movlw	3
  3246  0016EE  6E42               	movwf	batterySOCGraphic@v3^0,c
  3247  0016F0  0E00               	movlw	0
  3248  0016F2  6E45               	movwf	(batterySOCGraphic@v4+1)^0,c
  3249  0016F4  0E00               	movlw	0
  3250  0016F6  6E44               	movwf	batterySOCGraphic@v4^0,c
  3251  0016F8                     
  3252                           ;uart_interface.c: 153:     int checksum = v1^v2^v3^v4^value;
  3253  0016F8  0E0D               	movlw	13
  3254  0016FA  183B               	xorwf	batterySOCGraphic@value^0,w,c
  3255  0016FC  6E3E               	movwf	batterySOCGraphic@checksum^0,c
  3256  0016FE  503C               	movf	(batterySOCGraphic@value+1)^0,w,c
  3257  001700  6E3F               	movwf	(batterySOCGraphic@checksum+1)^0,c
  3258  001702                     
  3259                           ;uart_interface.c: 155:     EUSART1_Write(v1);
  3260  001702  0E01               	movlw	1
  3261  001704  EC6C  F00D         	call	_EUSART1_Write
  3262  001708                     
  3263                           ;uart_interface.c: 156:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3264  001708  0E41               	movlw	65
  3265  00170A  6E3D               	movwf	??_batterySOCGraphic^0,c
  3266  00170C  0EEE               	movlw	238
  3267  00170E                     u2257:
  3268  00170E  2EE8               	decfsz	wreg,f,c
  3269  001710  D7FE               	bra	u2257
  3270  001712  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3271  001714  D7FC               	bra	u2257
  3272  001716  D000               	nop2	
  3273  001718                     
  3274                           ;uart_interface.c: 157:     EUSART1_Write(v2);
  3275  001718  0E0F               	movlw	15
  3276  00171A  EC6C  F00D         	call	_EUSART1_Write
  3277  00171E                     
  3278                           ;uart_interface.c: 158:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3279  00171E  0E41               	movlw	65
  3280  001720  6E3D               	movwf	??_batterySOCGraphic^0,c
  3281  001722  0EEE               	movlw	238
  3282  001724                     u2267:
  3283  001724  2EE8               	decfsz	wreg,f,c
  3284  001726  D7FE               	bra	u2267
  3285  001728  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3286  00172A  D7FC               	bra	u2267
  3287  00172C  D000               	nop2	
  3288  00172E                     
  3289                           ;uart_interface.c: 159:     EUSART1_Write(v3);
  3290  00172E  0E03               	movlw	3
  3291  001730  EC6C  F00D         	call	_EUSART1_Write
  3292  001734                     
  3293                           ;uart_interface.c: 160:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3294  001734  0E41               	movlw	65
  3295  001736  6E3D               	movwf	??_batterySOCGraphic^0,c
  3296  001738  0EEE               	movlw	238
  3297  00173A                     u2277:
  3298  00173A  2EE8               	decfsz	wreg,f,c
  3299  00173C  D7FE               	bra	u2277
  3300  00173E  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3301  001740  D7FC               	bra	u2277
  3302  001742  D000               	nop2	
  3303  001744                     
  3304                           ;uart_interface.c: 161:     EUSART1_Write(v4);
  3305  001744  0E00               	movlw	0
  3306  001746  EC6C  F00D         	call	_EUSART1_Write
  3307  00174A                     
  3308                           ;uart_interface.c: 162:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3309  00174A  0E41               	movlw	65
  3310  00174C  6E3D               	movwf	??_batterySOCGraphic^0,c
  3311  00174E  0EEE               	movlw	238
  3312  001750                     u2287:
  3313  001750  2EE8               	decfsz	wreg,f,c
  3314  001752  D7FE               	bra	u2287
  3315  001754  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3316  001756  D7FC               	bra	u2287
  3317  001758  D000               	nop2	
  3318  00175A                     
  3319                           ;uart_interface.c: 163:     EUSART1_Write(value);
  3320  00175A  503B               	movf	batterySOCGraphic@value^0,w,c
  3321  00175C  EC6C  F00D         	call	_EUSART1_Write
  3322  001760                     
  3323                           ;uart_interface.c: 164:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3324  001760  0E41               	movlw	65
  3325  001762  6E3D               	movwf	??_batterySOCGraphic^0,c
  3326  001764  0EEE               	movlw	238
  3327  001766                     u2297:
  3328  001766  2EE8               	decfsz	wreg,f,c
  3329  001768  D7FE               	bra	u2297
  3330  00176A  2E3D               	decfsz	??_batterySOCGraphic^0,f,c
  3331  00176C  D7FC               	bra	u2297
  3332  00176E  D000               	nop2	
  3333  001770                     
  3334                           ;uart_interface.c: 165:     EUSART1_Write(checksum);
  3335  001770  503E               	movf	batterySOCGraphic@checksum^0,w,c
  3336  001772  EC6C  F00D         	call	_EUSART1_Write
  3337  001776  0012               	return		;funcret
  3338  001778                     __end_of_batterySOCGraphic:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function _batterySOC *****************
  3342 ;; Defined at:
  3343 ;;		line 135 in file "uart_interface.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  value           2    3[COMRAM] int 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  v4              2   12[COMRAM] int 
  3348 ;;  v3              2   10[COMRAM] int 
  3349 ;;  v2              2    8[COMRAM] int 
  3350 ;;  v1              2    0        int 
  3351 ;;  checksum        2    6[COMRAM] int 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3362 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3363 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3364 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3365 ;;Total ram usage:       11 bytes
  3366 ;; Hardware stack levels used: 1
  3367 ;; Hardware stack levels required when called: 4
  3368 ;; This function calls:
  3369 ;;		_EUSART1_Write
  3370 ;; This function is called by:
  3371 ;;		_init
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text12
  3376  001778                     __ptext12:
  3377                           	callstack 0
  3378  001778                     _batterySOC:
  3379                           	callstack 25
  3380  001778  0E00               	movlw	0
  3381  00177A  6E41               	movwf	(batterySOC@v2+1)^0,c
  3382  00177C  0E28               	movlw	40
  3383  00177E  6E40               	movwf	batterySOC@v2^0,c
  3384  001780  0E00               	movlw	0
  3385  001782  6E43               	movwf	(batterySOC@v3+1)^0,c
  3386  001784  0E01               	movlw	1
  3387  001786  6E42               	movwf	batterySOC@v3^0,c
  3388  001788  0E00               	movlw	0
  3389  00178A  6E45               	movwf	(batterySOC@v4+1)^0,c
  3390  00178C  0E00               	movlw	0
  3391  00178E  6E44               	movwf	batterySOC@v4^0,c
  3392  001790                     
  3393                           ;uart_interface.c: 137:     int checksum = v1^v2^v3^v4^value;
  3394  001790  0E28               	movlw	40
  3395  001792  183B               	xorwf	batterySOC@value^0,w,c
  3396  001794  6E3E               	movwf	batterySOC@checksum^0,c
  3397  001796  503C               	movf	(batterySOC@value+1)^0,w,c
  3398  001798  6E3F               	movwf	(batterySOC@checksum+1)^0,c
  3399  00179A                     
  3400                           ;uart_interface.c: 139:     EUSART1_Write(v1);
  3401  00179A  0E01               	movlw	1
  3402  00179C  EC6C  F00D         	call	_EUSART1_Write
  3403  0017A0                     
  3404                           ;uart_interface.c: 140:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3405  0017A0  0E41               	movlw	65
  3406  0017A2  6E3D               	movwf	??_batterySOC^0,c
  3407  0017A4  0EEE               	movlw	238
  3408  0017A6                     u2307:
  3409  0017A6  2EE8               	decfsz	wreg,f,c
  3410  0017A8  D7FE               	bra	u2307
  3411  0017AA  2E3D               	decfsz	??_batterySOC^0,f,c
  3412  0017AC  D7FC               	bra	u2307
  3413  0017AE  D000               	nop2	
  3414  0017B0                     
  3415                           ;uart_interface.c: 141:     EUSART1_Write(v2);
  3416  0017B0  0E28               	movlw	40
  3417  0017B2  EC6C  F00D         	call	_EUSART1_Write
  3418  0017B6                     
  3419                           ;uart_interface.c: 142:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3420  0017B6  0E41               	movlw	65
  3421  0017B8  6E3D               	movwf	??_batterySOC^0,c
  3422  0017BA  0EEE               	movlw	238
  3423  0017BC                     u2317:
  3424  0017BC  2EE8               	decfsz	wreg,f,c
  3425  0017BE  D7FE               	bra	u2317
  3426  0017C0  2E3D               	decfsz	??_batterySOC^0,f,c
  3427  0017C2  D7FC               	bra	u2317
  3428  0017C4  D000               	nop2	
  3429  0017C6                     
  3430                           ;uart_interface.c: 143:     EUSART1_Write(v3);
  3431  0017C6  0E01               	movlw	1
  3432  0017C8  EC6C  F00D         	call	_EUSART1_Write
  3433  0017CC                     
  3434                           ;uart_interface.c: 144:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3435  0017CC  0E41               	movlw	65
  3436  0017CE  6E3D               	movwf	??_batterySOC^0,c
  3437  0017D0  0EEE               	movlw	238
  3438  0017D2                     u2327:
  3439  0017D2  2EE8               	decfsz	wreg,f,c
  3440  0017D4  D7FE               	bra	u2327
  3441  0017D6  2E3D               	decfsz	??_batterySOC^0,f,c
  3442  0017D8  D7FC               	bra	u2327
  3443  0017DA  D000               	nop2	
  3444  0017DC                     
  3445                           ;uart_interface.c: 145:     EUSART1_Write(v4);
  3446  0017DC  0E00               	movlw	0
  3447  0017DE  EC6C  F00D         	call	_EUSART1_Write
  3448  0017E2                     
  3449                           ;uart_interface.c: 146:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3450  0017E2  0E41               	movlw	65
  3451  0017E4  6E3D               	movwf	??_batterySOC^0,c
  3452  0017E6  0EEE               	movlw	238
  3453  0017E8                     u2337:
  3454  0017E8  2EE8               	decfsz	wreg,f,c
  3455  0017EA  D7FE               	bra	u2337
  3456  0017EC  2E3D               	decfsz	??_batterySOC^0,f,c
  3457  0017EE  D7FC               	bra	u2337
  3458  0017F0  D000               	nop2	
  3459  0017F2                     
  3460                           ;uart_interface.c: 147:     EUSART1_Write(value);
  3461  0017F2  503B               	movf	batterySOC@value^0,w,c
  3462  0017F4  EC6C  F00D         	call	_EUSART1_Write
  3463  0017F8                     
  3464                           ;uart_interface.c: 148:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3465  0017F8  0E41               	movlw	65
  3466  0017FA  6E3D               	movwf	??_batterySOC^0,c
  3467  0017FC  0EEE               	movlw	238
  3468  0017FE                     u2347:
  3469  0017FE  2EE8               	decfsz	wreg,f,c
  3470  001800  D7FE               	bra	u2347
  3471  001802  2E3D               	decfsz	??_batterySOC^0,f,c
  3472  001804  D7FC               	bra	u2347
  3473  001806  D000               	nop2	
  3474  001808                     
  3475                           ;uart_interface.c: 149:     EUSART1_Write(checksum);
  3476  001808  503E               	movf	batterySOC@checksum^0,w,c
  3477  00180A  EC6C  F00D         	call	_EUSART1_Write
  3478  00180E  0012               	return		;funcret
  3479  001810                     __end_of_batterySOC:
  3480                           	callstack 0
  3481                           
  3482 ;; *************** function _auxBattConn *****************
  3483 ;; Defined at:
  3484 ;;		line 52 in file "uart_interface.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  value           2    3[COMRAM] int 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  v4              2   12[COMRAM] int 
  3489 ;;  v3              2   10[COMRAM] int 
  3490 ;;  v2              2    8[COMRAM] int 
  3491 ;;  v1              2    0        int 
  3492 ;;  checksum        2    6[COMRAM] int 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3505 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3506 ;;Total ram usage:       11 bytes
  3507 ;; Hardware stack levels used: 1
  3508 ;; Hardware stack levels required when called: 4
  3509 ;; This function calls:
  3510 ;;		_EUSART1_Write
  3511 ;; This function is called by:
  3512 ;;		_main
  3513 ;;		_init
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text13
  3518  001810                     __ptext13:
  3519                           	callstack 0
  3520  001810                     _auxBattConn:
  3521                           	callstack 25
  3522  001810  0E00               	movlw	0
  3523  001812  6E41               	movwf	(auxBattConn@v2+1)^0,c
  3524  001814  0E2E               	movlw	46
  3525  001816  6E40               	movwf	auxBattConn@v2^0,c
  3526  001818  0E00               	movlw	0
  3527  00181A  6E43               	movwf	(auxBattConn@v3+1)^0,c
  3528  00181C  0E01               	movlw	1
  3529  00181E  6E42               	movwf	auxBattConn@v3^0,c
  3530  001820  0E00               	movlw	0
  3531  001822  6E45               	movwf	(auxBattConn@v4+1)^0,c
  3532  001824  0E00               	movlw	0
  3533  001826  6E44               	movwf	auxBattConn@v4^0,c
  3534  001828                     
  3535                           ;uart_interface.c: 54:     int checksum = v1^v2^v3^v4^value;
  3536  001828  0E2E               	movlw	46
  3537  00182A  183B               	xorwf	auxBattConn@value^0,w,c
  3538  00182C  6E3E               	movwf	auxBattConn@checksum^0,c
  3539  00182E  503C               	movf	(auxBattConn@value+1)^0,w,c
  3540  001830  6E3F               	movwf	(auxBattConn@checksum+1)^0,c
  3541  001832                     
  3542                           ;uart_interface.c: 56:     EUSART1_Write(v1);
  3543  001832  0E01               	movlw	1
  3544  001834  EC6C  F00D         	call	_EUSART1_Write
  3545  001838                     
  3546                           ;uart_interface.c: 57:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3547  001838  0E41               	movlw	65
  3548  00183A  6E3D               	movwf	??_auxBattConn^0,c
  3549  00183C  0EEE               	movlw	238
  3550  00183E                     u2357:
  3551  00183E  2EE8               	decfsz	wreg,f,c
  3552  001840  D7FE               	bra	u2357
  3553  001842  2E3D               	decfsz	??_auxBattConn^0,f,c
  3554  001844  D7FC               	bra	u2357
  3555  001846  D000               	nop2	
  3556  001848                     
  3557                           ;uart_interface.c: 58:     EUSART1_Write(v2);
  3558  001848  0E2E               	movlw	46
  3559  00184A  EC6C  F00D         	call	_EUSART1_Write
  3560  00184E                     
  3561                           ;uart_interface.c: 59:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3562  00184E  0E41               	movlw	65
  3563  001850  6E3D               	movwf	??_auxBattConn^0,c
  3564  001852  0EEE               	movlw	238
  3565  001854                     u2367:
  3566  001854  2EE8               	decfsz	wreg,f,c
  3567  001856  D7FE               	bra	u2367
  3568  001858  2E3D               	decfsz	??_auxBattConn^0,f,c
  3569  00185A  D7FC               	bra	u2367
  3570  00185C  D000               	nop2	
  3571  00185E                     
  3572                           ;uart_interface.c: 60:     EUSART1_Write(v3);
  3573  00185E  0E01               	movlw	1
  3574  001860  EC6C  F00D         	call	_EUSART1_Write
  3575  001864                     
  3576                           ;uart_interface.c: 61:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3577  001864  0E41               	movlw	65
  3578  001866  6E3D               	movwf	??_auxBattConn^0,c
  3579  001868  0EEE               	movlw	238
  3580  00186A                     u2377:
  3581  00186A  2EE8               	decfsz	wreg,f,c
  3582  00186C  D7FE               	bra	u2377
  3583  00186E  2E3D               	decfsz	??_auxBattConn^0,f,c
  3584  001870  D7FC               	bra	u2377
  3585  001872  D000               	nop2	
  3586  001874                     
  3587                           ;uart_interface.c: 62:     EUSART1_Write(v4);
  3588  001874  0E00               	movlw	0
  3589  001876  EC6C  F00D         	call	_EUSART1_Write
  3590  00187A                     
  3591                           ;uart_interface.c: 63:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3592  00187A  0E41               	movlw	65
  3593  00187C  6E3D               	movwf	??_auxBattConn^0,c
  3594  00187E  0EEE               	movlw	238
  3595  001880                     u2387:
  3596  001880  2EE8               	decfsz	wreg,f,c
  3597  001882  D7FE               	bra	u2387
  3598  001884  2E3D               	decfsz	??_auxBattConn^0,f,c
  3599  001886  D7FC               	bra	u2387
  3600  001888  D000               	nop2	
  3601  00188A                     
  3602                           ;uart_interface.c: 64:     EUSART1_Write(value);
  3603  00188A  503B               	movf	auxBattConn@value^0,w,c
  3604  00188C  EC6C  F00D         	call	_EUSART1_Write
  3605  001890                     
  3606                           ;uart_interface.c: 65:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3607  001890  0E41               	movlw	65
  3608  001892  6E3D               	movwf	??_auxBattConn^0,c
  3609  001894  0EEE               	movlw	238
  3610  001896                     u2397:
  3611  001896  2EE8               	decfsz	wreg,f,c
  3612  001898  D7FE               	bra	u2397
  3613  00189A  2E3D               	decfsz	??_auxBattConn^0,f,c
  3614  00189C  D7FC               	bra	u2397
  3615  00189E  D000               	nop2	
  3616  0018A0                     
  3617                           ;uart_interface.c: 66:     EUSART1_Write(checksum);
  3618  0018A0  503E               	movf	auxBattConn@checksum^0,w,c
  3619  0018A2  EC6C  F00D         	call	_EUSART1_Write
  3620  0018A6  0012               	return		;funcret
  3621  0018A8                     __end_of_auxBattConn:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _EUSART1_Write *****************
  3625 ;; Defined at:
  3626 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  txData          1    wreg     unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  txData          1    2[COMRAM] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3644 ;;Total ram usage:        1 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 3
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_leftTurnIndicator
  3651 ;;		_rightTurnIndicator
  3652 ;;		_warningLED
  3653 ;;		_auxBattConn
  3654 ;;		_motorSpeed
  3655 ;;		_motorControllerTemp
  3656 ;;		_batteryTemp
  3657 ;;		_hazardSignal
  3658 ;;		_batterySOC
  3659 ;;		_batterySOCGraphic
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text14
  3664  001AD8                     __ptext14:
  3665                           	callstack 0
  3666  001AD8                     _EUSART1_Write:
  3667                           	callstack 26
  3668                           
  3669                           ;incstack = 0
  3670                           ;EUSART1_Write@txData stored from wreg
  3671  001AD8  6E3A               	movwf	EUSART1_Write@txData^0,c
  3672  001ADA                     l67:
  3673                           
  3674                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3675  001ADA  A89E               	btfss	158,4,c	;volatile
  3676  001ADC  EF72  F00D         	goto	u1161
  3677  001AE0  EF74  F00D         	goto	u1160
  3678  001AE4                     u1161:
  3679  001AE4  EF6D  F00D         	goto	l67
  3680  001AE8                     u1160:
  3681  001AE8                     
  3682                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3683  001AE8  C03A  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3684  001AEC  0012               	return		;funcret
  3685  001AEE                     __end_of_EUSART1_Write:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function _hazardButton *****************
  3689 ;; Defined at:
  3690 ;;		line 58 in file "button_functionality.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  b2FunctionAc    2    2[COMRAM] PTR int 
  3693 ;;		 -> b2FuncActive(2), 
  3694 ;;  b2Latch         2    4[COMRAM] PTR int 
  3695 ;;		 -> latchb2(2), 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3711 ;;Total ram usage:        6 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 3
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text15
  3722  0011C8                     __ptext15:
  3723                           	callstack 0
  3724  0011C8                     _hazardButton:
  3725                           	callstack 27
  3726  0011C8                     
  3727                           ;button_functionality.c: 59:     switch (PORTAbits.RA1) {
  3728  0011C8  EF3E  F009         	goto	l4603
  3729  0011CC                     l4585:
  3730                           
  3731                           ;button_functionality.c: 61:         *b2Latch = 0;
  3732  0011CC  C03C  FFD9         	movff	hazardButton@b2Latch,fsr2l
  3733  0011D0  C03D  FFDA         	movff	hazardButton@b2Latch+1,fsr2h
  3734  0011D4  0E00               	movlw	0
  3735  0011D6  6EDE               	movwf	postinc2,c
  3736  0011D8  0E00               	movlw	0
  3737  0011DA  6EDD               	movwf	postdec2,c
  3738                           
  3739                           ;button_functionality.c: 62:         break;
  3740  0011DC  EF5B  F009         	goto	l781
  3741  0011E0                     l4587:
  3742                           
  3743                           ;button_functionality.c: 69:                 *b2FunctionActive = 1;
  3744  0011E0  C03A  FFD9         	movff	hazardButton@b2FunctionActive,fsr2l
  3745  0011E4  C03B  FFDA         	movff	hazardButton@b2FunctionActive+1,fsr2h
  3746  0011E8  0E01               	movlw	1
  3747  0011EA  6EDE               	movwf	postinc2,c
  3748  0011EC  0E00               	movlw	0
  3749  0011EE  6EDD               	movwf	postdec2,c
  3750                           
  3751                           ;button_functionality.c: 70:                 break;
  3752  0011F0  EF1E  F009         	goto	l4595
  3753  0011F4                     l4589:
  3754                           
  3755                           ;button_functionality.c: 73:                 *b2FunctionActive = 0;
  3756  0011F4  C03A  FFD9         	movff	hazardButton@b2FunctionActive,fsr2l
  3757  0011F8  C03B  FFDA         	movff	hazardButton@b2FunctionActive+1,fsr2h
  3758  0011FC  0E00               	movlw	0
  3759  0011FE  6EDE               	movwf	postinc2,c
  3760  001200  0E00               	movlw	0
  3761  001202  6EDD               	movwf	postdec2,c
  3762                           
  3763                           ;button_functionality.c: 74:                 break;
  3764  001204  EF1E  F009         	goto	l4595
  3765  001208                     l4593:
  3766  001208  C03A  FFD9         	movff	hazardButton@b2FunctionActive,fsr2l
  3767  00120C  C03B  FFDA         	movff	hazardButton@b2FunctionActive+1,fsr2h
  3768  001210  CFDE F03E          	movff	postinc2,??_hazardButton
  3769  001214  CFDD F03F          	movff	postdec2,??_hazardButton+1
  3770                           
  3771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3772                           ; Switch size 1, requested type "simple"
  3773                           ; Number of cases is 1, Range of values is 0 to 0
  3774                           ; switch strategies available:
  3775                           ; Name         Instructions Cycles
  3776                           ; simple_byte            4     3 (average)
  3777                           ;	Chosen strategy is simple_byte
  3778  001218  503F               	movf	(??_hazardButton+1)^0,w,c
  3779  00121A  0A00               	xorlw	0	; case 0
  3780  00121C  B4D8               	btfsc	status,2,c
  3781  00121E  EF13  F009         	goto	l5085
  3782  001222  EF1E  F009         	goto	l4595
  3783  001226                     l5085:
  3784                           
  3785                           ; Switch size 1, requested type "simple"
  3786                           ; Number of cases is 2, Range of values is 0 to 1
  3787                           ; switch strategies available:
  3788                           ; Name         Instructions Cycles
  3789                           ; simple_byte            7     4 (average)
  3790                           ;	Chosen strategy is simple_byte
  3791  001226  503E               	movf	??_hazardButton^0,w,c
  3792  001228  0A00               	xorlw	0	; case 0
  3793  00122A  B4D8               	btfsc	status,2,c
  3794  00122C  EFF0  F008         	goto	l4587
  3795  001230  0A01               	xorlw	1	; case 1
  3796  001232  B4D8               	btfsc	status,2,c
  3797  001234  EFFA  F008         	goto	l4589
  3798  001238  EF1E  F009         	goto	l4595
  3799  00123C                     l4595:
  3800                           
  3801                           ;button_functionality.c: 76:             *b2Latch = 1;
  3802  00123C  C03C  FFD9         	movff	hazardButton@b2Latch,fsr2l
  3803  001240  C03D  FFDA         	movff	hazardButton@b2Latch+1,fsr2h
  3804  001244  0E01               	movlw	1
  3805  001246  6EDE               	movwf	postinc2,c
  3806  001248  0E00               	movlw	0
  3807  00124A  6EDD               	movwf	postdec2,c
  3808                           
  3809                           ;button_functionality.c: 77:             break;
  3810  00124C  EF5B  F009         	goto	l781
  3811  001250                     l4599:
  3812  001250  C03C  FFD9         	movff	hazardButton@b2Latch,fsr2l
  3813  001254  C03D  FFDA         	movff	hazardButton@b2Latch+1,fsr2h
  3814  001258  CFDE F03E          	movff	postinc2,??_hazardButton
  3815  00125C  CFDD F03F          	movff	postdec2,??_hazardButton+1
  3816                           
  3817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3818                           ; Switch size 1, requested type "simple"
  3819                           ; Number of cases is 1, Range of values is 0 to 0
  3820                           ; switch strategies available:
  3821                           ; Name         Instructions Cycles
  3822                           ; simple_byte            4     3 (average)
  3823                           ;	Chosen strategy is simple_byte
  3824  001260  503F               	movf	(??_hazardButton+1)^0,w,c
  3825  001262  0A00               	xorlw	0	; case 0
  3826  001264  B4D8               	btfsc	status,2,c
  3827  001266  EF37  F009         	goto	l5087
  3828  00126A  EF5B  F009         	goto	l781
  3829  00126E                     l5087:
  3830                           
  3831                           ; Switch size 1, requested type "simple"
  3832                           ; Number of cases is 1, Range of values is 0 to 0
  3833                           ; switch strategies available:
  3834                           ; Name         Instructions Cycles
  3835                           ; simple_byte            4     3 (average)
  3836                           ;	Chosen strategy is simple_byte
  3837  00126E  503E               	movf	??_hazardButton^0,w,c
  3838  001270  0A00               	xorlw	0	; case 0
  3839  001272  B4D8               	btfsc	status,2,c
  3840  001274  EF04  F009         	goto	l4593
  3841  001278  EF5B  F009         	goto	l781
  3842  00127C                     l4603:
  3843  00127C  B280               	btfsc	128,1,c	;volatile
  3844  00127E  EF43  F009         	goto	u1351
  3845  001282  EF46  F009         	goto	u1350
  3846  001286                     u1351:
  3847  001286  0E01               	movlw	1
  3848  001288  EF47  F009         	goto	u1360
  3849  00128C                     u1350:
  3850  00128C  0E00               	movlw	0
  3851  00128E                     u1360:
  3852  00128E  6E3E               	movwf	??_hazardButton^0,c
  3853  001290  6A3F               	clrf	(??_hazardButton+1)^0,c
  3854                           
  3855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3856                           ; Switch size 1, requested type "simple"
  3857                           ; Number of cases is 1, Range of values is 0 to 0
  3858                           ; switch strategies available:
  3859                           ; Name         Instructions Cycles
  3860                           ; simple_byte            4     3 (average)
  3861                           ;	Chosen strategy is simple_byte
  3862  001292  503F               	movf	(??_hazardButton+1)^0,w,c
  3863  001294  0A00               	xorlw	0	; case 0
  3864  001296  B4D8               	btfsc	status,2,c
  3865  001298  EF50  F009         	goto	l5089
  3866  00129C  EF5B  F009         	goto	l781
  3867  0012A0                     l5089:
  3868                           
  3869                           ; Switch size 1, requested type "simple"
  3870                           ; Number of cases is 2, Range of values is 0 to 1
  3871                           ; switch strategies available:
  3872                           ; Name         Instructions Cycles
  3873                           ; simple_byte            7     4 (average)
  3874                           ;	Chosen strategy is simple_byte
  3875  0012A0  503E               	movf	??_hazardButton^0,w,c
  3876  0012A2  0A00               	xorlw	0	; case 0
  3877  0012A4  B4D8               	btfsc	status,2,c
  3878  0012A6  EFE6  F008         	goto	l4585
  3879  0012AA  0A01               	xorlw	1	; case 1
  3880  0012AC  B4D8               	btfsc	status,2,c
  3881  0012AE  EF28  F009         	goto	l4599
  3882  0012B2  EF5B  F009         	goto	l781
  3883  0012B6                     l781:
  3884  0012B6  0012               	return		;funcret
  3885  0012B8                     __end_of_hazardButton:
  3886                           	callstack 0
  3887                           
  3888 ;; *************** function _canRightSignal *****************
  3889 ;; Defined at:
  3890 ;;		line 15 in file "can_interface.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  number          2   26[COMRAM] int 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3908 ;;Total ram usage:        2 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 5
  3911 ;; This function calls:
  3912 ;;		_CAN_transmit
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text16
  3919  001A10                     __ptext16:
  3920                           	callstack 0
  3921  001A10                     _canRightSignal:
  3922                           	callstack 25
  3923  001A10                     
  3924                           ;can_interface.c: 16:  tx1.frame.idType = 1;
  3925  001A10  0E01               	movlw	1
  3926  001A12  0100               	movlb	0	; () banked
  3927  001A14  6FB4               	movwf	_tx1& (0+255),b
  3928                           
  3929                           ;can_interface.c: 17:  tx1.frame.id = 0x62;
  3930  001A16  0E62               	movlw	98
  3931  001A18  6FB5               	movwf	(_tx1+1)& (0+255),b
  3932  001A1A  0E00               	movlw	0
  3933  001A1C  6FB6               	movwf	(_tx1+2)& (0+255),b
  3934  001A1E  0E00               	movlw	0
  3935  001A20  6FB7               	movwf	(_tx1+3)& (0+255),b
  3936  001A22  0E00               	movlw	0
  3937  001A24  6FB8               	movwf	(_tx1+4)& (0+255),b
  3938                           
  3939                           ;can_interface.c: 18:  tx1.frame.dlc = 0x01;
  3940  001A26  0E01               	movlw	1
  3941  001A28  6FB9               	movwf	(_tx1+5)& (0+255),b
  3942  001A2A                     
  3943                           ; BSR set to: 0
  3944                           ;can_interface.c: 19:  tx1.frame.data0 = number;
  3945  001A2A  C052  F0BA         	movff	canRightSignal@number,_tx1+6
  3946  001A2E                     
  3947                           ; BSR set to: 0
  3948                           ;can_interface.c: 20:  CAN_transmit(&tx1);
  3949  001A2E  0EB4               	movlw	low _tx1
  3950  001A30  6E4C               	movwf	CAN_transmit@tempCanMsg^0,c
  3951  001A32  0E00               	movlw	high _tx1
  3952  001A34  6E4D               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
  3953  001A36  EC14  F003         	call	_CAN_transmit	;wreg free
  3954  001A3A  0012               	return		;funcret
  3955  001A3C                     __end_of_canRightSignal:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function _canLeftSignal *****************
  3959 ;; Defined at:
  3960 ;;		line 23 in file "can_interface.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  number          2   26[COMRAM] int 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3978 ;;Total ram usage:        2 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; Hardware stack levels required when called: 5
  3981 ;; This function calls:
  3982 ;;		_CAN_transmit
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text17
  3989  001A3C                     __ptext17:
  3990                           	callstack 0
  3991  001A3C                     _canLeftSignal:
  3992                           	callstack 25
  3993  001A3C                     
  3994                           ;can_interface.c: 24:  tx2.frame.idType = 1;
  3995  001A3C  0E01               	movlw	1
  3996  001A3E  0100               	movlb	0	; () banked
  3997  001A40  6FA6               	movwf	_tx2& (0+255),b
  3998                           
  3999                           ;can_interface.c: 25:  tx2.frame.id = 0x63;
  4000  001A42  0E63               	movlw	99
  4001  001A44  6FA7               	movwf	(_tx2+1)& (0+255),b
  4002  001A46  0E00               	movlw	0
  4003  001A48  6FA8               	movwf	(_tx2+2)& (0+255),b
  4004  001A4A  0E00               	movlw	0
  4005  001A4C  6FA9               	movwf	(_tx2+3)& (0+255),b
  4006  001A4E  0E00               	movlw	0
  4007  001A50  6FAA               	movwf	(_tx2+4)& (0+255),b
  4008                           
  4009                           ;can_interface.c: 26:  tx2.frame.dlc = 0x01;
  4010  001A52  0E01               	movlw	1
  4011  001A54  6FAB               	movwf	(_tx2+5)& (0+255),b
  4012  001A56                     
  4013                           ; BSR set to: 0
  4014                           ;can_interface.c: 27:  tx2.frame.data0 = number;
  4015  001A56  C052  F0AC         	movff	canLeftSignal@number,_tx2+6
  4016  001A5A                     
  4017                           ; BSR set to: 0
  4018                           ;can_interface.c: 28:  CAN_transmit(&tx2);
  4019  001A5A  0EA6               	movlw	low _tx2
  4020  001A5C  6E4C               	movwf	CAN_transmit@tempCanMsg^0,c
  4021  001A5E  0E00               	movlw	high _tx2
  4022  001A60  6E4D               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
  4023  001A62  EC14  F003         	call	_CAN_transmit	;wreg free
  4024  001A66  0012               	return		;funcret
  4025  001A68                     __end_of_canLeftSignal:
  4026                           	callstack 0
  4027                           
  4028 ;; *************** function _canHazardSignal *****************
  4029 ;; Defined at:
  4030 ;;		line 31 in file "can_interface.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  number          2   26[COMRAM] int 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4047 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4048 ;;Total ram usage:        2 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 5
  4051 ;; This function calls:
  4052 ;;		_CAN_transmit
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text18
  4059  001A68                     __ptext18:
  4060                           	callstack 0
  4061  001A68                     _canHazardSignal:
  4062                           	callstack 25
  4063  001A68                     
  4064                           ;can_interface.c: 32:  tx3.frame.idType = 1;
  4065  001A68  0E01               	movlw	1
  4066  001A6A  0100               	movlb	0	; () banked
  4067  001A6C  6F98               	movwf	_tx3& (0+255),b
  4068                           
  4069                           ;can_interface.c: 33:  tx3.frame.id = 0x61;
  4070  001A6E  0E61               	movlw	97
  4071  001A70  6F99               	movwf	(_tx3+1)& (0+255),b
  4072  001A72  0E00               	movlw	0
  4073  001A74  6F9A               	movwf	(_tx3+2)& (0+255),b
  4074  001A76  0E00               	movlw	0
  4075  001A78  6F9B               	movwf	(_tx3+3)& (0+255),b
  4076  001A7A  0E00               	movlw	0
  4077  001A7C  6F9C               	movwf	(_tx3+4)& (0+255),b
  4078                           
  4079                           ;can_interface.c: 34:  tx3.frame.dlc = 0x01;
  4080  001A7E  0E01               	movlw	1
  4081  001A80  6F9D               	movwf	(_tx3+5)& (0+255),b
  4082  001A82                     
  4083                           ; BSR set to: 0
  4084                           ;can_interface.c: 35:  tx3.frame.data0 = number;
  4085  001A82  C052  F09E         	movff	canHazardSignal@number,_tx3+6
  4086  001A86                     
  4087                           ; BSR set to: 0
  4088                           ;can_interface.c: 36:  CAN_transmit(&tx3);
  4089  001A86  0E98               	movlw	low _tx3
  4090  001A88  6E4C               	movwf	CAN_transmit@tempCanMsg^0,c
  4091  001A8A  0E00               	movlw	high _tx3
  4092  001A8C  6E4D               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
  4093  001A8E  EC14  F003         	call	_CAN_transmit	;wreg free
  4094  001A92  0012               	return		;funcret
  4095  001A94                     __end_of_canHazardSignal:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function _CAN_transmit *****************
  4099 ;; Defined at:
  4100 ;;		line 236 in file "mcc_generated_files/ecan.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  tempCanMsg      2   20[COMRAM] PTR struct .
  4103 ;;		 -> tx7(14), tx6(14), tx5(14), tx4(14), 
  4104 ;;		 -> tx3(14), tx2(14), tx1(14), 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  tempSIDL        1   25[COMRAM] unsigned char 
  4107 ;;  tempSIDH        1   24[COMRAM] unsigned char 
  4108 ;;  tempEIDL        1   23[COMRAM] unsigned char 
  4109 ;;  tempEIDH        1   22[COMRAM] unsigned char 
  4110 ;;  returnValue     1    0        unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      unsigned char 
  4113 ;; Registers used:
  4114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;Total ram usage:        6 bytes
  4125 ;; Hardware stack levels used: 1
  4126 ;; Hardware stack levels required when called: 4
  4127 ;; This function calls:
  4128 ;;		_convertCANid2Reg
  4129 ;; This function is called by:
  4130 ;;		_canRightSignal
  4131 ;;		_canLeftSignal
  4132 ;;		_canHazardSignal
  4133 ;;		_canFrontSignal
  4134 ;;		_canBackSignal
  4135 ;;		_requestSpeed
  4136 ;;		_func99
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text19
  4141  000628                     __ptext19:
  4142                           	callstack 0
  4143  000628                     _CAN_transmit:
  4144                           	callstack 25
  4145  000628                     
  4146                           ;mcc_generated_files/ecan.c: 236: uint8_t CAN_transmit(uCAN_MSG *tempCanMsg);mcc_generat
      +                          ed_files/ecan.c: 237: {;mcc_generated_files/ecan.c: 238:     uint8_t tempEIDH = 0;
  4147  000628  0E00               	movlw	0
  4148  00062A  6E4E               	movwf	CAN_transmit@tempEIDH^0,c
  4149                           
  4150                           ;mcc_generated_files/ecan.c: 239:     uint8_t tempEIDL = 0;
  4151  00062C  0E00               	movlw	0
  4152  00062E  6E4F               	movwf	CAN_transmit@tempEIDL^0,c
  4153                           
  4154                           ;mcc_generated_files/ecan.c: 240:     uint8_t tempSIDH = 0;
  4155  000630  0E00               	movlw	0
  4156  000632  6E50               	movwf	CAN_transmit@tempSIDH^0,c
  4157                           
  4158                           ;mcc_generated_files/ecan.c: 241:     uint8_t tempSIDL = 0;
  4159  000634  0E00               	movlw	0
  4160  000636  6E51               	movwf	CAN_transmit@tempSIDL^0,c
  4161  000638                     
  4162                           ;mcc_generated_files/ecan.c: 244:     if (TXB0CONbits.TXREQ != 1)
  4163  000638  010F               	movlb	15	; () banked
  4164  00063A  B720               	btfsc	32,3,b	;volatile
  4165  00063C  EF22  F003         	goto	u1221
  4166  000640  EF24  F003         	goto	u1220
  4167  000644                     u1221:
  4168  000644  EF9E  F003         	goto	l511
  4169  000648                     u1220:
  4170  000648                     
  4171                           ; BSR set to: 15
  4172                           ;mcc_generated_files/ecan.c: 245:     {;mcc_generated_files/ecan.c: 246:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  4173  000648  EE20 F001          	lfsr	2,1
  4174  00064C  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4175  00064E  26D9               	addwf	fsr2l,f,c
  4176  000650  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4177  000652  22DA               	addwfc	fsr2h,f,c
  4178  000654  CFDE F03A          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4179  000658  CFDE F03B          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4180  00065C  CFDE F03C          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4181  000660  CFDE F03D          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4182  000664  C04C  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4183  000668  C04D  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4184  00066C  50DF               	movf	indf2,w,c
  4185  00066E  6E3E               	movwf	convertCANid2Reg@canIdType^0,c
  4186  000670  0E4E               	movlw	low CAN_transmit@tempEIDH
  4187  000672  6E3F               	movwf	convertCANid2Reg@passedInEIDH^0,c
  4188  000674  0E00               	movlw	high CAN_transmit@tempEIDH
  4189  000676  6E40               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
  4190  000678  0E4F               	movlw	low CAN_transmit@tempEIDL
  4191  00067A  6E41               	movwf	convertCANid2Reg@passedInEIDL^0,c
  4192  00067C  0E00               	movlw	high CAN_transmit@tempEIDL
  4193  00067E  6E42               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
  4194  000680  0E50               	movlw	low CAN_transmit@tempSIDH
  4195  000682  6E43               	movwf	convertCANid2Reg@passedInSIDH^0,c
  4196  000684  0E00               	movlw	high CAN_transmit@tempSIDH
  4197  000686  6E44               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
  4198  000688  0E51               	movlw	low CAN_transmit@tempSIDL
  4199  00068A  6E45               	movwf	convertCANid2Reg@passedInSIDL^0,c
  4200  00068C  0E00               	movlw	high CAN_transmit@tempSIDL
  4201  00068E  6E46               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
  4202  000690  EC9D  F006         	call	_convertCANid2Reg	;wreg free
  4203  000694                     
  4204                           ;mcc_generated_files/ecan.c: 248:         TXB0EIDH = tempEIDH;
  4205  000694  C04E  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  4206  000698                     
  4207                           ;mcc_generated_files/ecan.c: 249:         TXB0EIDL = tempEIDL;
  4208  000698  C04F  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  4209  00069C                     
  4210                           ;mcc_generated_files/ecan.c: 250:         TXB0SIDH = tempSIDH;
  4211  00069C  C050  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  4212  0006A0                     
  4213                           ;mcc_generated_files/ecan.c: 251:         TXB0SIDL = tempSIDL;
  4214  0006A0  C051  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  4215  0006A4                     
  4216                           ;mcc_generated_files/ecan.c: 252:         TXB0DLC = tempCanMsg->frame.dlc;
  4217  0006A4  EE20 F005          	lfsr	2,5
  4218  0006A8  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4219  0006AA  26D9               	addwf	fsr2l,f,c
  4220  0006AC  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4221  0006AE  22DA               	addwfc	fsr2h,f,c
  4222  0006B0  50DF               	movf	indf2,w,c
  4223  0006B2  010F               	movlb	15	; () banked
  4224  0006B4  6F25               	movwf	37,b	;volatile
  4225  0006B6                     
  4226                           ; BSR set to: 15
  4227                           ;mcc_generated_files/ecan.c: 253:         TXB0D0 = tempCanMsg->frame.data0;
  4228  0006B6  EE20 F006          	lfsr	2,6
  4229  0006BA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4230  0006BC  26D9               	addwf	fsr2l,f,c
  4231  0006BE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4232  0006C0  22DA               	addwfc	fsr2h,f,c
  4233  0006C2  50DF               	movf	indf2,w,c
  4234  0006C4  6F26               	movwf	38,b	;volatile
  4235  0006C6                     
  4236                           ; BSR set to: 15
  4237                           ;mcc_generated_files/ecan.c: 254:         TXB0D1 = tempCanMsg->frame.data1;
  4238  0006C6  EE20 F007          	lfsr	2,7
  4239  0006CA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4240  0006CC  26D9               	addwf	fsr2l,f,c
  4241  0006CE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4242  0006D0  22DA               	addwfc	fsr2h,f,c
  4243  0006D2  50DF               	movf	indf2,w,c
  4244  0006D4  6F27               	movwf	39,b	;volatile
  4245  0006D6                     
  4246                           ; BSR set to: 15
  4247                           ;mcc_generated_files/ecan.c: 255:         TXB0D2 = tempCanMsg->frame.data2;
  4248  0006D6  EE20 F008          	lfsr	2,8
  4249  0006DA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4250  0006DC  26D9               	addwf	fsr2l,f,c
  4251  0006DE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4252  0006E0  22DA               	addwfc	fsr2h,f,c
  4253  0006E2  50DF               	movf	indf2,w,c
  4254  0006E4  6F28               	movwf	40,b	;volatile
  4255  0006E6                     
  4256                           ; BSR set to: 15
  4257                           ;mcc_generated_files/ecan.c: 256:         TXB0D3 = tempCanMsg->frame.data3;
  4258  0006E6  EE20 F009          	lfsr	2,9
  4259  0006EA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4260  0006EC  26D9               	addwf	fsr2l,f,c
  4261  0006EE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4262  0006F0  22DA               	addwfc	fsr2h,f,c
  4263  0006F2  50DF               	movf	indf2,w,c
  4264  0006F4  6F29               	movwf	41,b	;volatile
  4265  0006F6                     
  4266                           ; BSR set to: 15
  4267                           ;mcc_generated_files/ecan.c: 257:         TXB0D4 = tempCanMsg->frame.data4;
  4268  0006F6  EE20 F00A          	lfsr	2,10
  4269  0006FA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4270  0006FC  26D9               	addwf	fsr2l,f,c
  4271  0006FE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4272  000700  22DA               	addwfc	fsr2h,f,c
  4273  000702  50DF               	movf	indf2,w,c
  4274  000704  6F2A               	movwf	42,b	;volatile
  4275  000706                     
  4276                           ; BSR set to: 15
  4277                           ;mcc_generated_files/ecan.c: 258:         TXB0D5 = tempCanMsg->frame.data5;
  4278  000706  EE20 F00B          	lfsr	2,11
  4279  00070A  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4280  00070C  26D9               	addwf	fsr2l,f,c
  4281  00070E  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4282  000710  22DA               	addwfc	fsr2h,f,c
  4283  000712  50DF               	movf	indf2,w,c
  4284  000714  6F2B               	movwf	43,b	;volatile
  4285  000716                     
  4286                           ; BSR set to: 15
  4287                           ;mcc_generated_files/ecan.c: 259:         TXB0D6 = tempCanMsg->frame.data6;
  4288  000716  EE20 F00C          	lfsr	2,12
  4289  00071A  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4290  00071C  26D9               	addwf	fsr2l,f,c
  4291  00071E  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4292  000720  22DA               	addwfc	fsr2h,f,c
  4293  000722  50DF               	movf	indf2,w,c
  4294  000724  6F2C               	movwf	44,b	;volatile
  4295  000726                     
  4296                           ; BSR set to: 15
  4297                           ;mcc_generated_files/ecan.c: 260:         TXB0D7 = tempCanMsg->frame.data7;
  4298  000726  EE20 F00D          	lfsr	2,13
  4299  00072A  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4300  00072C  26D9               	addwf	fsr2l,f,c
  4301  00072E  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4302  000730  22DA               	addwfc	fsr2h,f,c
  4303  000732  50DF               	movf	indf2,w,c
  4304  000734  6F2D               	movwf	45,b	;volatile
  4305  000736                     
  4306                           ; BSR set to: 15
  4307                           ;mcc_generated_files/ecan.c: 262:         TXB0CONbits.TXREQ = 1;
  4308  000736  8720               	bsf	32,3,b	;volatile
  4309  000738                     l4047:
  4310                           
  4311                           ; BSR set to: 15
  4312                           ;mcc_generated_files/ecan.c: 265:     }
  4313  000738  EFA0  F004         	goto	l516
  4314  00073C                     l511:
  4315                           
  4316                           ; BSR set to: 15
  4317  00073C  B710               	btfsc	16,3,b	;volatile
  4318  00073E  EFA3  F003         	goto	u1231
  4319  000742  EFA5  F003         	goto	u1230
  4320  000746                     u1231:
  4321  000746  EF1F  F004         	goto	l513
  4322  00074A                     u1230:
  4323  00074A                     
  4324                           ; BSR set to: 15
  4325                           ;mcc_generated_files/ecan.c: 267:     {;mcc_generated_files/ecan.c: 269:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  4326  00074A  EE20 F001          	lfsr	2,1
  4327  00074E  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4328  000750  26D9               	addwf	fsr2l,f,c
  4329  000752  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4330  000754  22DA               	addwfc	fsr2h,f,c
  4331  000756  CFDE F03A          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4332  00075A  CFDE F03B          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4333  00075E  CFDE F03C          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4334  000762  CFDE F03D          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4335  000766  C04C  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4336  00076A  C04D  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4337  00076E  50DF               	movf	indf2,w,c
  4338  000770  6E3E               	movwf	convertCANid2Reg@canIdType^0,c
  4339  000772  0E4E               	movlw	low CAN_transmit@tempEIDH
  4340  000774  6E3F               	movwf	convertCANid2Reg@passedInEIDH^0,c
  4341  000776  0E00               	movlw	high CAN_transmit@tempEIDH
  4342  000778  6E40               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
  4343  00077A  0E4F               	movlw	low CAN_transmit@tempEIDL
  4344  00077C  6E41               	movwf	convertCANid2Reg@passedInEIDL^0,c
  4345  00077E  0E00               	movlw	high CAN_transmit@tempEIDL
  4346  000780  6E42               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
  4347  000782  0E50               	movlw	low CAN_transmit@tempSIDH
  4348  000784  6E43               	movwf	convertCANid2Reg@passedInSIDH^0,c
  4349  000786  0E00               	movlw	high CAN_transmit@tempSIDH
  4350  000788  6E44               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
  4351  00078A  0E51               	movlw	low CAN_transmit@tempSIDL
  4352  00078C  6E45               	movwf	convertCANid2Reg@passedInSIDL^0,c
  4353  00078E  0E00               	movlw	high CAN_transmit@tempSIDL
  4354  000790  6E46               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
  4355  000792  EC9D  F006         	call	_convertCANid2Reg	;wreg free
  4356  000796                     
  4357                           ;mcc_generated_files/ecan.c: 271:         TXB1EIDH = tempEIDH;
  4358  000796  C04E  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  4359  00079A                     
  4360                           ;mcc_generated_files/ecan.c: 272:         TXB1EIDL = tempEIDL;
  4361  00079A  C04F  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  4362  00079E                     
  4363                           ;mcc_generated_files/ecan.c: 273:         TXB1SIDH = tempSIDH;
  4364  00079E  C050  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  4365  0007A2                     
  4366                           ;mcc_generated_files/ecan.c: 274:         TXB1SIDL = tempSIDL;
  4367  0007A2  C051  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  4368  0007A6                     
  4369                           ;mcc_generated_files/ecan.c: 275:         TXB1DLC = tempCanMsg->frame.dlc;
  4370  0007A6  EE20 F005          	lfsr	2,5
  4371  0007AA  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4372  0007AC  26D9               	addwf	fsr2l,f,c
  4373  0007AE  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4374  0007B0  22DA               	addwfc	fsr2h,f,c
  4375  0007B2  50DF               	movf	indf2,w,c
  4376  0007B4  010F               	movlb	15	; () banked
  4377  0007B6  6F15               	movwf	21,b	;volatile
  4378  0007B8                     
  4379                           ; BSR set to: 15
  4380                           ;mcc_generated_files/ecan.c: 276:         TXB1D0 = tempCanMsg->frame.data0;
  4381  0007B8  EE20 F006          	lfsr	2,6
  4382  0007BC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4383  0007BE  26D9               	addwf	fsr2l,f,c
  4384  0007C0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4385  0007C2  22DA               	addwfc	fsr2h,f,c
  4386  0007C4  50DF               	movf	indf2,w,c
  4387  0007C6  6F16               	movwf	22,b	;volatile
  4388  0007C8                     
  4389                           ; BSR set to: 15
  4390                           ;mcc_generated_files/ecan.c: 277:         TXB1D1 = tempCanMsg->frame.data1;
  4391  0007C8  EE20 F007          	lfsr	2,7
  4392  0007CC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4393  0007CE  26D9               	addwf	fsr2l,f,c
  4394  0007D0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4395  0007D2  22DA               	addwfc	fsr2h,f,c
  4396  0007D4  50DF               	movf	indf2,w,c
  4397  0007D6  6F17               	movwf	23,b	;volatile
  4398  0007D8                     
  4399                           ; BSR set to: 15
  4400                           ;mcc_generated_files/ecan.c: 278:         TXB1D2 = tempCanMsg->frame.data2;
  4401  0007D8  EE20 F008          	lfsr	2,8
  4402  0007DC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4403  0007DE  26D9               	addwf	fsr2l,f,c
  4404  0007E0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4405  0007E2  22DA               	addwfc	fsr2h,f,c
  4406  0007E4  50DF               	movf	indf2,w,c
  4407  0007E6  6F18               	movwf	24,b	;volatile
  4408  0007E8                     
  4409                           ; BSR set to: 15
  4410                           ;mcc_generated_files/ecan.c: 279:         TXB1D3 = tempCanMsg->frame.data3;
  4411  0007E8  EE20 F009          	lfsr	2,9
  4412  0007EC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4413  0007EE  26D9               	addwf	fsr2l,f,c
  4414  0007F0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4415  0007F2  22DA               	addwfc	fsr2h,f,c
  4416  0007F4  50DF               	movf	indf2,w,c
  4417  0007F6  6F19               	movwf	25,b	;volatile
  4418  0007F8                     
  4419                           ; BSR set to: 15
  4420                           ;mcc_generated_files/ecan.c: 280:         TXB1D4 = tempCanMsg->frame.data4;
  4421  0007F8  EE20 F00A          	lfsr	2,10
  4422  0007FC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4423  0007FE  26D9               	addwf	fsr2l,f,c
  4424  000800  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4425  000802  22DA               	addwfc	fsr2h,f,c
  4426  000804  50DF               	movf	indf2,w,c
  4427  000806  6F1A               	movwf	26,b	;volatile
  4428  000808                     
  4429                           ; BSR set to: 15
  4430                           ;mcc_generated_files/ecan.c: 281:         TXB1D5 = tempCanMsg->frame.data5;
  4431  000808  EE20 F00B          	lfsr	2,11
  4432  00080C  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4433  00080E  26D9               	addwf	fsr2l,f,c
  4434  000810  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4435  000812  22DA               	addwfc	fsr2h,f,c
  4436  000814  50DF               	movf	indf2,w,c
  4437  000816  6F1B               	movwf	27,b	;volatile
  4438  000818                     
  4439                           ; BSR set to: 15
  4440                           ;mcc_generated_files/ecan.c: 282:         TXB1D6 = tempCanMsg->frame.data6;
  4441  000818  EE20 F00C          	lfsr	2,12
  4442  00081C  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4443  00081E  26D9               	addwf	fsr2l,f,c
  4444  000820  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4445  000822  22DA               	addwfc	fsr2h,f,c
  4446  000824  50DF               	movf	indf2,w,c
  4447  000826  6F1C               	movwf	28,b	;volatile
  4448  000828                     
  4449                           ; BSR set to: 15
  4450                           ;mcc_generated_files/ecan.c: 283:         TXB1D7 = tempCanMsg->frame.data7;
  4451  000828  EE20 F00D          	lfsr	2,13
  4452  00082C  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4453  00082E  26D9               	addwf	fsr2l,f,c
  4454  000830  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4455  000832  22DA               	addwfc	fsr2h,f,c
  4456  000834  50DF               	movf	indf2,w,c
  4457  000836  6F1D               	movwf	29,b	;volatile
  4458  000838                     
  4459                           ; BSR set to: 15
  4460                           ;mcc_generated_files/ecan.c: 285:         TXB1CONbits.TXREQ = 1;
  4461  000838  8710               	bsf	16,3,b	;volatile
  4462  00083A  EF9C  F003         	goto	l4047
  4463  00083E                     l513:
  4464                           
  4465                           ; BSR set to: 15
  4466  00083E  B700               	btfsc	0,3,b	;volatile
  4467  000840  EF24  F004         	goto	u1241
  4468  000844  EF26  F004         	goto	u1240
  4469  000848                     u1241:
  4470  000848  EFA0  F004         	goto	l512
  4471  00084C                     u1240:
  4472  00084C                     
  4473                           ; BSR set to: 15
  4474                           ;mcc_generated_files/ecan.c: 289:     {;mcc_generated_files/ecan.c: 291:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  4475  00084C  EE20 F001          	lfsr	2,1
  4476  000850  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4477  000852  26D9               	addwf	fsr2l,f,c
  4478  000854  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4479  000856  22DA               	addwfc	fsr2h,f,c
  4480  000858  CFDE F03A          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4481  00085C  CFDE F03B          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4482  000860  CFDE F03C          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4483  000864  CFDE F03D          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4484  000868  C04C  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4485  00086C  C04D  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4486  000870  50DF               	movf	indf2,w,c
  4487  000872  6E3E               	movwf	convertCANid2Reg@canIdType^0,c
  4488  000874  0E4E               	movlw	low CAN_transmit@tempEIDH
  4489  000876  6E3F               	movwf	convertCANid2Reg@passedInEIDH^0,c
  4490  000878  0E00               	movlw	high CAN_transmit@tempEIDH
  4491  00087A  6E40               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
  4492  00087C  0E4F               	movlw	low CAN_transmit@tempEIDL
  4493  00087E  6E41               	movwf	convertCANid2Reg@passedInEIDL^0,c
  4494  000880  0E00               	movlw	high CAN_transmit@tempEIDL
  4495  000882  6E42               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
  4496  000884  0E50               	movlw	low CAN_transmit@tempSIDH
  4497  000886  6E43               	movwf	convertCANid2Reg@passedInSIDH^0,c
  4498  000888  0E00               	movlw	high CAN_transmit@tempSIDH
  4499  00088A  6E44               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
  4500  00088C  0E51               	movlw	low CAN_transmit@tempSIDL
  4501  00088E  6E45               	movwf	convertCANid2Reg@passedInSIDL^0,c
  4502  000890  0E00               	movlw	high CAN_transmit@tempSIDL
  4503  000892  6E46               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
  4504  000894  EC9D  F006         	call	_convertCANid2Reg	;wreg free
  4505  000898                     
  4506                           ;mcc_generated_files/ecan.c: 293:         TXB2EIDH = tempEIDH;
  4507  000898  C04E  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  4508  00089C                     
  4509                           ;mcc_generated_files/ecan.c: 294:         TXB2EIDL = tempEIDL;
  4510  00089C  C04F  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  4511  0008A0                     
  4512                           ;mcc_generated_files/ecan.c: 295:         TXB2SIDH = tempSIDH;
  4513  0008A0  C050  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  4514  0008A4                     
  4515                           ;mcc_generated_files/ecan.c: 296:         TXB2SIDL = tempSIDL;
  4516  0008A4  C051  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  4517  0008A8                     
  4518                           ;mcc_generated_files/ecan.c: 297:         TXB2DLC = tempCanMsg->frame.dlc;
  4519  0008A8  EE20 F005          	lfsr	2,5
  4520  0008AC  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4521  0008AE  26D9               	addwf	fsr2l,f,c
  4522  0008B0  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4523  0008B2  22DA               	addwfc	fsr2h,f,c
  4524  0008B4  50DF               	movf	indf2,w,c
  4525  0008B6  010F               	movlb	15	; () banked
  4526  0008B8  6F05               	movwf	5,b	;volatile
  4527  0008BA                     
  4528                           ; BSR set to: 15
  4529                           ;mcc_generated_files/ecan.c: 298:         TXB2D0 = tempCanMsg->frame.data0;
  4530  0008BA  EE20 F006          	lfsr	2,6
  4531  0008BE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4532  0008C0  26D9               	addwf	fsr2l,f,c
  4533  0008C2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4534  0008C4  22DA               	addwfc	fsr2h,f,c
  4535  0008C6  50DF               	movf	indf2,w,c
  4536  0008C8  6F06               	movwf	6,b	;volatile
  4537  0008CA                     
  4538                           ; BSR set to: 15
  4539                           ;mcc_generated_files/ecan.c: 299:         TXB2D1 = tempCanMsg->frame.data1;
  4540  0008CA  EE20 F007          	lfsr	2,7
  4541  0008CE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4542  0008D0  26D9               	addwf	fsr2l,f,c
  4543  0008D2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4544  0008D4  22DA               	addwfc	fsr2h,f,c
  4545  0008D6  50DF               	movf	indf2,w,c
  4546  0008D8  6F07               	movwf	7,b	;volatile
  4547  0008DA                     
  4548                           ; BSR set to: 15
  4549                           ;mcc_generated_files/ecan.c: 300:         TXB2D2 = tempCanMsg->frame.data2;
  4550  0008DA  EE20 F008          	lfsr	2,8
  4551  0008DE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4552  0008E0  26D9               	addwf	fsr2l,f,c
  4553  0008E2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4554  0008E4  22DA               	addwfc	fsr2h,f,c
  4555  0008E6  50DF               	movf	indf2,w,c
  4556  0008E8  6F08               	movwf	8,b	;volatile
  4557  0008EA                     
  4558                           ; BSR set to: 15
  4559                           ;mcc_generated_files/ecan.c: 301:         TXB2D3 = tempCanMsg->frame.data3;
  4560  0008EA  EE20 F009          	lfsr	2,9
  4561  0008EE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4562  0008F0  26D9               	addwf	fsr2l,f,c
  4563  0008F2  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4564  0008F4  22DA               	addwfc	fsr2h,f,c
  4565  0008F6  50DF               	movf	indf2,w,c
  4566  0008F8  6F09               	movwf	9,b	;volatile
  4567  0008FA                     
  4568                           ; BSR set to: 15
  4569                           ;mcc_generated_files/ecan.c: 302:         TXB2D4 = tempCanMsg->frame.data4;
  4570  0008FA  EE20 F00A          	lfsr	2,10
  4571  0008FE  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4572  000900  26D9               	addwf	fsr2l,f,c
  4573  000902  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4574  000904  22DA               	addwfc	fsr2h,f,c
  4575  000906  50DF               	movf	indf2,w,c
  4576  000908  6F0A               	movwf	10,b	;volatile
  4577  00090A                     
  4578                           ; BSR set to: 15
  4579                           ;mcc_generated_files/ecan.c: 303:         TXB2D5 = tempCanMsg->frame.data5;
  4580  00090A  EE20 F00B          	lfsr	2,11
  4581  00090E  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4582  000910  26D9               	addwf	fsr2l,f,c
  4583  000912  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4584  000914  22DA               	addwfc	fsr2h,f,c
  4585  000916  50DF               	movf	indf2,w,c
  4586  000918  6F0B               	movwf	11,b	;volatile
  4587  00091A                     
  4588                           ; BSR set to: 15
  4589                           ;mcc_generated_files/ecan.c: 304:         TXB2D6 = tempCanMsg->frame.data6;
  4590  00091A  EE20 F00C          	lfsr	2,12
  4591  00091E  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4592  000920  26D9               	addwf	fsr2l,f,c
  4593  000922  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4594  000924  22DA               	addwfc	fsr2h,f,c
  4595  000926  50DF               	movf	indf2,w,c
  4596  000928  6F0C               	movwf	12,b	;volatile
  4597  00092A                     
  4598                           ; BSR set to: 15
  4599                           ;mcc_generated_files/ecan.c: 305:         TXB2D7 = tempCanMsg->frame.data7;
  4600  00092A  EE20 F00D          	lfsr	2,13
  4601  00092E  504C               	movf	CAN_transmit@tempCanMsg^0,w,c
  4602  000930  26D9               	addwf	fsr2l,f,c
  4603  000932  504D               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  4604  000934  22DA               	addwfc	fsr2h,f,c
  4605  000936  50DF               	movf	indf2,w,c
  4606  000938  6F0D               	movwf	13,b	;volatile
  4607  00093A                     
  4608                           ; BSR set to: 15
  4609                           ;mcc_generated_files/ecan.c: 307:         TXB2CONbits.TXREQ = 1;
  4610  00093A  8700               	bsf	0,3,b	;volatile
  4611  00093C  EF9C  F003         	goto	l4047
  4612  000940                     l512:
  4613  000940                     l516:
  4614                           
  4615                           ; BSR set to: 15
  4616  000940  0012               	return		;funcret
  4617  000942                     __end_of_CAN_transmit:
  4618                           	callstack 0
  4619                           
  4620 ;; *************** function _convertCANid2Reg *****************
  4621 ;; Defined at:
  4622 ;;		line 463 in file "mcc_generated_files/ecan.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  tempPassedIn    4    2[COMRAM] unsigned long 
  4625 ;;  canIdType       1    6[COMRAM] unsigned char 
  4626 ;;  passedInEIDH    2    7[COMRAM] PTR unsigned char 
  4627 ;;		 -> CAN_transmit@tempEIDH(1), 
  4628 ;;  passedInEIDL    2    9[COMRAM] PTR unsigned char 
  4629 ;;		 -> CAN_transmit@tempEIDL(1), 
  4630 ;;  passedInSIDH    2   11[COMRAM] PTR unsigned char 
  4631 ;;		 -> CAN_transmit@tempSIDH(1), 
  4632 ;;  passedInSIDL    2   13[COMRAM] PTR unsigned char 
  4633 ;;		 -> CAN_transmit@tempSIDL(1), 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  wipSIDL         1   19[COMRAM] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4645 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4647 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4648 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4649 ;;Total ram usage:       18 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 3
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_CAN_transmit
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text20
  4660  000D3A                     __ptext20:
  4661                           	callstack 0
  4662  000D3A                     _convertCANid2Reg:
  4663                           	callstack 25
  4664  000D3A                     
  4665                           ;mcc_generated_files/ecan.c: 466:     if (canIdType == 2) {
  4666  000D3A  0E02               	movlw	2
  4667  000D3C  183E               	xorwf	convertCANid2Reg@canIdType^0,w,c
  4668  000D3E  A4D8               	btfss	status,2,c
  4669  000D40  EFA4  F006         	goto	u1171
  4670  000D44  EFA6  F006         	goto	u1170
  4671  000D48                     u1171:
  4672  000D48  EF29  F007         	goto	l3951
  4673  000D4C                     u1170:
  4674  000D4C                     
  4675                           ;mcc_generated_files/ecan.c: 469:         *passedInEIDL = 0xFF & tempPassedInID;
  4676  000D4C  C041  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  4677  000D50  C042  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  4678  000D54  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4679  000D58                     
  4680                           ;mcc_generated_files/ecan.c: 470:         tempPassedInID = tempPassedInID >> 8;
  4681  000D58  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4682  000D5C  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4683  000D60  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4684  000D64  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4685  000D68  C048  F047         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4686  000D6C  C049  F048         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4687  000D70  C04A  F049         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4688  000D74  6A4A               	clrf	(??_convertCANid2Reg+3)^0,c
  4689  000D76  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4690  000D7A  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4691  000D7E  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4692  000D82  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4693  000D86                     
  4694                           ;mcc_generated_files/ecan.c: 473:         *passedInEIDH = 0xFF & tempPassedInID;
  4695  000D86  C03F  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  4696  000D8A  C040  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  4697  000D8E  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4698                           
  4699                           ;mcc_generated_files/ecan.c: 474:         tempPassedInID = tempPassedInID >> 8;
  4700  000D92  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4701  000D96  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4702  000D9A  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4703  000D9E  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4704  000DA2  C048  F047         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4705  000DA6  C049  F048         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4706  000DAA  C04A  F049         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4707  000DAE  6A4A               	clrf	(??_convertCANid2Reg+3)^0,c
  4708  000DB0  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4709  000DB4  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4710  000DB8  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4711  000DBC  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4712  000DC0                     
  4713                           ;mcc_generated_files/ecan.c: 478:         wipSIDL = 0x03 & tempPassedInID;
  4714  000DC0  503A               	movf	convertCANid2Reg@tempPassedInID^0,w,c
  4715  000DC2  0B03               	andlw	3
  4716  000DC4  6E4B               	movwf	convertCANid2Reg@wipSIDL^0,c
  4717  000DC6                     
  4718                           ;mcc_generated_files/ecan.c: 479:         tempPassedInID = tempPassedInID << 3;
  4719  000DC6  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4720  000DCA  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4721  000DCE  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4722  000DD2  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4723  000DD6  0E03               	movlw	3
  4724  000DD8                     u1185:
  4725  000DD8  90D8               	bcf	status,0,c
  4726  000DDA  3647               	rlcf	??_convertCANid2Reg^0,f,c
  4727  000DDC  3648               	rlcf	(??_convertCANid2Reg+1)^0,f,c
  4728  000DDE  3649               	rlcf	(??_convertCANid2Reg+2)^0,f,c
  4729  000DE0  364A               	rlcf	(??_convertCANid2Reg+3)^0,f,c
  4730  000DE2  2EE8               	decfsz	wreg,f,c
  4731  000DE4  EFEC  F006         	goto	u1185
  4732  000DE8  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4733  000DEC  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4734  000DF0  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4735  000DF4  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4736  000DF8                     
  4737                           ;mcc_generated_files/ecan.c: 480:         wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  4738  000DF8  503A               	movf	convertCANid2Reg@tempPassedInID^0,w,c
  4739  000DFA  0BE0               	andlw	224
  4740  000DFC  244B               	addwf	convertCANid2Reg@wipSIDL^0,w,c
  4741  000DFE  6E4B               	movwf	convertCANid2Reg@wipSIDL^0,c
  4742  000E00                     
  4743                           ;mcc_generated_files/ecan.c: 481:         wipSIDL = (uint8_t)(wipSIDL + 0x08);
  4744  000E00  504B               	movf	convertCANid2Reg@wipSIDL^0,w,c
  4745  000E02  0F08               	addlw	8
  4746  000E04  6E4B               	movwf	convertCANid2Reg@wipSIDL^0,c
  4747  000E06                     
  4748                           ;mcc_generated_files/ecan.c: 482:         *passedInSIDL = (uint8_t)(0xEB & wipSIDL);
  4749  000E06  504B               	movf	convertCANid2Reg@wipSIDL^0,w,c
  4750  000E08  0BEB               	andlw	235
  4751  000E0A  C045  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  4752  000E0E  C046  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  4753  000E12  6EDF               	movwf	indf2,c
  4754  000E14                     l3947:
  4755                           
  4756                           ;mcc_generated_files/ecan.c: 485:         tempPassedInID = tempPassedInID >> 8;
  4757  000E14  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4758  000E18  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4759  000E1C  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4760  000E20  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4761  000E24  C048  F047         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4762  000E28  C049  F048         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4763  000E2C  C04A  F049         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4764  000E30  6A4A               	clrf	(??_convertCANid2Reg+3)^0,c
  4765  000E32  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4766  000E36  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4767  000E3A  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4768  000E3E  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4769  000E42                     
  4770                           ;mcc_generated_files/ecan.c: 486:         *passedInSIDH = 0xFF & tempPassedInID;
  4771  000E42  C043  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  4772  000E46  C044  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  4773  000E4A  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4774                           
  4775                           ;mcc_generated_files/ecan.c: 487:     } else
  4776  000E4E  EF56  F007         	goto	l554
  4777  000E52                     l3951:
  4778                           
  4779                           ;mcc_generated_files/ecan.c: 488:     {;mcc_generated_files/ecan.c: 489:         *passed
      +                          InEIDH = 0;
  4780  000E52  C03F  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  4781  000E56  C040  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  4782  000E5A  0E00               	movlw	0
  4783  000E5C  6EDF               	movwf	indf2,c
  4784                           
  4785                           ;mcc_generated_files/ecan.c: 490:         *passedInEIDL = 0;
  4786  000E5E  C041  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  4787  000E62  C042  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  4788  000E66  0E00               	movlw	0
  4789  000E68  6EDF               	movwf	indf2,c
  4790  000E6A                     
  4791                           ;mcc_generated_files/ecan.c: 491:         tempPassedInID = tempPassedInID << 5;
  4792  000E6A  C03A  F047         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4793  000E6E  C03B  F048         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4794  000E72  C03C  F049         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4795  000E76  C03D  F04A         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4796  000E7A  0E05               	movlw	5
  4797  000E7C                     u1195:
  4798  000E7C  90D8               	bcf	status,0,c
  4799  000E7E  3647               	rlcf	??_convertCANid2Reg^0,f,c
  4800  000E80  3648               	rlcf	(??_convertCANid2Reg+1)^0,f,c
  4801  000E82  3649               	rlcf	(??_convertCANid2Reg+2)^0,f,c
  4802  000E84  364A               	rlcf	(??_convertCANid2Reg+3)^0,f,c
  4803  000E86  2EE8               	decfsz	wreg,f,c
  4804  000E88  EF3E  F007         	goto	u1195
  4805  000E8C  C047  F03A         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4806  000E90  C048  F03B         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4807  000E94  C049  F03C         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4808  000E98  C04A  F03D         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4809  000E9C                     
  4810                           ;mcc_generated_files/ecan.c: 492:         *passedInSIDL = 0xFF & tempPassedInID;
  4811  000E9C  C045  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  4812  000EA0  C046  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  4813  000EA4  C03A  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4814  000EA8  EF0A  F007         	goto	l3947
  4815  000EAC                     l554:
  4816  000EAC  0012               	return		;funcret
  4817  000EAE                     __end_of_convertCANid2Reg:
  4818                           	callstack 0
  4819                           
  4820 ;; *************** function _SYSTEM_Initialize *****************
  4821 ;; Defined at:
  4822 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;Total ram usage:        0 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 5
  4843 ;; This function calls:
  4844 ;;		_ECAN_Initialize
  4845 ;;		_EUSART1_Initialize
  4846 ;;		_INTERRUPT_Initialize
  4847 ;;		_OSCILLATOR_Initialize
  4848 ;;		_PIN_MANAGER_Initialize
  4849 ;; This function is called by:
  4850 ;;		_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text21
  4855  001AEE                     __ptext21:
  4856                           	callstack 0
  4857  001AEE                     _SYSTEM_Initialize:
  4858                           	callstack 25
  4859  001AEE                     
  4860                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4861  001AEE  EC9F  F00D         	call	_INTERRUPT_Initialize	;wreg free
  4862  001AF2                     
  4863                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4864  001AF2  ECEC  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  4865  001AF6                     
  4866                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4867  001AF6  EC82  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  4868  001AFA                     
  4869                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  4870  001AFA  ECCD  F00C         	call	_EUSART1_Initialize	;wreg free
  4871  001AFE                     
  4872                           ;mcc_generated_files/mcc.c: 57:     ECAN_Initialize();
  4873  001AFE  ECCB  F005         	call	_ECAN_Initialize	;wreg free
  4874  001B02  0012               	return		;funcret
  4875  001B04                     __end_of_SYSTEM_Initialize:
  4876                           	callstack 0
  4877                           
  4878 ;; *************** function _PIN_MANAGER_Initialize *****************
  4879 ;; Defined at:
  4880 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; Hardware stack levels required when called: 3
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_SYSTEM_Initialize
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text22
  4909  0019D8                     __ptext22:
  4910                           	callstack 0
  4911  0019D8                     _PIN_MANAGER_Initialize:
  4912                           	callstack 26
  4913  0019D8                     
  4914                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4915  0019D8  0E00               	movlw	0
  4916  0019DA  6E8D               	movwf	141,c	;volatile
  4917                           
  4918                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4919  0019DC  0E00               	movlw	0
  4920  0019DE  6E8C               	movwf	140,c	;volatile
  4921                           
  4922                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4923  0019E0  0E00               	movlw	0
  4924  0019E2  6E89               	movwf	137,c	;volatile
  4925                           
  4926                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4927  0019E4  0E00               	movlw	0
  4928  0019E6  6E8A               	movwf	138,c	;volatile
  4929                           
  4930                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4931  0019E8  0E00               	movlw	0
  4932  0019EA  6E8B               	movwf	139,c	;volatile
  4933                           
  4934                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  4935  0019EC  0E07               	movlw	7
  4936  0019EE  6E96               	movwf	150,c	;volatile
  4937                           
  4938                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xCF;
  4939  0019F0  0ECF               	movlw	207
  4940  0019F2  6E92               	movwf	146,c	;volatile
  4941                           
  4942                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFB;
  4943  0019F4  0EFB               	movlw	251
  4944  0019F6  6E93               	movwf	147,c	;volatile
  4945                           
  4946                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  4947  0019F8  0EBF               	movlw	191
  4948  0019FA  6E94               	movwf	148,c	;volatile
  4949  0019FC                     
  4950                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  4951  0019FC  6895               	setf	149,c	;volatile
  4952                           
  4953                           ;mcc_generated_files/pin_manager.c: 78:     ANCON0 = 0xF0;
  4954  0019FE  0EF0               	movlw	240
  4955  001A00  010F               	movlb	15	; () banked
  4956  001A02  6F5D               	movwf	93,b	;volatile
  4957                           
  4958                           ;mcc_generated_files/pin_manager.c: 79:     ANCON1 = 0x67;
  4959  001A04  0E67               	movlw	103
  4960  001A06  6F5C               	movwf	92,b	;volatile
  4961                           
  4962                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  4963  001A08  0E00               	movlw	0
  4964  001A0A  6F5B               	movwf	91,b	;volatile
  4965  001A0C                     
  4966                           ; BSR set to: 15
  4967                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  4968  001A0C  8EF1               	bsf	241,7,c	;volatile
  4969  001A0E                     
  4970                           ; BSR set to: 15
  4971  001A0E  0012               	return		;funcret
  4972  001A10                     __end_of_PIN_MANAGER_Initialize:
  4973                           	callstack 0
  4974                           
  4975 ;; *************** function _OSCILLATOR_Initialize *****************
  4976 ;; Defined at:
  4977 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4995 ;;Total ram usage:        0 bytes
  4996 ;; Hardware stack levels used: 1
  4997 ;; Hardware stack levels required when called: 3
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_SYSTEM_Initialize
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text23
  5006  001B04                     __ptext23:
  5007                           	callstack 0
  5008  001B04                     _OSCILLATOR_Initialize:
  5009                           	callstack 26
  5010  001B04                     
  5011                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  5012  001B04  0E60               	movlw	96
  5013  001B06  6ED3               	movwf	211,c	;volatile
  5014                           
  5015                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
  5016  001B08  0E00               	movlw	0
  5017  001B0A  6ED2               	movwf	210,c	;volatile
  5018                           
  5019                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  5020  001B0C  0E00               	movlw	0
  5021  001B0E  6E9B               	movwf	155,c	;volatile
  5022                           
  5023                           ;mcc_generated_files/mcc.c: 69:     REFOCON = 0x00;
  5024  001B10  0E00               	movlw	0
  5025  001B12  6E9A               	movwf	154,c	;volatile
  5026  001B14  0012               	return		;funcret
  5027  001B16                     __end_of_OSCILLATOR_Initialize:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _INTERRUPT_Initialize *****************
  5031 ;; Defined at:
  5032 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		None
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used: 1
  5052 ;; Hardware stack levels required when called: 3
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_SYSTEM_Initialize
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text24
  5061  001B3E                     __ptext24:
  5062                           	callstack 0
  5063  001B3E                     _INTERRUPT_Initialize:
  5064                           	callstack 26
  5065  001B3E                     
  5066                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5067  001B3E  9ED0               	bcf	208,7,c	;volatile
  5068  001B40  0012               	return		;funcret
  5069  001B42                     __end_of_INTERRUPT_Initialize:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _EUSART1_Initialize *****************
  5073 ;; Defined at:
  5074 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 4
  5095 ;; This function calls:
  5096 ;;		_EUSART1_SetErrorHandler
  5097 ;;		_EUSART1_SetFramingErrorHandler
  5098 ;;		_EUSART1_SetOverrunErrorHandler
  5099 ;; This function is called by:
  5100 ;;		_SYSTEM_Initialize
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text25
  5105  00199A                     __ptext25:
  5106                           	callstack 0
  5107  00199A                     _EUSART1_Initialize:
  5108                           	callstack 25
  5109  00199A                     
  5110                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5111  00199A  0E08               	movlw	8
  5112  00199C  6EA7               	movwf	167,c	;volatile
  5113                           
  5114                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x80;
  5115  00199E  0E80               	movlw	128
  5116  0019A0  6EAB               	movwf	171,c	;volatile
  5117                           
  5118                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5119  0019A2  0E24               	movlw	36
  5120  0019A4  6EAC               	movwf	172,c	;volatile
  5121                           
  5122                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x08;
  5123  0019A6  0E08               	movlw	8
  5124  0019A8  6EAF               	movwf	175,c	;volatile
  5125                           
  5126                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x02;
  5127  0019AA  0E02               	movlw	2
  5128  0019AC  6E7D               	movwf	125,c	;volatile
  5129  0019AE                     
  5130                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5131  0019AE  0E00               	movlw	0
  5132  0019B0  6E3A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5133  0019B2  0E00               	movlw	0
  5134  0019B4  6E3B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5135  0019B6  EC90  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5136  0019BA                     
  5137                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5138  0019BA  0E00               	movlw	0
  5139  0019BC  6E3A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5140  0019BE  0E00               	movlw	0
  5141  0019C0  6E3B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5142  0019C2  EC8B  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5143  0019C6                     
  5144                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5145  0019C6  0E00               	movlw	0
  5146  0019C8  6E3A               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5147  0019CA  0E00               	movlw	0
  5148  0019CC  6E3B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5149  0019CE  EC95  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  5150  0019D2                     
  5151                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5152  0019D2  0E00               	movlw	0
  5153  0019D4  6E1D               	movwf	_eusart1RxLastError^0,c	;volatile
  5154  0019D6  0012               	return		;funcret
  5155  0019D8                     __end_of_EUSART1_Initialize:
  5156                           	callstack 0
  5157                           
  5158 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5159 ;; Defined at:
  5160 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  5163 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg, status,2, status,0
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5179 ;;Total ram usage:        2 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; Hardware stack levels required when called: 3
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_EUSART1_Initialize
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text26
  5190  001B16                     __ptext26:
  5191                           	callstack 0
  5192  001B16                     _EUSART1_SetOverrunErrorHandler:
  5193                           	callstack 25
  5194  001B16                     
  5195                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  5196  001B16  C03A  F056         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5197  001B1A  C03B  F057         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5198  001B1E  0012               	return		;funcret
  5199  001B20                     __end_of_EUSART1_SetOverrunErrorHandler:
  5200                           	callstack 0
  5201                           
  5202 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5203 ;; Defined at:
  5204 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  5207 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		wreg, status,2, status,0
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5222 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;Total ram usage:        2 bytes
  5224 ;; Hardware stack levels used: 1
  5225 ;; Hardware stack levels required when called: 3
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_EUSART1_Initialize
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text27
  5234  001B20                     __ptext27:
  5235                           	callstack 0
  5236  001B20                     _EUSART1_SetFramingErrorHandler:
  5237                           	callstack 25
  5238  001B20                     
  5239                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  5240  001B20  C03A  F058         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5241  001B24  C03B  F059         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5242  001B28  0012               	return		;funcret
  5243  001B2A                     __end_of_EUSART1_SetFramingErrorHandler:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _EUSART1_SetErrorHandler *****************
  5247 ;; Defined at:
  5248 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  5251 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2, status,0
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;Total ram usage:        2 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; Hardware stack levels required when called: 3
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_EUSART1_Initialize
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text28
  5278  001B2A                     __ptext28:
  5279                           	callstack 0
  5280  001B2A                     _EUSART1_SetErrorHandler:
  5281                           	callstack 25
  5282  001B2A                     
  5283                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  5284  001B2A  C03A  F0C6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5285  001B2E  C03B  F0C7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5286  001B32  0012               	return		;funcret
  5287  001B34                     __end_of_EUSART1_SetErrorHandler:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function _ECAN_Initialize *****************
  5291 ;; Defined at:
  5292 ;;		line 65 in file "mcc_generated_files/ecan.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2, status,0, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;Total ram usage:        1 bytes
  5311 ;; Hardware stack levels used: 1
  5312 ;; Hardware stack levels required when called: 4
  5313 ;; This function calls:
  5314 ;;		_ECAN_SetWakeUpInterruptHandler
  5315 ;; This function is called by:
  5316 ;;		_SYSTEM_Initialize
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text29
  5321  000B96                     __ptext29:
  5322                           	callstack 0
  5323  000B96                     _ECAN_Initialize:
  5324                           	callstack 25
  5325  000B96                     
  5326                           ;mcc_generated_files/ecan.c: 67:     CANCON = 0x80;
  5327  000B96  0E80               	movlw	128
  5328  000B98  6E6F               	movwf	111,c	;volatile
  5329  000B9A                     l3981:
  5330  000B9A  506E               	movf	110,w,c	;volatile
  5331  000B9C  0BE0               	andlw	224
  5332  000B9E  0A80               	xorlw	128
  5333  000BA0  A4D8               	btfss	status,2,c
  5334  000BA2  EFD5  F005         	goto	u1201
  5335  000BA6  EFD7  F005         	goto	u1200
  5336  000BAA                     u1201:
  5337  000BAA  EFCD  F005         	goto	l3981
  5338  000BAE                     u1200:
  5339  000BAE                     
  5340                           ;mcc_generated_files/ecan.c: 73:     ECANCON = 0x40;
  5341  000BAE  0E40               	movlw	64
  5342  000BB0  6E72               	movwf	114,c	;volatile
  5343                           
  5344                           ;mcc_generated_files/ecan.c: 78:     CIOCON = 0x20;
  5345  000BB2  0E20               	movlw	32
  5346  000BB4  6E70               	movwf	112,c	;volatile
  5347                           
  5348                           ;mcc_generated_files/ecan.c: 92:     BSEL0 = 0x00;
  5349  000BB6  0E00               	movlw	0
  5350  000BB8  010E               	movlb	14	; () banked
  5351  000BBA  6F7D               	movwf	125,b	;volatile
  5352  000BBC                     
  5353                           ; BSR set to: 14
  5354                           ;mcc_generated_files/ecan.c: 97:     RXM0EIDH = 0xFF;
  5355  000BBC  69FA               	setf	250,b	;volatile
  5356  000BBE                     
  5357                           ; BSR set to: 14
  5358                           ;mcc_generated_files/ecan.c: 98:     RXM0EIDL = 0xFF;
  5359  000BBE  69FB               	setf	251,b	;volatile
  5360  000BC0                     
  5361                           ; BSR set to: 14
  5362                           ;mcc_generated_files/ecan.c: 99:     RXM0SIDH = 0xFF;
  5363  000BC0  69F8               	setf	248,b	;volatile
  5364                           
  5365                           ;mcc_generated_files/ecan.c: 100:     RXM0SIDL = 0xE3;
  5366  000BC2  0EE3               	movlw	227
  5367  000BC4  6FF9               	movwf	249,b	;volatile
  5368  000BC6                     
  5369                           ; BSR set to: 14
  5370                           ;mcc_generated_files/ecan.c: 101:     RXM1EIDH = 0xFF;
  5371  000BC6  69FE               	setf	254,b	;volatile
  5372  000BC8                     
  5373                           ; BSR set to: 14
  5374                           ;mcc_generated_files/ecan.c: 102:     RXM1EIDL = 0xFF;
  5375  000BC8  69FF               	setf	255,b	;volatile
  5376  000BCA                     
  5377                           ; BSR set to: 14
  5378                           ;mcc_generated_files/ecan.c: 103:     RXM1SIDH = 0xFF;
  5379  000BCA  69FC               	setf	252,b	;volatile
  5380                           
  5381                           ;mcc_generated_files/ecan.c: 104:     RXM1SIDL = 0xE3;
  5382  000BCC  0EE3               	movlw	227
  5383  000BCE  6FFD               	movwf	253,b	;volatile
  5384                           
  5385                           ;mcc_generated_files/ecan.c: 109:     RXFCON0 = 0x01;
  5386  000BD0  0E01               	movlw	1
  5387  000BD2  6F46               	movwf	70,b	;volatile
  5388                           
  5389                           ;mcc_generated_files/ecan.c: 110:     RXFCON1 = 0x00;
  5390  000BD4  0E00               	movlw	0
  5391  000BD6  6F47               	movwf	71,b	;volatile
  5392                           
  5393                           ;mcc_generated_files/ecan.c: 114:     MSEL0 = 0x00;
  5394  000BD8  0E00               	movlw	0
  5395  000BDA  6F79               	movwf	121,b	;volatile
  5396                           
  5397                           ;mcc_generated_files/ecan.c: 115:     MSEL1 = 0x00;
  5398  000BDC  0E00               	movlw	0
  5399  000BDE  6F7A               	movwf	122,b	;volatile
  5400                           
  5401                           ;mcc_generated_files/ecan.c: 116:     MSEL2 = 0x00;
  5402  000BE0  0E00               	movlw	0
  5403  000BE2  6F7B               	movwf	123,b	;volatile
  5404                           
  5405                           ;mcc_generated_files/ecan.c: 117:     MSEL3 = 0x00;
  5406  000BE4  0E00               	movlw	0
  5407  000BE6  6F7C               	movwf	124,b	;volatile
  5408                           
  5409                           ;mcc_generated_files/ecan.c: 122:     RXFBCON0 = 0x00;
  5410  000BE8  0E00               	movlw	0
  5411  000BEA  6F71               	movwf	113,b	;volatile
  5412                           
  5413                           ;mcc_generated_files/ecan.c: 123:     RXFBCON1 = 0x00;
  5414  000BEC  0E00               	movlw	0
  5415  000BEE  6F72               	movwf	114,b	;volatile
  5416                           
  5417                           ;mcc_generated_files/ecan.c: 124:     RXFBCON2 = 0x00;
  5418  000BF0  0E00               	movlw	0
  5419  000BF2  6F73               	movwf	115,b	;volatile
  5420                           
  5421                           ;mcc_generated_files/ecan.c: 125:     RXFBCON3 = 0x00;
  5422  000BF4  0E00               	movlw	0
  5423  000BF6  6F74               	movwf	116,b	;volatile
  5424                           
  5425                           ;mcc_generated_files/ecan.c: 126:     RXFBCON4 = 0x00;
  5426  000BF8  0E00               	movlw	0
  5427  000BFA  6F75               	movwf	117,b	;volatile
  5428                           
  5429                           ;mcc_generated_files/ecan.c: 127:     RXFBCON5 = 0x00;
  5430  000BFC  0E00               	movlw	0
  5431  000BFE  6F76               	movwf	118,b	;volatile
  5432                           
  5433                           ;mcc_generated_files/ecan.c: 128:     RXFBCON6 = 0x00;
  5434  000C00  0E00               	movlw	0
  5435  000C02  6F77               	movwf	119,b	;volatile
  5436                           
  5437                           ;mcc_generated_files/ecan.c: 129:     RXFBCON7 = 0x00;
  5438  000C04  0E00               	movlw	0
  5439  000C06  6F78               	movwf	120,b	;volatile
  5440                           
  5441                           ;mcc_generated_files/ecan.c: 134:     RXF0EIDH = 0x00;
  5442  000C08  0E00               	movlw	0
  5443  000C0A  6FE2               	movwf	226,b	;volatile
  5444                           
  5445                           ;mcc_generated_files/ecan.c: 135:     RXF0EIDL = 0x00;
  5446  000C0C  0E00               	movlw	0
  5447  000C0E  6FE3               	movwf	227,b	;volatile
  5448                           
  5449                           ;mcc_generated_files/ecan.c: 136:     RXF0SIDH = 0x02;
  5450  000C10  0E02               	movlw	2
  5451  000C12  6FE0               	movwf	224,b	;volatile
  5452                           
  5453                           ;mcc_generated_files/ecan.c: 137:     RXF0SIDL = 0xC0;
  5454  000C14  0EC0               	movlw	192
  5455  000C16  6FE1               	movwf	225,b	;volatile
  5456                           
  5457                           ;mcc_generated_files/ecan.c: 138:     RXF1EIDH = 0x00;
  5458  000C18  0E00               	movlw	0
  5459  000C1A  6FE6               	movwf	230,b	;volatile
  5460                           
  5461                           ;mcc_generated_files/ecan.c: 139:     RXF1EIDL = 0x00;
  5462  000C1C  0E00               	movlw	0
  5463  000C1E  6FE7               	movwf	231,b	;volatile
  5464                           
  5465                           ;mcc_generated_files/ecan.c: 140:     RXF1SIDH = 0x00;
  5466  000C20  0E00               	movlw	0
  5467  000C22  6FE4               	movwf	228,b	;volatile
  5468                           
  5469                           ;mcc_generated_files/ecan.c: 141:     RXF1SIDL = 0x00;
  5470  000C24  0E00               	movlw	0
  5471  000C26  6FE5               	movwf	229,b	;volatile
  5472                           
  5473                           ;mcc_generated_files/ecan.c: 142:     RXF2EIDH = 0x00;
  5474  000C28  0E00               	movlw	0
  5475  000C2A  6FEA               	movwf	234,b	;volatile
  5476                           
  5477                           ;mcc_generated_files/ecan.c: 143:     RXF2EIDL = 0x00;
  5478  000C2C  0E00               	movlw	0
  5479  000C2E  6FEB               	movwf	235,b	;volatile
  5480                           
  5481                           ;mcc_generated_files/ecan.c: 144:     RXF2SIDH = 0x00;
  5482  000C30  0E00               	movlw	0
  5483  000C32  6FE8               	movwf	232,b	;volatile
  5484                           
  5485                           ;mcc_generated_files/ecan.c: 145:     RXF2SIDL = 0x00;
  5486  000C34  0E00               	movlw	0
  5487  000C36  6FE9               	movwf	233,b	;volatile
  5488                           
  5489                           ;mcc_generated_files/ecan.c: 146:     RXF3EIDH = 0x00;
  5490  000C38  0E00               	movlw	0
  5491  000C3A  6FEE               	movwf	238,b	;volatile
  5492                           
  5493                           ;mcc_generated_files/ecan.c: 147:     RXF3EIDL = 0x00;
  5494  000C3C  0E00               	movlw	0
  5495  000C3E  6FEF               	movwf	239,b	;volatile
  5496                           
  5497                           ;mcc_generated_files/ecan.c: 148:     RXF3SIDH = 0x00;
  5498  000C40  0E00               	movlw	0
  5499  000C42  6FEC               	movwf	236,b	;volatile
  5500                           
  5501                           ;mcc_generated_files/ecan.c: 149:     RXF3SIDL = 0x00;
  5502  000C44  0E00               	movlw	0
  5503  000C46  6FED               	movwf	237,b	;volatile
  5504                           
  5505                           ;mcc_generated_files/ecan.c: 150:     RXF4EIDH = 0x00;
  5506  000C48  0E00               	movlw	0
  5507  000C4A  6FF2               	movwf	242,b	;volatile
  5508                           
  5509                           ;mcc_generated_files/ecan.c: 151:     RXF4EIDL = 0x00;
  5510  000C4C  0E00               	movlw	0
  5511  000C4E  6FF3               	movwf	243,b	;volatile
  5512                           
  5513                           ;mcc_generated_files/ecan.c: 152:     RXF4SIDH = 0x00;
  5514  000C50  0E00               	movlw	0
  5515  000C52  6FF0               	movwf	240,b	;volatile
  5516                           
  5517                           ;mcc_generated_files/ecan.c: 153:     RXF4SIDL = 0x00;
  5518  000C54  0E00               	movlw	0
  5519  000C56  6FF1               	movwf	241,b	;volatile
  5520                           
  5521                           ;mcc_generated_files/ecan.c: 154:     RXF5EIDH = 0x00;
  5522  000C58  0E00               	movlw	0
  5523  000C5A  6FF6               	movwf	246,b	;volatile
  5524                           
  5525                           ;mcc_generated_files/ecan.c: 155:     RXF5EIDL = 0x00;
  5526  000C5C  0E00               	movlw	0
  5527  000C5E  6FF7               	movwf	247,b	;volatile
  5528                           
  5529                           ;mcc_generated_files/ecan.c: 156:     RXF5SIDH = 0x00;
  5530  000C60  0E00               	movlw	0
  5531  000C62  6FF4               	movwf	244,b	;volatile
  5532                           
  5533                           ;mcc_generated_files/ecan.c: 157:     RXF5SIDL = 0x00;
  5534  000C64  0E00               	movlw	0
  5535  000C66  6FF5               	movwf	245,b	;volatile
  5536                           
  5537                           ;mcc_generated_files/ecan.c: 159:     RXF6EIDH = 0x00;
  5538  000C68  0E00               	movlw	0
  5539  000C6A  6F4A               	movwf	74,b	;volatile
  5540                           
  5541                           ;mcc_generated_files/ecan.c: 160:     RXF6EIDL = 0x00;
  5542  000C6C  0E00               	movlw	0
  5543  000C6E  6F4B               	movwf	75,b	;volatile
  5544                           
  5545                           ;mcc_generated_files/ecan.c: 161:     RXF6SIDH = 0x00;
  5546  000C70  0E00               	movlw	0
  5547  000C72  6F48               	movwf	72,b	;volatile
  5548                           
  5549                           ;mcc_generated_files/ecan.c: 162:     RXF6SIDL = 0x00;
  5550  000C74  0E00               	movlw	0
  5551  000C76  6F49               	movwf	73,b	;volatile
  5552                           
  5553                           ;mcc_generated_files/ecan.c: 163:     RXF7EIDH = 0x00;
  5554  000C78  0E00               	movlw	0
  5555  000C7A  6F4E               	movwf	78,b	;volatile
  5556                           
  5557                           ;mcc_generated_files/ecan.c: 164:     RXF7EIDL = 0x00;
  5558  000C7C  0E00               	movlw	0
  5559  000C7E  6F4F               	movwf	79,b	;volatile
  5560                           
  5561                           ;mcc_generated_files/ecan.c: 165:     RXF7SIDH = 0x00;
  5562  000C80  0E00               	movlw	0
  5563  000C82  6F4C               	movwf	76,b	;volatile
  5564                           
  5565                           ;mcc_generated_files/ecan.c: 166:     RXF7SIDL = 0x00;
  5566  000C84  0E00               	movlw	0
  5567  000C86  6F4D               	movwf	77,b	;volatile
  5568                           
  5569                           ;mcc_generated_files/ecan.c: 167:     RXF8EIDH = 0x00;
  5570  000C88  0E00               	movlw	0
  5571  000C8A  6F52               	movwf	82,b	;volatile
  5572                           
  5573                           ;mcc_generated_files/ecan.c: 168:     RXF8EIDL = 0x00;
  5574  000C8C  0E00               	movlw	0
  5575  000C8E  6F53               	movwf	83,b	;volatile
  5576                           
  5577                           ;mcc_generated_files/ecan.c: 169:     RXF8SIDH = 0x00;
  5578  000C90  0E00               	movlw	0
  5579  000C92  6F50               	movwf	80,b	;volatile
  5580                           
  5581                           ;mcc_generated_files/ecan.c: 170:     RXF8SIDL = 0x00;
  5582  000C94  0E00               	movlw	0
  5583  000C96  6F51               	movwf	81,b	;volatile
  5584                           
  5585                           ;mcc_generated_files/ecan.c: 171:     RXF9EIDH = 0x00;
  5586  000C98  0E00               	movlw	0
  5587  000C9A  6F56               	movwf	86,b	;volatile
  5588                           
  5589                           ;mcc_generated_files/ecan.c: 172:     RXF9EIDL = 0x00;
  5590  000C9C  0E00               	movlw	0
  5591  000C9E  6F57               	movwf	87,b	;volatile
  5592                           
  5593                           ;mcc_generated_files/ecan.c: 173:     RXF9SIDH = 0x00;
  5594  000CA0  0E00               	movlw	0
  5595  000CA2  6F54               	movwf	84,b	;volatile
  5596                           
  5597                           ;mcc_generated_files/ecan.c: 174:     RXF9SIDL = 0x00;
  5598  000CA4  0E00               	movlw	0
  5599  000CA6  6F55               	movwf	85,b	;volatile
  5600                           
  5601                           ;mcc_generated_files/ecan.c: 175:     RXF10EIDH = 0x00;
  5602  000CA8  0E00               	movlw	0
  5603  000CAA  6F5A               	movwf	90,b	;volatile
  5604                           
  5605                           ;mcc_generated_files/ecan.c: 176:     RXF10EIDL = 0x00;
  5606  000CAC  0E00               	movlw	0
  5607  000CAE  6F5B               	movwf	91,b	;volatile
  5608                           
  5609                           ;mcc_generated_files/ecan.c: 177:     RXF10SIDH = 0x00;
  5610  000CB0  0E00               	movlw	0
  5611  000CB2  6F58               	movwf	88,b	;volatile
  5612                           
  5613                           ;mcc_generated_files/ecan.c: 178:     RXF10SIDL = 0x00;
  5614  000CB4  0E00               	movlw	0
  5615  000CB6  6F59               	movwf	89,b	;volatile
  5616                           
  5617                           ;mcc_generated_files/ecan.c: 179:     RXF11EIDH = 0x00;
  5618  000CB8  0E00               	movlw	0
  5619  000CBA  6F5E               	movwf	94,b	;volatile
  5620                           
  5621                           ;mcc_generated_files/ecan.c: 180:     RXF11EIDL = 0x00;
  5622  000CBC  0E00               	movlw	0
  5623  000CBE  6F5F               	movwf	95,b	;volatile
  5624                           
  5625                           ;mcc_generated_files/ecan.c: 181:     RXF11SIDH = 0x00;
  5626  000CC0  0E00               	movlw	0
  5627  000CC2  6F5C               	movwf	92,b	;volatile
  5628                           
  5629                           ;mcc_generated_files/ecan.c: 182:     RXF11SIDL = 0x00;
  5630  000CC4  0E00               	movlw	0
  5631  000CC6  6F5D               	movwf	93,b	;volatile
  5632                           
  5633                           ;mcc_generated_files/ecan.c: 183:     RXF12EIDH = 0x00;
  5634  000CC8  0E00               	movlw	0
  5635  000CCA  6F62               	movwf	98,b	;volatile
  5636                           
  5637                           ;mcc_generated_files/ecan.c: 184:     RXF12EIDL = 0x00;
  5638  000CCC  0E00               	movlw	0
  5639  000CCE  6F63               	movwf	99,b	;volatile
  5640                           
  5641                           ;mcc_generated_files/ecan.c: 185:     RXF12SIDH = 0x00;
  5642  000CD0  0E00               	movlw	0
  5643  000CD2  6F60               	movwf	96,b	;volatile
  5644                           
  5645                           ;mcc_generated_files/ecan.c: 186:     RXF12SIDL = 0x00;
  5646  000CD4  0E00               	movlw	0
  5647  000CD6  6F61               	movwf	97,b	;volatile
  5648                           
  5649                           ;mcc_generated_files/ecan.c: 187:     RXF13EIDH = 0x00;
  5650  000CD8  0E00               	movlw	0
  5651  000CDA  6F66               	movwf	102,b	;volatile
  5652                           
  5653                           ;mcc_generated_files/ecan.c: 188:     RXF13EIDL = 0x00;
  5654  000CDC  0E00               	movlw	0
  5655  000CDE  6F67               	movwf	103,b	;volatile
  5656                           
  5657                           ;mcc_generated_files/ecan.c: 189:     RXF13SIDH = 0x00;
  5658  000CE0  0E00               	movlw	0
  5659  000CE2  6F64               	movwf	100,b	;volatile
  5660                           
  5661                           ;mcc_generated_files/ecan.c: 190:     RXF13SIDL = 0x00;
  5662  000CE4  0E00               	movlw	0
  5663  000CE6  6F65               	movwf	101,b	;volatile
  5664                           
  5665                           ;mcc_generated_files/ecan.c: 191:     RXF14EIDH = 0x00;
  5666  000CE8  0E00               	movlw	0
  5667  000CEA  6F6A               	movwf	106,b	;volatile
  5668                           
  5669                           ;mcc_generated_files/ecan.c: 192:     RXF14EIDL = 0x00;
  5670  000CEC  0E00               	movlw	0
  5671  000CEE  6F6B               	movwf	107,b	;volatile
  5672                           
  5673                           ;mcc_generated_files/ecan.c: 193:     RXF14SIDH = 0x00;
  5674  000CF0  0E00               	movlw	0
  5675  000CF2  6F68               	movwf	104,b	;volatile
  5676                           
  5677                           ;mcc_generated_files/ecan.c: 194:     RXF14SIDL = 0x00;
  5678  000CF4  0E00               	movlw	0
  5679  000CF6  6F69               	movwf	105,b	;volatile
  5680  000CF8                     
  5681                           ; BSR set to: 14
  5682                           ;mcc_generated_files/ecan.c: 195:     RXF15EIDH = 0xFF;
  5683  000CF8  696E               	setf	110,b	;volatile
  5684  000CFA                     
  5685                           ; BSR set to: 14
  5686                           ;mcc_generated_files/ecan.c: 196:     RXF15EIDL = 0xFF;
  5687  000CFA  696F               	setf	111,b	;volatile
  5688  000CFC                     
  5689                           ; BSR set to: 14
  5690                           ;mcc_generated_files/ecan.c: 197:     RXF15SIDH = 0xFF;
  5691  000CFC  696C               	setf	108,b	;volatile
  5692                           
  5693                           ;mcc_generated_files/ecan.c: 198:     RXF15SIDL = 0xE3;
  5694  000CFE  0EE3               	movlw	227
  5695  000D00  6F6D               	movwf	109,b	;volatile
  5696                           
  5697                           ;mcc_generated_files/ecan.c: 213:     BRGCON1 = 0x13;
  5698  000D02  0E13               	movlw	19
  5699  000D04  6F43               	movwf	67,b	;volatile
  5700                           
  5701                           ;mcc_generated_files/ecan.c: 214:     BRGCON2 = 0xA8;
  5702  000D06  0EA8               	movlw	168
  5703  000D08  6F44               	movwf	68,b	;volatile
  5704                           
  5705                           ;mcc_generated_files/ecan.c: 215:     BRGCON3 = 0x01;
  5706  000D0A  0E01               	movlw	1
  5707  000D0C  6F45               	movwf	69,b	;volatile
  5708  000D0E                     
  5709                           ; BSR set to: 14
  5710                           ;mcc_generated_files/ecan.c: 217:     ECAN_SetWakeUpInterruptHandler(WakeUpDefaultInterr
      +                          uptHandler);
  5711  000D0E  0E42               	movlw	low _WakeUpDefaultInterruptHandler
  5712  000D10  6E3A               	movwf	ECAN_SetWakeUpInterruptHandler@handler^0,c
  5713  000D12  0E1B               	movlw	high _WakeUpDefaultInterruptHandler
  5714  000D14  6E3B               	movwf	(ECAN_SetWakeUpInterruptHandler@handler+1)^0,c
  5715  000D16  EC9A  F00D         	call	_ECAN_SetWakeUpInterruptHandler	;wreg free
  5716  000D1A                     
  5717                           ;mcc_generated_files/ecan.c: 218:     PIR5bits.WAKIF = 0;
  5718  000D1A  9C77               	bcf	119,6,c	;volatile
  5719  000D1C                     
  5720                           ;mcc_generated_files/ecan.c: 219:     PIE5bits.WAKIE = 1;
  5721  000D1C  8C76               	bsf	118,6,c	;volatile
  5722  000D1E                     
  5723                           ;mcc_generated_files/ecan.c: 221:     CANCON = 0x00;
  5724  000D1E  0E00               	movlw	0
  5725  000D20  6E6F               	movwf	111,c	;volatile
  5726  000D22                     l4011:
  5727  000D22  CF6E F03C          	movff	3950,??_ECAN_Initialize	;volatile
  5728  000D26  0EE0               	movlw	224
  5729  000D28  163C               	andwf	??_ECAN_Initialize^0,f,c
  5730  000D2A  A4D8               	btfss	status,2,c
  5731  000D2C  EF9A  F006         	goto	u1211
  5732  000D30  EF9C  F006         	goto	u1210
  5733  000D34                     u1211:
  5734  000D34  EF91  F006         	goto	l4011
  5735  000D38                     u1210:
  5736  000D38  0012               	return		;funcret
  5737  000D3A                     __end_of_ECAN_Initialize:
  5738                           	callstack 0
  5739                           
  5740 ;; *************** function _ECAN_SetWakeUpInterruptHandler *****************
  5741 ;; Defined at:
  5742 ;;		line 498 in file "mcc_generated_files/ecan.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  handler         2    2[COMRAM] PTR FTN()void 
  5745 ;;		 -> WakeUpDefaultInterruptHandler(1), 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;Total ram usage:        2 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 3
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_ECAN_Initialize
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text30
  5772  001B34                     __ptext30:
  5773                           	callstack 0
  5774  001B34                     _ECAN_SetWakeUpInterruptHandler:
  5775                           	callstack 25
  5776  001B34                     
  5777                           ;mcc_generated_files/ecan.c: 498: void ECAN_SetWakeUpInterruptHandler(void (*handler)(vo
      +                          id));mcc_generated_files/ecan.c: 499: {;mcc_generated_files/ecan.c: 500:     WakeUpInter
      +                          ruptHandler = handler;
  5778  001B34  C03A  F01B         	movff	ECAN_SetWakeUpInterruptHandler@handler,_WakeUpInterruptHandler
  5779  001B38  C03B  F01C         	movff	ECAN_SetWakeUpInterruptHandler@handler+1,_WakeUpInterruptHandler+1
  5780  001B3C  0012               	return		;funcret
  5781  001B3E                     __end_of_ECAN_SetWakeUpInterruptHandler:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _CAN_receive *****************
  5785 ;; Defined at:
  5786 ;;		line 313 in file "mcc_generated_files/ecan.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  tempCanMsg      2   21[COMRAM] PTR struct .
  5789 ;;		 -> rx(14), 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  returnValue     1   23[COMRAM] unsigned char 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      unsigned char 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5804 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5805 ;;Total ram usage:        3 bytes
  5806 ;; Hardware stack levels used: 1
  5807 ;; Hardware stack levels required when called: 4
  5808 ;; This function calls:
  5809 ;;		_convertReg2ExtendedCANid
  5810 ;;		_convertReg2StandardCANid
  5811 ;; This function is called by:
  5812 ;;		_main
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text31
  5817  000942                     __ptext31:
  5818                           	callstack 0
  5819  000942                     _CAN_receive:
  5820                           	callstack 26
  5821  000942                     
  5822                           ;mcc_generated_files/ecan.c: 313: uint8_t CAN_receive(uCAN_MSG *tempCanMsg);mcc_generate
      +                          d_files/ecan.c: 314: {;mcc_generated_files/ecan.c: 315:     uint8_t returnValue = 0;
  5823  000942  0E00               	movlw	0
  5824  000944  6E4F               	movwf	CAN_receive@returnValue^0,c
  5825  000946                     
  5826                           ;mcc_generated_files/ecan.c: 318:     if (RXB0CONbits.RXFUL != 0)
  5827  000946  AE60               	btfss	96,7,c	;volatile
  5828  000948  EFA8  F004         	goto	u1271
  5829  00094C  EFAA  F004         	goto	u1270
  5830  000950                     u1271:
  5831  000950  EF36  F005         	goto	l519
  5832  000954                     u1270:
  5833  000954                     
  5834                           ;mcc_generated_files/ecan.c: 319:     {;mcc_generated_files/ecan.c: 320:         if ((RX
      +                          B0SIDL & 0x08) == 0x08)
  5835  000954  A662               	btfss	98,3,c	;volatile
  5836  000956  EFAF  F004         	goto	u1281
  5837  00095A  EFB1  F004         	goto	u1280
  5838  00095E                     u1281:
  5839  00095E  EFD0  F004         	goto	l4423
  5840  000962                     u1280:
  5841  000962                     
  5842                           ;mcc_generated_files/ecan.c: 321:         {;mcc_generated_files/ecan.c: 323:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  5843  000962  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5844  000966  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5845  00096A  0E02               	movlw	2
  5846  00096C  6EDF               	movwf	indf2,c
  5847  00096E                     
  5848                           ;mcc_generated_files/ecan.c: 324:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
  5849  00096E  CF64 F03A          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  5850  000972  CF61 F03B          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  5851  000976  CF62 F03C          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  5852  00097A  5063               	movf	99,w,c	;volatile
  5853  00097C  EC57  F007         	call	_convertReg2ExtendedCANid
  5854  000980  EE20 F001          	lfsr	2,1
  5855  000984  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5856  000986  26D9               	addwf	fsr2l,f,c
  5857  000988  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5858  00098A  22DA               	addwfc	fsr2h,f,c
  5859  00098C  C03A  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  5860  000990  C03B  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  5861  000994  C03C  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  5862  000998  C03D  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  5863                           
  5864                           ;mcc_generated_files/ecan.c: 325:         }
  5865  00099C  EFE9  F004         	goto	l4427
  5866  0009A0                     l4423:
  5867                           
  5868                           ;mcc_generated_files/ecan.c: 327:         {;mcc_generated_files/ecan.c: 329:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  5869  0009A0  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5870  0009A4  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5871  0009A8  0E01               	movlw	1
  5872  0009AA  6EDF               	movwf	indf2,c
  5873  0009AC                     
  5874                           ;mcc_generated_files/ecan.c: 330:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB0SIDH, RXB0SIDL);
  5875  0009AC  CF62 F03A          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  5876  0009B0  5061               	movf	97,w,c	;volatile
  5877  0009B2  EC91  F00C         	call	_convertReg2StandardCANid
  5878  0009B6  EE20 F001          	lfsr	2,1
  5879  0009BA  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5880  0009BC  26D9               	addwf	fsr2l,f,c
  5881  0009BE  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5882  0009C0  22DA               	addwfc	fsr2h,f,c
  5883  0009C2  C03A  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  5884  0009C6  C03B  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  5885  0009CA  C03C  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  5886  0009CE  C03D  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  5887  0009D2                     l4427:
  5888                           
  5889                           ;mcc_generated_files/ecan.c: 333:         tempCanMsg->frame.dlc = RXB0DLC;
  5890  0009D2  EE20 F005          	lfsr	2,5
  5891  0009D6  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5892  0009D8  26D9               	addwf	fsr2l,f,c
  5893  0009DA  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5894  0009DC  22DA               	addwfc	fsr2h,f,c
  5895  0009DE  CF65 FFDF          	movff	3941,indf2	;volatile
  5896  0009E2                     
  5897                           ;mcc_generated_files/ecan.c: 334:         tempCanMsg->frame.data0 = RXB0D0;
  5898  0009E2  EE20 F006          	lfsr	2,6
  5899  0009E6  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5900  0009E8  26D9               	addwf	fsr2l,f,c
  5901  0009EA  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5902  0009EC  22DA               	addwfc	fsr2h,f,c
  5903  0009EE  CF66 FFDF          	movff	3942,indf2	;volatile
  5904  0009F2                     
  5905                           ;mcc_generated_files/ecan.c: 335:         tempCanMsg->frame.data1 = RXB0D1;
  5906  0009F2  EE20 F007          	lfsr	2,7
  5907  0009F6  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5908  0009F8  26D9               	addwf	fsr2l,f,c
  5909  0009FA  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5910  0009FC  22DA               	addwfc	fsr2h,f,c
  5911  0009FE  CF67 FFDF          	movff	3943,indf2	;volatile
  5912  000A02                     
  5913                           ;mcc_generated_files/ecan.c: 336:         tempCanMsg->frame.data2 = RXB0D2;
  5914  000A02  EE20 F008          	lfsr	2,8
  5915  000A06  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5916  000A08  26D9               	addwf	fsr2l,f,c
  5917  000A0A  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5918  000A0C  22DA               	addwfc	fsr2h,f,c
  5919  000A0E  CF68 FFDF          	movff	3944,indf2	;volatile
  5920  000A12                     
  5921                           ;mcc_generated_files/ecan.c: 337:         tempCanMsg->frame.data3 = RXB0D3;
  5922  000A12  EE20 F009          	lfsr	2,9
  5923  000A16  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5924  000A18  26D9               	addwf	fsr2l,f,c
  5925  000A1A  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5926  000A1C  22DA               	addwfc	fsr2h,f,c
  5927  000A1E  CF69 FFDF          	movff	3945,indf2	;volatile
  5928  000A22                     
  5929                           ;mcc_generated_files/ecan.c: 338:         tempCanMsg->frame.data4 = RXB0D4;
  5930  000A22  EE20 F00A          	lfsr	2,10
  5931  000A26  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5932  000A28  26D9               	addwf	fsr2l,f,c
  5933  000A2A  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5934  000A2C  22DA               	addwfc	fsr2h,f,c
  5935  000A2E  CF6A FFDF          	movff	3946,indf2	;volatile
  5936  000A32                     
  5937                           ;mcc_generated_files/ecan.c: 339:         tempCanMsg->frame.data5 = RXB0D5;
  5938  000A32  EE20 F00B          	lfsr	2,11
  5939  000A36  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5940  000A38  26D9               	addwf	fsr2l,f,c
  5941  000A3A  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5942  000A3C  22DA               	addwfc	fsr2h,f,c
  5943  000A3E  CF6B FFDF          	movff	3947,indf2	;volatile
  5944  000A42                     
  5945                           ;mcc_generated_files/ecan.c: 340:         tempCanMsg->frame.data6 = RXB0D6;
  5946  000A42  EE20 F00C          	lfsr	2,12
  5947  000A46  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5948  000A48  26D9               	addwf	fsr2l,f,c
  5949  000A4A  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5950  000A4C  22DA               	addwfc	fsr2h,f,c
  5951  000A4E  CF6C FFDF          	movff	3948,indf2	;volatile
  5952  000A52                     
  5953                           ;mcc_generated_files/ecan.c: 341:         tempCanMsg->frame.data7 = RXB0D7;
  5954  000A52  EE20 F00D          	lfsr	2,13
  5955  000A56  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  5956  000A58  26D9               	addwf	fsr2l,f,c
  5957  000A5A  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  5958  000A5C  22DA               	addwfc	fsr2h,f,c
  5959  000A5E  CF6D FFDF          	movff	3949,indf2	;volatile
  5960  000A62                     
  5961                           ;mcc_generated_files/ecan.c: 342:         RXB0CONbits.RXFUL = 0;
  5962  000A62  9E60               	bcf	96,7,c	;volatile
  5963  000A64                     l4447:
  5964                           
  5965                           ;mcc_generated_files/ecan.c: 343:         returnValue = 1;
  5966  000A64  0E01               	movlw	1
  5967  000A66  6E4F               	movwf	CAN_receive@returnValue^0,c
  5968                           
  5969                           ;mcc_generated_files/ecan.c: 344:     }
  5970  000A68  EFC9  F005         	goto	l4481
  5971  000A6C                     l519:
  5972  000A6C  010F               	movlb	15	; () banked
  5973  000A6E  AF30               	btfss	48,7,b	;volatile
  5974  000A70  EF3C  F005         	goto	u1291
  5975  000A74  EF3E  F005         	goto	u1290
  5976  000A78                     u1291:
  5977  000A78  EFC9  F005         	goto	l4481
  5978  000A7C                     u1290:
  5979  000A7C                     
  5980                           ; BSR set to: 15
  5981                           ;mcc_generated_files/ecan.c: 346:     {;mcc_generated_files/ecan.c: 347:         if ((RX
      +                          B1SIDL & 0x08) == 0x08)
  5982  000A7C  A732               	btfss	50,3,b	;volatile
  5983  000A7E  EF43  F005         	goto	u1301
  5984  000A82  EF45  F005         	goto	u1300
  5985  000A86                     u1301:
  5986  000A86  EF64  F005         	goto	l4455
  5987  000A8A                     u1300:
  5988  000A8A                     
  5989                           ; BSR set to: 15
  5990                           ;mcc_generated_files/ecan.c: 348:         {;mcc_generated_files/ecan.c: 350:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  5991  000A8A  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  5992  000A8E  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  5993  000A92  0E02               	movlw	2
  5994  000A94  6EDF               	movwf	indf2,c
  5995  000A96                     
  5996                           ; BSR set to: 15
  5997                           ;mcc_generated_files/ecan.c: 351:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
  5998  000A96  CF34 F03A          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  5999  000A9A  CF31 F03B          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  6000  000A9E  CF32 F03C          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  6001  000AA2  5133               	movf	51,w,b	;volatile
  6002  000AA4  EC57  F007         	call	_convertReg2ExtendedCANid
  6003  000AA8  EE20 F001          	lfsr	2,1
  6004  000AAC  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6005  000AAE  26D9               	addwf	fsr2l,f,c
  6006  000AB0  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6007  000AB2  22DA               	addwfc	fsr2h,f,c
  6008  000AB4  C03A  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  6009  000AB8  C03B  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  6010  000ABC  C03C  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  6011  000AC0  C03D  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  6012                           
  6013                           ;mcc_generated_files/ecan.c: 352:         }
  6014  000AC4  EF7D  F005         	goto	l4459
  6015  000AC8                     l4455:
  6016                           
  6017                           ; BSR set to: 15
  6018                           ;mcc_generated_files/ecan.c: 354:         {;mcc_generated_files/ecan.c: 356:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  6019  000AC8  C04D  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  6020  000ACC  C04E  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  6021  000AD0  0E01               	movlw	1
  6022  000AD2  6EDF               	movwf	indf2,c
  6023  000AD4                     
  6024                           ; BSR set to: 15
  6025                           ;mcc_generated_files/ecan.c: 357:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB1SIDH, RXB1SIDL);
  6026  000AD4  CF32 F03A          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  6027  000AD8  5131               	movf	49,w,b	;volatile
  6028  000ADA  EC91  F00C         	call	_convertReg2StandardCANid
  6029  000ADE  EE20 F001          	lfsr	2,1
  6030  000AE2  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6031  000AE4  26D9               	addwf	fsr2l,f,c
  6032  000AE6  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6033  000AE8  22DA               	addwfc	fsr2h,f,c
  6034  000AEA  C03A  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  6035  000AEE  C03B  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  6036  000AF2  C03C  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  6037  000AF6  C03D  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  6038  000AFA                     l4459:
  6039                           
  6040                           ;mcc_generated_files/ecan.c: 360:         tempCanMsg->frame.dlc = RXB1DLC;
  6041  000AFA  EE20 F005          	lfsr	2,5
  6042  000AFE  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6043  000B00  26D9               	addwf	fsr2l,f,c
  6044  000B02  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6045  000B04  22DA               	addwfc	fsr2h,f,c
  6046  000B06  CF35 FFDF          	movff	3893,indf2	;volatile
  6047  000B0A                     
  6048                           ;mcc_generated_files/ecan.c: 361:         tempCanMsg->frame.data0 = RXB1D0;
  6049  000B0A  EE20 F006          	lfsr	2,6
  6050  000B0E  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6051  000B10  26D9               	addwf	fsr2l,f,c
  6052  000B12  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6053  000B14  22DA               	addwfc	fsr2h,f,c
  6054  000B16  CF36 FFDF          	movff	3894,indf2	;volatile
  6055  000B1A                     
  6056                           ;mcc_generated_files/ecan.c: 362:         tempCanMsg->frame.data1 = RXB1D1;
  6057  000B1A  EE20 F007          	lfsr	2,7
  6058  000B1E  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6059  000B20  26D9               	addwf	fsr2l,f,c
  6060  000B22  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6061  000B24  22DA               	addwfc	fsr2h,f,c
  6062  000B26  CF37 FFDF          	movff	3895,indf2	;volatile
  6063  000B2A                     
  6064                           ;mcc_generated_files/ecan.c: 363:         tempCanMsg->frame.data2 = RXB1D2;
  6065  000B2A  EE20 F008          	lfsr	2,8
  6066  000B2E  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6067  000B30  26D9               	addwf	fsr2l,f,c
  6068  000B32  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6069  000B34  22DA               	addwfc	fsr2h,f,c
  6070  000B36  CF38 FFDF          	movff	3896,indf2	;volatile
  6071  000B3A                     
  6072                           ;mcc_generated_files/ecan.c: 364:         tempCanMsg->frame.data3 = RXB1D3;
  6073  000B3A  EE20 F009          	lfsr	2,9
  6074  000B3E  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6075  000B40  26D9               	addwf	fsr2l,f,c
  6076  000B42  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6077  000B44  22DA               	addwfc	fsr2h,f,c
  6078  000B46  CF39 FFDF          	movff	3897,indf2	;volatile
  6079  000B4A                     
  6080                           ;mcc_generated_files/ecan.c: 365:         tempCanMsg->frame.data4 = RXB1D4;
  6081  000B4A  EE20 F00A          	lfsr	2,10
  6082  000B4E  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6083  000B50  26D9               	addwf	fsr2l,f,c
  6084  000B52  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6085  000B54  22DA               	addwfc	fsr2h,f,c
  6086  000B56  CF3A FFDF          	movff	3898,indf2	;volatile
  6087  000B5A                     
  6088                           ;mcc_generated_files/ecan.c: 366:         tempCanMsg->frame.data5 = RXB1D5;
  6089  000B5A  EE20 F00B          	lfsr	2,11
  6090  000B5E  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6091  000B60  26D9               	addwf	fsr2l,f,c
  6092  000B62  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6093  000B64  22DA               	addwfc	fsr2h,f,c
  6094  000B66  CF3B FFDF          	movff	3899,indf2	;volatile
  6095  000B6A                     
  6096                           ;mcc_generated_files/ecan.c: 367:         tempCanMsg->frame.data6 = RXB1D6;
  6097  000B6A  EE20 F00C          	lfsr	2,12
  6098  000B6E  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6099  000B70  26D9               	addwf	fsr2l,f,c
  6100  000B72  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6101  000B74  22DA               	addwfc	fsr2h,f,c
  6102  000B76  CF3C FFDF          	movff	3900,indf2	;volatile
  6103  000B7A                     
  6104                           ;mcc_generated_files/ecan.c: 368:         tempCanMsg->frame.data7 = RXB1D7;
  6105  000B7A  EE20 F00D          	lfsr	2,13
  6106  000B7E  504D               	movf	CAN_receive@tempCanMsg^0,w,c
  6107  000B80  26D9               	addwf	fsr2l,f,c
  6108  000B82  504E               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  6109  000B84  22DA               	addwfc	fsr2h,f,c
  6110  000B86  CF3D FFDF          	movff	3901,indf2	;volatile
  6111  000B8A                     
  6112                           ;mcc_generated_files/ecan.c: 369:         RXB1CONbits.RXFUL = 0;
  6113  000B8A  010F               	movlb	15	; () banked
  6114  000B8C  9F30               	bcf	48,7,b	;volatile
  6115  000B8E  EF32  F005         	goto	l4447
  6116  000B92                     l4481:
  6117                           
  6118                           ;mcc_generated_files/ecan.c: 372:     return (returnValue);
  6119  000B92  504F               	movf	CAN_receive@returnValue^0,w,c
  6120  000B94  0012               	return		;funcret
  6121  000B96                     __end_of_CAN_receive:
  6122                           	callstack 0
  6123                           
  6124 ;; *************** function _convertReg2StandardCANid *****************
  6125 ;; Defined at:
  6126 ;;		line 451 in file "mcc_generated_files/ecan.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  tempRXBn_SID    1    wreg     unsigned char 
  6129 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  tempRXBn_SID    1    8[COMRAM] unsigned char 
  6132 ;;  ConvertedID     4   13[COMRAM] unsigned long 
  6133 ;;  returnValue     4    9[COMRAM] unsigned long 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  4    2[COMRAM] unsigned long 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, status,0
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6143 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6146 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6147 ;;Total ram usage:       15 bytes
  6148 ;; Hardware stack levels used: 1
  6149 ;; Hardware stack levels required when called: 3
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_CAN_receive
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text32
  6158  001922                     __ptext32:
  6159                           	callstack 0
  6160  001922                     _convertReg2StandardCANid:
  6161                           	callstack 26
  6162                           
  6163                           ;incstack = 0
  6164                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  6165  001922  6E40               	movwf	convertReg2StandardCANid@tempRXBn_SIDH^0,c
  6166  001924                     
  6167                           ;mcc_generated_files/ecan.c: 453:     uint32_t ConvertedID;;mcc_generated_files/ecan.c: 
      +                          457:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  6168  001924  5040               	movf	convertReg2StandardCANid@tempRXBn_SIDH^0,w,c
  6169  001926  6E3E               	movwf	??_convertReg2StandardCANid^0,c
  6170  001928  6A3F               	clrf	(??_convertReg2StandardCANid+1)^0,c
  6171  00192A  90D8               	bcf	status,0,c
  6172  00192C  363E               	rlcf	??_convertReg2StandardCANid^0,f,c
  6173  00192E  363F               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  6174  001930  90D8               	bcf	status,0,c
  6175  001932  363E               	rlcf	??_convertReg2StandardCANid^0,f,c
  6176  001934  363F               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  6177  001936  90D8               	bcf	status,0,c
  6178  001938  363E               	rlcf	??_convertReg2StandardCANid^0,f,c
  6179  00193A  363F               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  6180  00193C  C03E  F045         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  6181  001940  C03F  F046         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  6182  001944  0E00               	movlw	0
  6183  001946  BE46               	btfsc	(convertReg2StandardCANid@ConvertedID+1)^0,7,c
  6184  001948  0EFF               	movlw	-1
  6185  00194A  6E47               	movwf	(convertReg2StandardCANid@ConvertedID+2)^0,c
  6186  00194C  6E48               	movwf	(convertReg2StandardCANid@ConvertedID+3)^0,c
  6187  00194E                     
  6188                           ;mcc_generated_files/ecan.c: 458:     ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SI
      +                          DL >> 5);
  6189  00194E  C03A  F03E         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  6190  001952  0E05               	movlw	5
  6191  001954  6E3F               	movwf	(??_convertReg2StandardCANid+1)^0,c
  6192  001956                     u1265:
  6193  001956  90D8               	bcf	status,0,c
  6194  001958  323E               	rrcf	??_convertReg2StandardCANid^0,f,c
  6195  00195A  2E3F               	decfsz	(??_convertReg2StandardCANid+1)^0,f,c
  6196  00195C  EFAB  F00C         	goto	u1265
  6197  001960  503E               	movf	??_convertReg2StandardCANid^0,w,c
  6198  001962  2445               	addwf	convertReg2StandardCANid@ConvertedID^0,w,c
  6199  001964  6E45               	movwf	convertReg2StandardCANid@ConvertedID^0,c
  6200  001966  0E00               	movlw	0
  6201  001968  2046               	addwfc	(convertReg2StandardCANid@ConvertedID+1)^0,w,c
  6202  00196A  6E46               	movwf	(convertReg2StandardCANid@ConvertedID+1)^0,c
  6203  00196C  0E00               	movlw	0
  6204  00196E  2047               	addwfc	(convertReg2StandardCANid@ConvertedID+2)^0,w,c
  6205  001970  6E47               	movwf	(convertReg2StandardCANid@ConvertedID+2)^0,c
  6206  001972  0E00               	movlw	0
  6207  001974  2048               	addwfc	(convertReg2StandardCANid@ConvertedID+3)^0,w,c
  6208  001976  6E48               	movwf	(convertReg2StandardCANid@ConvertedID+3)^0,c
  6209  001978                     
  6210                           ;mcc_generated_files/ecan.c: 459:     returnValue = ConvertedID;
  6211  001978  C045  F041         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  6212  00197C  C046  F042         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  6213  001980  C047  F043         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  6214  001984  C048  F044         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  6215  001988                     
  6216                           ;mcc_generated_files/ecan.c: 460:     return (returnValue);
  6217  001988  C041  F03A         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  6218  00198C  C042  F03B         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  6219  001990  C043  F03C         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  6220  001994  C044  F03D         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  6221  001998  0012               	return		;funcret
  6222  00199A                     __end_of_convertReg2StandardCANid:
  6223                           	callstack 0
  6224                           
  6225 ;; *************** function _convertReg2ExtendedCANid *****************
  6226 ;; Defined at:
  6227 ;;		line 431 in file "mcc_generated_files/ecan.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  tempRXBn_EID    1    wreg     unsigned char 
  6230 ;;  tempRXBn_EID    1    2[COMRAM] unsigned char 
  6231 ;;  tempRXBn_SID    1    3[COMRAM] unsigned char 
  6232 ;;  tempRXBn_SID    1    4[COMRAM] unsigned char 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  tempRXBn_EID    1   10[COMRAM] unsigned char 
  6235 ;;  ConvertedID     4   17[COMRAM] unsigned long 
  6236 ;;  returnValue     4   11[COMRAM] unsigned long 
  6237 ;;  CAN_standard    1   16[COMRAM] unsigned char 
  6238 ;;  CAN_standard    1   15[COMRAM] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  4    2[COMRAM] unsigned long 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6249 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6251 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6252 ;;Total ram usage:       19 bytes
  6253 ;; Hardware stack levels used: 1
  6254 ;; Hardware stack levels required when called: 3
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_CAN_receive
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text33
  6263  000EAE                     __ptext33:
  6264                           	callstack 0
  6265  000EAE                     _convertReg2ExtendedCANid:
  6266                           	callstack 26
  6267                           
  6268                           ;incstack = 0
  6269                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  6270  000EAE  6E42               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH^0,c
  6271  000EB0                     
  6272                           ;mcc_generated_files/ecan.c: 433:     uint32_t ConvertedID = 0;
  6273  000EB0  0E00               	movlw	0
  6274  000EB2  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6275  000EB4  0E00               	movlw	0
  6276  000EB6  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6277  000EB8  0E00               	movlw	0
  6278  000EBA  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6279  000EBC  0E00               	movlw	0
  6280  000EBE  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6281  000EC0                     
  6282                           ;mcc_generated_files/ecan.c: 434:     uint8_t CAN_standardLo_ID_lo2bits;;mcc_generated_f
      +                          iles/ecan.c: 435:     uint8_t CAN_standardLo_ID_hi3bits;;mcc_generated_files/ecan.c: 437
      +                          :     CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  6283  000EC0  503C               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL^0,w,c
  6284  000EC2  0B03               	andlw	3
  6285  000EC4  6E47               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits^0,c
  6286  000EC6                     
  6287                           ;mcc_generated_files/ecan.c: 438:     CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SID
      +                          L >> 5);
  6288  000EC6  383C               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL^0,w,c
  6289  000EC8  42E8               	rrncf	wreg,f,c
  6290  000ECA  0B07               	andlw	7
  6291  000ECC  6E48               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits^0,c
  6292  000ECE                     
  6293                           ;mcc_generated_files/ecan.c: 439:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  6294  000ECE  503B               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH^0,w,c
  6295  000ED0  6E3E               	movwf	??_convertReg2ExtendedCANid^0,c
  6296  000ED2  6A3F               	clrf	(??_convertReg2ExtendedCANid+1)^0,c
  6297  000ED4  90D8               	bcf	status,0,c
  6298  000ED6  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6299  000ED8  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6300  000EDA  90D8               	bcf	status,0,c
  6301  000EDC  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6302  000EDE  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6303  000EE0  90D8               	bcf	status,0,c
  6304  000EE2  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6305  000EE4  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6306  000EE6  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6307  000EEA  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6308  000EEE  0E00               	movlw	0
  6309  000EF0  BE4A               	btfsc	(convertReg2ExtendedCANid@ConvertedID+1)^0,7,c
  6310  000EF2  0EFF               	movlw	-1
  6311  000EF4  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6312  000EF6  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6313  000EF8                     
  6314                           ;mcc_generated_files/ecan.c: 440:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
  6315  000EF8  5048               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits^0,w,c
  6316  000EFA  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6317  000EFC  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6318  000EFE  0E00               	movlw	0
  6319  000F00  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6320  000F02  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6321  000F04  0E00               	movlw	0
  6322  000F06  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6323  000F08  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6324  000F0A  0E00               	movlw	0
  6325  000F0C  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6326  000F0E  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6327  000F10                     
  6328                           ;mcc_generated_files/ecan.c: 441:     ConvertedID = (ConvertedID << 2);
  6329  000F10  C049  F03E         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  6330  000F14  C04A  F03F         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  6331  000F18  C04B  F040         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  6332  000F1C  C04C  F041         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  6333  000F20  0E02               	movlw	2
  6334  000F22                     u1255:
  6335  000F22  90D8               	bcf	status,0,c
  6336  000F24  363E               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  6337  000F26  363F               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  6338  000F28  3640               	rlcf	(??_convertReg2ExtendedCANid+2)^0,f,c
  6339  000F2A  3641               	rlcf	(??_convertReg2ExtendedCANid+3)^0,f,c
  6340  000F2C  2EE8               	decfsz	wreg,f,c
  6341  000F2E  EF91  F007         	goto	u1255
  6342  000F32  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6343  000F36  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6344  000F3A  C040  F04B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  6345  000F3E  C041  F04C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  6346  000F42                     
  6347                           ;mcc_generated_files/ecan.c: 442:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
  6348  000F42  5047               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits^0,w,c
  6349  000F44  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6350  000F46  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6351  000F48  0E00               	movlw	0
  6352  000F4A  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6353  000F4C  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6354  000F4E  0E00               	movlw	0
  6355  000F50  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6356  000F52  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6357  000F54  0E00               	movlw	0
  6358  000F56  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6359  000F58  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6360                           
  6361                           ;mcc_generated_files/ecan.c: 443:     ConvertedID = (ConvertedID << 8);
  6362  000F5A  C049  F03F         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  6363  000F5E  C04A  F040         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  6364  000F62  C04B  F041         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  6365  000F66  6A3E               	clrf	??_convertReg2ExtendedCANid^0,c
  6366  000F68  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6367  000F6C  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6368  000F70  C040  F04B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  6369  000F74  C041  F04C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  6370  000F78                     
  6371                           ;mcc_generated_files/ecan.c: 444:     ConvertedID = ConvertedID + tempRXBn_EIDH;
  6372  000F78  5042               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH^0,w,c
  6373  000F7A  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6374  000F7C  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6375  000F7E  0E00               	movlw	0
  6376  000F80  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6377  000F82  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6378  000F84  0E00               	movlw	0
  6379  000F86  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6380  000F88  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6381  000F8A  0E00               	movlw	0
  6382  000F8C  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6383  000F8E  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6384  000F90                     
  6385                           ;mcc_generated_files/ecan.c: 445:     ConvertedID = (ConvertedID << 8);
  6386  000F90  C049  F03F         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  6387  000F94  C04A  F040         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  6388  000F98  C04B  F041         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  6389  000F9C  6A3E               	clrf	??_convertReg2ExtendedCANid^0,c
  6390  000F9E  C03E  F049         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  6391  000FA2  C03F  F04A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  6392  000FA6  C040  F04B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  6393  000FAA  C041  F04C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  6394                           
  6395                           ;mcc_generated_files/ecan.c: 446:     ConvertedID = ConvertedID + tempRXBn_EIDL;
  6396  000FAE  503A               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL^0,w,c
  6397  000FB0  2449               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  6398  000FB2  6E49               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  6399  000FB4  0E00               	movlw	0
  6400  000FB6  204A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  6401  000FB8  6E4A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  6402  000FBA  0E00               	movlw	0
  6403  000FBC  204B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  6404  000FBE  6E4B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  6405  000FC0  0E00               	movlw	0
  6406  000FC2  204C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  6407  000FC4  6E4C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  6408  000FC6                     
  6409                           ;mcc_generated_files/ecan.c: 447:     returnValue = ConvertedID;
  6410  000FC6  C049  F043         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  6411  000FCA  C04A  F044         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  6412  000FCE  C04B  F045         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  6413  000FD2  C04C  F046         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  6414  000FD6                     
  6415                           ;mcc_generated_files/ecan.c: 448:     return (returnValue);
  6416  000FD6  C043  F03A         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  6417  000FDA  C044  F03B         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  6418  000FDE  C045  F03C         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  6419  000FE2  C046  F03D         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  6420  000FE6  0012               	return		;funcret
  6421  000FE8                     __end_of_convertReg2ExtendedCANid:
  6422                           	callstack 0
  6423                           
  6424 ;; *************** function _INTERRUPT_InterruptManager *****************
  6425 ;; Defined at:
  6426 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;		None
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;		None
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      void 
  6433 ;; Registers used:
  6434 ;;		wreg, pcl, pclath, pclatu, tosl, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6444 ;;Total ram usage:        2 bytes
  6445 ;; Hardware stack levels used: 1
  6446 ;; Hardware stack levels required when called: 2
  6447 ;; This function calls:
  6448 ;;		_ECAN_WAKI_ISR
  6449 ;; This function is called by:
  6450 ;;		Interrupt level 2
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	intcode
  6455  000008                     __pintcode:
  6456                           	callstack 0
  6457  000008                     _INTERRUPT_InterruptManager:
  6458                           	callstack 25
  6459                           
  6460                           ;incstack = 0
  6461  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6462  00000A  CFFA F038          	movff	pclath,??_INTERRUPT_InterruptManager
  6463  00000E  CFFB F039          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6464  000012                     
  6465                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6466  000012  ACF2               	btfss	242,6,c	;volatile
  6467  000014  EF0E  F000         	goto	i2u27_41
  6468  000018  EF10  F000         	goto	i2u27_40
  6469  00001C                     i2u27_41:
  6470  00001C  EF20  F000         	goto	i2l110
  6471  000020                     i2u27_40:
  6472  000020                     
  6473                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE5bits.WAKIE == 1 && PIR5bits.WAKIF == 1)
  6474  000020  AC76               	btfss	118,6,c	;volatile
  6475  000022  EF15  F000         	goto	i2u28_41
  6476  000026  EF17  F000         	goto	i2u28_40
  6477  00002A                     i2u28_41:
  6478  00002A  EF20  F000         	goto	i2l110
  6479  00002E                     i2u28_40:
  6480  00002E  AC77               	btfss	119,6,c	;volatile
  6481  000030  EF1C  F000         	goto	i2u29_41
  6482  000034  EF1E  F000         	goto	i2u29_40
  6483  000038                     i2u29_41:
  6484  000038  EF20  F000         	goto	i2l110
  6485  00003C                     i2u29_40:
  6486  00003C                     
  6487                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ECAN_WAKI_ISR();
  6488  00003C  EC5D  F00D         	call	_ECAN_WAKI_ISR	;wreg free
  6489  000040                     i2l110:
  6490  000040  C039  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6491  000044  C038  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6492  000048  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6493  00004A  0011               	retfie		f
  6494  00004C                     __end_of_INTERRUPT_InterruptManager:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function _ECAN_WAKI_ISR *****************
  6498 ;; Defined at:
  6499 ;;		line 503 in file "mcc_generated_files/ecan.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;		None
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      void 
  6506 ;; Registers used:
  6507 ;;		wreg, pcl, pclath, pclatu, tosl, cstack
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6517 ;;Total ram usage:        0 bytes
  6518 ;; Hardware stack levels used: 1
  6519 ;; Hardware stack levels required when called: 1
  6520 ;; This function calls:
  6521 ;;		Absolute function
  6522 ;;		_WakeUpDefaultInterruptHandler
  6523 ;; This function is called by:
  6524 ;;		_INTERRUPT_InterruptManager
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text35
  6529  001ABA                     __ptext35:
  6530                           	callstack 0
  6531  001ABA                     _ECAN_WAKI_ISR:
  6532                           	callstack 25
  6533  001ABA                     
  6534                           ;mcc_generated_files/ecan.c: 505:     WakeUpInterruptHandler();
  6535  001ABA  D802               	call	i2u12_48
  6536  001ABC  EF6A  F00D         	goto	i2u12_49
  6537  001AC0                     i2u12_48:
  6538  001AC0  0005               	push	
  6539  001AC2  6EFA               	movwf	pclath,c
  6540  001AC4  501B               	movf	_WakeUpInterruptHandler^0,w,c
  6541  001AC6  6EFD               	movwf	tosl,c
  6542  001AC8  501C               	movf	(_WakeUpInterruptHandler+1)^0,w,c
  6543  001ACA  6EFE               	movwf	tosh,c
  6544  001ACC  50F8               	movf	tblptru,w,c
  6545  001ACE  6EFF               	movwf	tosu,c
  6546  001AD0  50FA               	movf	pclath,w,c
  6547  001AD2  0012               	return		;indir
  6548  001AD4                     i2u12_49:
  6549  001AD4                     
  6550                           ;mcc_generated_files/ecan.c: 506:     PIR5bits.WAKIF = 0;
  6551  001AD4  9C77               	bcf	119,6,c	;volatile
  6552  001AD6  0012               	return		;funcret
  6553  001AD8                     __end_of_ECAN_WAKI_ISR:
  6554                           	callstack 0
  6555                           
  6556 ;; *************** function _WakeUpDefaultInterruptHandler *****************
  6557 ;; Defined at:
  6558 ;;		line 63 in file "mcc_generated_files/ecan.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;		None
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;		None
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  1    wreg      void 
  6565 ;; Registers used:
  6566 ;;		None
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;Total ram usage:        0 bytes
  6577 ;; Hardware stack levels used: 1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_ECAN_Initialize
  6582 ;;		_ECAN_WAKI_ISR
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text36
  6587  001B42                     __ptext36:
  6588                           	callstack 0
  6589  001B42                     _WakeUpDefaultInterruptHandler:
  6590                           	callstack 25
  6591  001B42  0012               	return		;funcret
  6592  001B44                     __end_of_WakeUpDefaultInterruptHandler:
  6593                           	callstack 0
  6594  0000                     
  6595                           	psect	text37
  6596  000000                     __ptext37:
  6597                           	callstack 0
  6598  000000                     
  6599                           	psect	rparam
  6600  0000                     
  6601                           	psect	temp
  6602  00005A                     btemp:
  6603                           	callstack 0
  6604  00005A                     	ds	1
  6605  0000                     int$flags	set	btemp
  6606  0000                     wtemp8	set	btemp+1
  6607  0000                     ttemp5	set	btemp+1
  6608  0000                     ttemp6	set	btemp+4
  6609  0000                     ttemp7	set	btemp+8
  6610                           
  6611                           	psect	idloc
  6612                           
  6613                           ;Config register IDLOC0 @ 0x200000
  6614                           ;	unspecified, using default values
  6615  200000                     	org	2097152
  6616  200000  FF                 	db	255
  6617                           
  6618                           ;Config register IDLOC1 @ 0x200001
  6619                           ;	unspecified, using default values
  6620  200001                     	org	2097153
  6621  200001  FF                 	db	255
  6622                           
  6623                           ;Config register IDLOC2 @ 0x200002
  6624                           ;	unspecified, using default values
  6625  200002                     	org	2097154
  6626  200002  FF                 	db	255
  6627                           
  6628                           ;Config register IDLOC3 @ 0x200003
  6629                           ;	unspecified, using default values
  6630  200003                     	org	2097155
  6631  200003  FF                 	db	255
  6632                           
  6633                           ;Config register IDLOC4 @ 0x200004
  6634                           ;	unspecified, using default values
  6635  200004                     	org	2097156
  6636  200004  FF                 	db	255
  6637                           
  6638                           ;Config register IDLOC5 @ 0x200005
  6639                           ;	unspecified, using default values
  6640  200005                     	org	2097157
  6641  200005  FF                 	db	255
  6642                           
  6643                           ;Config register IDLOC6 @ 0x200006
  6644                           ;	unspecified, using default values
  6645  200006                     	org	2097158
  6646  200006  FF                 	db	255
  6647                           
  6648                           ;Config register IDLOC7 @ 0x200007
  6649                           ;	unspecified, using default values
  6650  200007                     	org	2097159
  6651  200007  FF                 	db	255
  6652                           
  6653                           	psect	config
  6654                           
  6655                           ;Config register CONFIG1L @ 0x300000
  6656                           ;	VREG Sleep Enable bit
  6657                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  6658                           ;	LF-INTOSC Low-power Enable bit
  6659                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6660                           ;	SOSC Power Selection and mode Configuration bits
  6661                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6662                           ;	Extended Instruction Set
  6663                           ;	XINST = OFF, Disabled
  6664  300000                     	org	3145728
  6665  300000  15                 	db	21
  6666                           
  6667                           ;Config register CONFIG1H @ 0x300001
  6668                           ;	Oscillator
  6669                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  6670                           ;	PLL x4 Enable bit
  6671                           ;	PLLCFG = OFF, Disabled
  6672                           ;	Fail-Safe Clock Monitor
  6673                           ;	FCMEN = OFF, Disabled
  6674                           ;	Internal External Oscillator Switch Over Mode
  6675                           ;	IESO = OFF, Disabled
  6676  300001                     	org	3145729
  6677  300001  02                 	db	2
  6678                           
  6679                           ;Config register CONFIG2L @ 0x300002
  6680                           ;	Power Up Timer
  6681                           ;	PWRTEN = OFF, Disabled
  6682                           ;	Brown Out Detect
  6683                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  6684                           ;	Brown-out Reset Voltage bits
  6685                           ;	BORV = 3, 1.8V
  6686                           ;	BORMV Power level
  6687                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6688  300002                     	org	3145730
  6689  300002  7F                 	db	127
  6690                           
  6691                           ;Config register CONFIG2H @ 0x300003
  6692                           ;	Watchdog Timer
  6693                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6694                           ;	Watchdog Postscaler
  6695                           ;	WDTPS = 1048576, 1:1048576
  6696  300003                     	org	3145731
  6697  300003  7C                 	db	124
  6698                           
  6699                           ; Padding undefined space
  6700  300004                     	org	3145732
  6701  300004  FF                 	db	255
  6702                           
  6703                           ;Config register CONFIG3H @ 0x300005
  6704                           ;	ECAN Mux bit
  6705                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  6706                           ;	MSSP address masking
  6707                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  6708                           ;	Master Clear Enable
  6709                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  6710  300005                     	org	3145733
  6711  300005  89                 	db	137
  6712                           
  6713                           ;Config register CONFIG4L @ 0x300006
  6714                           ;	Stack Overflow Reset
  6715                           ;	STVREN = ON, Enabled
  6716                           ;	Boot Block Size
  6717                           ;	BBSIZ = BB2K, 2K word Boot Block size
  6718  300006                     	org	3145734
  6719  300006  91                 	db	145
  6720                           
  6721                           ; Padding undefined space
  6722  300007                     	org	3145735
  6723  300007  FF                 	db	255
  6724                           
  6725                           ;Config register CONFIG5L @ 0x300008
  6726                           ;	Code Protect 00800-03FFF
  6727                           ;	CP0 = OFF, Disabled
  6728                           ;	Code Protect 04000-07FFF
  6729                           ;	CP1 = OFF, Disabled
  6730                           ;	Code Protect 08000-0BFFF
  6731                           ;	CP2 = OFF, Disabled
  6732                           ;	Code Protect 0C000-0FFFF
  6733                           ;	CP3 = OFF, Disabled
  6734  300008                     	org	3145736
  6735  300008  0F                 	db	15
  6736                           
  6737                           ;Config register CONFIG5H @ 0x300009
  6738                           ;	Code Protect Boot
  6739                           ;	CPB = OFF, Disabled
  6740                           ;	Data EE Read Protect
  6741                           ;	CPD = OFF, Disabled
  6742  300009                     	org	3145737
  6743  300009  C0                 	db	192
  6744                           
  6745                           ;Config register CONFIG6L @ 0x30000A
  6746                           ;	Table Write Protect 00800-03FFF
  6747                           ;	WRT0 = OFF, Disabled
  6748                           ;	Table Write Protect 04000-07FFF
  6749                           ;	WRT1 = OFF, Disabled
  6750                           ;	Table Write Protect 08000-0BFFF
  6751                           ;	WRT2 = OFF, Disabled
  6752                           ;	Table Write Protect 0C000-0FFFF
  6753                           ;	WRT3 = OFF, Disabled
  6754  30000A                     	org	3145738
  6755  30000A  0F                 	db	15
  6756                           
  6757                           ;Config register CONFIG6H @ 0x30000B
  6758                           ;	Config. Write Protect
  6759                           ;	WRTC = OFF, Disabled
  6760                           ;	Table Write Protect Boot
  6761                           ;	WRTB = OFF, Disabled
  6762                           ;	Data EE Write Protect
  6763                           ;	WRTD = OFF, Disabled
  6764  30000B                     	org	3145739
  6765  30000B  E0                 	db	224
  6766                           
  6767                           ;Config register CONFIG7L @ 0x30000C
  6768                           ;	Table Read Protect 00800-03FFF
  6769                           ;	EBTR0 = OFF, Disabled
  6770                           ;	Table Read Protect 04000-07FFF
  6771                           ;	EBTR1 = OFF, Disabled
  6772                           ;	Table Read Protect 08000-0BFFF
  6773                           ;	EBTR2 = OFF, Disabled
  6774                           ;	Table Read Protect 0C000-0FFFF
  6775                           ;	EBTR3 = OFF, Disabled
  6776  30000C                     	org	3145740
  6777  30000C  0F                 	db	15
  6778                           
  6779                           ;Config register CONFIG7H @ 0x30000D
  6780                           ;	Table Read Protect Boot
  6781                           ;	EBTRB = OFF, Disabled
  6782  30000D                     	org	3145741
  6783  30000D  40                 	db	64
  6784                           tosu	equ	0xFFF
  6785                           tosh	equ	0xFFE
  6786                           tosl	equ	0xFFD
  6787                           stkptr	equ	0xFFC
  6788                           pclatu	equ	0xFFB
  6789                           pclath	equ	0xFFA
  6790                           pcl	equ	0xFF9
  6791                           tblptru	equ	0xFF8
  6792                           tblptrh	equ	0xFF7
  6793                           tblptrl	equ	0xFF6
  6794                           tablat	equ	0xFF5
  6795                           prodh	equ	0xFF4
  6796                           prodl	equ	0xFF3
  6797                           indf0	equ	0xFEF
  6798                           postinc0	equ	0xFEE
  6799                           postdec0	equ	0xFED
  6800                           preinc0	equ	0xFEC
  6801                           plusw0	equ	0xFEB
  6802                           fsr0h	equ	0xFEA
  6803                           fsr0l	equ	0xFE9
  6804                           wreg	equ	0xFE8
  6805                           indf1	equ	0xFE7
  6806                           postinc1	equ	0xFE6
  6807                           postdec1	equ	0xFE5
  6808                           preinc1	equ	0xFE4
  6809                           plusw1	equ	0xFE3
  6810                           fsr1h	equ	0xFE2
  6811                           fsr1l	equ	0xFE1
  6812                           bsr	equ	0xFE0
  6813                           indf2	equ	0xFDF
  6814                           postinc2	equ	0xFDE
  6815                           postdec2	equ	0xFDD
  6816                           preinc2	equ	0xFDC
  6817                           plusw2	equ	0xFDB
  6818                           fsr2h	equ	0xFDA
  6819                           fsr2l	equ	0xFD9
  6820                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         153
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      89
    BANK0           160      4     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    hazardButton@b2FunctionActive	PTR int  size(2) Largest target is 2
		 -> b2FuncActive(COMRAM[2]), 

    hazardButton@b2Latch	PTR int  size(2) Largest target is 2
		 -> latchb2(COMRAM[2]), 

    rightTurnButton@b10FunctionActive	PTR int  size(2) Largest target is 2
		 -> b10FuncActive(COMRAM[2]), 

    rightTurnButton@b10Latch	PTR int  size(2) Largest target is 2
		 -> buttonRuntime@var(COMRAM[2]), latchb10(COMRAM[2]), 

    leftTurnButton@b1FunctionActive	PTR int  size(2) Largest target is 2
		 -> b1FuncActive(COMRAM[2]), 

    leftTurnButton@b1Latch	PTR int  size(2) Largest target is 2
		 -> buttonRuntime@var(COMRAM[2]), latchb1(COMRAM[2]), 

    ECAN_SetWakeUpInterruptHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> WakeUpDefaultInterruptHandler(), 

    WakeUpInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), WakeUpDefaultInterruptHandler(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> rx(COMRAM[14]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> tx7(BANK0[14]), tx6(BANK0[14]), tx5(BANK0[14]), tx4(BANK0[14]), 
		 -> tx3(BANK0[14]), tx2(BANK0[14]), tx1(BANK0[14]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_canHazardSignal
    _main->_canLeftSignal
    _main->_canRightSignal
    _init->_auxBattConn
    _init->_batterySOC
    _init->_batterySOCGraphic
    _init->_batteryTemp
    _init->_hazardSignal
    _init->_leftTurnIndicator
    _init->_motorControllerTemp
    _init->_motorSpeed
    _init->_rightTurnIndicator
    _init->_warningLED
    _warningLED->_EUSART1_Write
    _rightTurnIndicator->_EUSART1_Write
    _motorSpeed->_EUSART1_Write
    _motorControllerTemp->_EUSART1_Write
    _leftTurnIndicator->_EUSART1_Write
    _hazardSignal->_EUSART1_Write
    _batteryTemp->_EUSART1_Write
    _batterySOCGraphic->_EUSART1_Write
    _batterySOC->_EUSART1_Write
    _auxBattConn->_EUSART1_Write
    _canRightSignal->_CAN_transmit
    _canLeftSignal->_CAN_transmit
    _canHazardSignal->_CAN_transmit
    _CAN_transmit->_convertCANid2Reg
    _SYSTEM_Initialize->_ECAN_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _ECAN_Initialize->_ECAN_SetWakeUpInterruptHandler
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   31468
                                             28 COMRAM     2     2      0
                                              0 BANK0      4     4      0
                        _CAN_receive
                  _SYSTEM_Initialize
                        _auxBattConn
                    _canHazardSignal
                      _canLeftSignal
                     _canRightSignal
                       _hazardButton
                       _hazardSignal
                               _init
                     _leftTurnButton
                  _leftTurnIndicator
                         _motorSpeed
                    _rightTurnButton
                 _rightTurnIndicator
                         _warningLED
 ---------------------------------------------------------------------------------
 (1) _rightTurnButton                                      6     2      4     546
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _leftTurnButton                                       6     2      4     546
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    6660
                        _auxBattConn
                         _batterySOC
                  _batterySOCGraphic
                        _batteryTemp
                       _hazardSignal
                  _leftTurnIndicator
                _motorControllerTemp
                         _motorSpeed
                 _rightTurnIndicator
                         _warningLED
 ---------------------------------------------------------------------------------
 (1) _warningLED                                          13    11      2     558
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _rightTurnIndicator                                  13    11      2    1098
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _motorSpeed                                          13    11      2     558
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _motorControllerTemp                                 13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _leftTurnIndicator                                   13    11      2    1098
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _hazardSignal                                        13    11      2     828
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _batteryTemp                                         13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _batterySOCGraphic                                   13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _batterySOC                                          13    11      2     468
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _auxBattConn                                         13    11      2     648
                                              3 COMRAM    11     9      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _hazardButton                                         6     2      4     366
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _canRightSignal                                       2     0      2    5202
                                             26 COMRAM     2     0      2
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (1) _canLeftSignal                                        2     0      2    5202
                                             26 COMRAM     2     0      2
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (1) _canHazardSignal                                      2     0      2    5112
                                             26 COMRAM     2     0      2
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (2) _CAN_transmit                                         7     5      2    4901
                                             20 COMRAM     6     4      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (3) _convertCANid2Reg                                    18     5     13    2425
                                              2 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                    _ECAN_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0     121
                                              4 COMRAM     1     1      0
     _ECAN_SetWakeUpInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ECAN_SetWakeUpInterruptHandler                       2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    2448
                                             21 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     347
                                              2 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4    1075
                                              2 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                      _ECAN_WAKI_ISR
 ---------------------------------------------------------------------------------
 (5) _ECAN_WAKI_ISR                                        0     0      0       0
                   Absolute function *
      _WakeUpDefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _WakeUpDefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _SYSTEM_Initialize
     _ECAN_Initialize
       _ECAN_SetWakeUpInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _auxBattConn
     _EUSART1_Write
   _canHazardSignal
     _CAN_transmit
       _convertCANid2Reg
   _canLeftSignal
     _CAN_transmit
   _canRightSignal
     _CAN_transmit
   _hazardButton
   _hazardSignal
     _EUSART1_Write
   _init
     _auxBattConn
     _batterySOC
       _EUSART1_Write
     _batterySOCGraphic
       _EUSART1_Write
     _batteryTemp
       _EUSART1_Write
     _hazardSignal
     _leftTurnIndicator
       _EUSART1_Write
     _motorControllerTemp
       _EUSART1_Write
     _motorSpeed
       _EUSART1_Write
     _rightTurnIndicator
       _EUSART1_Write
     _warningLED
       _EUSART1_Write
   _leftTurnButton
   _leftTurnIndicator
   _motorSpeed
   _rightTurnButton
   _rightTurnIndicator
   _warningLED

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_WAKI_ISR
     Absolute function(Fake) *
     _WakeUpDefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      54        0.0%
BANK13             100      0       0      23        0.0%
BITBANK12          100      0       0      21        0.0%
BANK12             100      0       0      22        0.0%
BITBANK11          100      0       0      53        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      52        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      51        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      50        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      49        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      48        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      47        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      68       5       65.0%
BITBIGSFRllllhl     62      0       0      43        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      59       1       94.7%
BITBANK14           41      0       0      55        0.0%
BANK14              41      0       0      56        0.0%
BITBIGSFRhhhl       20      0       0      27        0.0%
BITBIGSFRhhhhlh     1D      0       0      25        0.0%
BITBIGSFRllllhh     1D      0       0      39        0.0%
BITBIGSFRhhhhh       D      0       0      24        0.0%
BITBIGSFRlhh         8      0       0      29        0.0%
BITBIGSFRlhlllh      6      0       0      33        0.0%
BITBIGSFRllh         5      0       0      36        0.0%
BITBIGSFRlhlhll      4      0       0      32        0.0%
BITBIGSFRlllhhh      3      0       0      37        0.0%
BITBIGSFRlhlhhl      3      0       0      31        0.0%
BITBIGSFRhl          3      0       0      28        0.0%
BITBIGSFRlhlhhh      2      0       0      30        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRllllhh      2      0       0      40        0.0%
BITBIGSFRlllhll      2      0       0      38        0.0%
BITBIGSFRlhllll      2      0       0      35        0.0%
BITBIGSFRllllll      2      0       0      45        0.0%
BITBIGSFRlhlllh      1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1      46        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Nov 28 20:59:28 2023

                                               l43 19D6                                                 l70 1AEC  
                                               l82 1B28                                                 l67 1ADA  
                                               l85 1B1E                                                 l88 1B32  
                                    ?_hazardButton 003A                                                 _rx 001E  
                                    ?_hazardSignal 003B                                                l101 1B40  
                                              l143 1A0E                                                l502 0D38  
                                              l511 073C                                                l512 0940  
                                              l513 083E                                                l516 0940  
                                              l701 13E6                                                l526 0B94  
                                              l710 147E                                                l519 0A6C  
                                              l704 134E                                                l713 1516  
                                              l546 0FE6                                                l554 0EAC  
                                              l722 180E                                                l707 18A6  
                                              l716 16DE                                                l549 1998  
                                              l557 1B3C                                                l581 1B02  
                                              l725 1776                                                l670 0090  
                                              l719 1646                                                l584 1B14  
                                              l728 1920                                                l680 0620  
                                              l841 1A92                                                l753 11C6  
                                              l835 1A3A                                                l667 008C  
                                              l781 12B6                                                l838 1A66  
                                              l767 10D6                                                l698 15AE  
            ECAN_SetWakeUpInterruptHandler@handler 003A                                 motorSpeed@checksum 003E  
                                              _tx1 00B4                                                _tx2 00A6  
                                              _tx3 0098                                                _tx4 008A  
                                              _tx5 007C                                                _tx6 006E  
                                              _tx7 0060                                                tosl 000FFD  
                                              wreg 000FE8                                         _TXSTA1bits 000FAC  
                       ??_convertReg2StandardCANid 003E                             batterySOCGraphic@value 003B  
                                             l4001 0CFC                                               l4011 0D22  
                                             l4003 0D0E                                               l4005 0D1A  
                                             l4101 08FA                                               l4021 0698  
                                             l4013 0628                                               l4007 0D1C  
                                             l4103 090A                                               l4031 06C6  
                                             l4023 069C                                               l4015 0638  
                                             l4121 0ECE                                               l4009 0D1E  
                                             l4105 091A                                               l4041 0716  
                                             l4033 06D6                                               l4025 06A0  
                                             l4017 0648                                               l4201 1598  
                                             l4131 0F90                                               l4123 0EF8  
                                             l4115 0EB0                                               l4107 092A  
                                             l4051 0796                                               l4043 0726  
                                             l4035 06E6                                               l4027 06A4  
                                             l4019 0694                                               l4211 15D8  
                                             l4203 15A8                                               l4133 0FC6  
                                             l4125 0F10                                               l4117 0EC0  
                                             l4141 1924                                               l4109 093A  
                                             l4061 07B8                                               l4053 079A  
                                             l4045 0736                                               l4037 06F6  
                                             l4029 06B6                                               l4301 187A  
                                             l4221 1614                                               l4213 15E8  
                                             l4205 15B0                                               l4135 0FD6  
                                             l4127 0F42                                               l4119 0EC6  
                                             l4143 194E                                               l4151 1B04  
                                             l4071 0808                                               l4063 07C8  
                                             l4055 079E                                               l4047 0738  
                                             l4039 0706                                               l4303 188A  
                                             l4223 161A                                               l4215 15EE  
                                             l4207 15C8                                               l4311 1498  
                                             l4231 13E8                                               l4129 0F78  
                                             l4145 1978                                               l4081 084C  
                                             l4073 0818                                               l4065 07D8  
                                             l4057 07A2                                               l4049 074A  
                                             l4305 1890                                               l4401 1734  
                                             l4225 162A                                               l4217 15FE  
                                             l4209 15D2                                               l4321 14CE  
                                             l4313 14A2                                               l4241 1426  
                                             l4233 1400                                               l4161 1388  
                                             l4153 1350                                               l4147 1988  
                                             l4139 1924                                               l4091 08A8  
                                             l4083 0898                                               l4075 0828  
                                             l4067 07E8                                               l4059 07A6  
                                             l4307 18A0                                               l4411 1770  
                                             l4403 1744                                               l4227 1630  
                                             l4219 1604                                               l4331 1500  
                                             l4323 14D4                                               l4315 14A8  
                                             l4251 1462                                               l4243 1436  
                                             l4235 140A                                               l4171 13BA  
                                             l4163 138E                                               l4155 1368  
                                             l4421 096E                                               l4413 0942  
                                             l4093 08BA                                               l4085 089C  
                                             l4077 0838                                               l4069 07F8  
                                             l4501 1A2E                                               l4405 174A  
                                             l4341 1670                                               l4229 1640  
                                             l4181 1530                                               l4333 1510  
                                             l4325 14E4                                               l4317 14B8  
                                             l4309 1480                                               l4253 1468  
                                             l4245 143C                                               l4237 1410  
                                             l4173 13CA                                               l4165 139E  
                                             l4157 1372                                               l4261 12DA  
                                             l4431 09F2                                               l4423 09A0  
                                             l4415 0946                                               l4095 08CA  
                                             l4087 08A0                                               l4511 1A82  
                                             l4503 1A3C                                               l4407 175A  
                                             l4351 16AC                                               l4343 1680  
                                             l4335 1648                                               l4191 1566  
                                             l4183 153A                                               l4327 14EA  
                                             l4319 14BE                                               l4255 1478  
                                             l4247 144C                                               l4239 1420  
                                             l4175 13D0                                               l4167 13A4  
                                             l4159 1378                                               l4271 130C  
                                             l4263 12E0                                               l4441 0A42  
                                             l4433 0A02                                               l4425 09AC  
                                             l4417 0954                                               l4097 08DA  
                                             l4089 08A4                                               l4513 1A86  
                                             l4505 1A56                                               l4361 1778  
                                             l4409 1760                                               l4353 16B2  
                                             l4345 1686                                               l4337 1660  
                                             l4193 156C                                               l4185 1540  
                                             l4329 14FA                                               l4249 1452  
                                             l4177 13E0                                               l4169 13B4  
                                             l4281 1348                                               l4273 131C  
                                             l4265 12F0                                               l4257 12B8  
                                             l5081 117E                                               l4521 1104  
                                             l5073 1046                                               l4451 0A8A  
                                             l4443 0A52                                               l4435 0A12  
                                             l4427 09D2                                               l4419 0962  
                                             l4099 08EA                                               l4507 1A5A  
                                             l4603 127C                                               l4291 1848  
                                             l4283 1810                                               l4371 17B6  
                                             l4363 1790                                               l4355 16C2  
                                             l4347 1696                                               l4339 166A  
                                             l4195 157C                                               l4187 1550  
                                             l4179 1518                                               l4275 1322  
                                             l4267 12F6                                               l4259 12D0  
                                             l5083 11B0                                               l4531 1160  
                                             l4515 10D8                                               l5075 108E  
                                             l4461 0B0A                                               l4453 0A96  
                                             l4445 0A62                                               l4437 0A22  
                                             l4429 09E2                                               l4509 1A68  
                                             l5085 1226                                               l4293 184E  
                                             l4285 1828                                               l4381 17F2  
                                             l4373 17C6                                               l4365 179A  
                                             l4357 16C8                                               l4349 169C  
                                             l4197 1582                                               l4189 1556  
                                             l4277 1332                                               l4269 1306  
                                             l4525 1118                                               l4517 10DC  
                                             l5077 10C0                                               l4701 02A0  
                                             l4621 0070                                               l4471 0B5A  
                                             l4463 0B1A                                               l4455 0AC8  
                                             l4447 0A64                                               l4439 0A32  
                                             l5087 126E                                               l4295 185E  
                                             l4287 1832                                               l4383 17F8  
                                             l4375 17CC                                               l4367 17A0  
                                             l4391 1702                                               l4359 16D8  
                                             l4199 1592                                               l4279 1338  
                                             l5079 1136                                               l4527 114C  
                                             l4519 10F0                                               l4535 118C  
                                             l4551 0FEC                                               l4703 02B0  
                                             l4711 02E8                                               l4631 00AA  
                                             l4473 0B6A                                               l4465 0B2A  
                                             l4457 0AD4                                               l4449 0A7C  
                                             l4481 0B92                                               l5089 12A0  
                                             l3921 1ADA                                               l4297 1864  
                                             l4289 1838                                               l4385 1808  
                                             l4377 17DC                                               l4369 17B0  
                                             l4393 1708                                               l4561 105C  
                                             l4553 1000                                               l4801 05D0  
                                             l4721 0330                                               l4713 02FA  
                                             l4705 02BC                                               l4641 00D8  
                                             l4633 00AE                                               l4617 0050  
                                             l4475 0B7A                                               l4467 0B3A  
                                             l4459 0AFA                                               l3915 1B20  
                                             l4491 1AFA                                               l3931 0D4C  
                                             l3923 1AE8                                               l4299 1874  
                                             l4379 17E2                                               l4395 1718  
                                             l4387 16E0                                               l4555 1014  
                                             l4803 05E0                                               l4731 0378  
                                             l4723 033C                                               l4715 030C  
                                             l4707 02CC                                               l4651 012A  
                                             l4643 00DE                                               l4635 00C6  
                                             l4619 0054                                               l4477 0B8A  
                                             l4469 0B4A                                               l3925 1B34  
                                             l3917 1B16                                               l4493 1AFE  
                                             l4485 1AEE                                               l3941 0DF8  
                                             l3933 0D58                                               l4397 171E  
                                             l4389 16F8                                               l4565 1070  
                                             l4549 0FE8                                               l4805 05EC  
                                             l4741 03C2                                               l4733 0384  
                                             l4717 0314                                               l4725 034C  
                                             l4709 02D8                                               l4661 016C  
                                             l4653 013C                                               l4645 00F4  
                                             l4637 00C6                                               l4629 0092  
                                             l3919 1B2A                                               l4487 1AF2  
                                             l3943 0E00                                               l3935 0D86  
                                             l3951 0E52                                               l3927 0D3A  
                                             l4583 11C8                                               l4399 172E  
                                             l4495 18A8                                               l4559 1028  
                                             l4807 0604                                               l4751 0404  
                                             l4743 03D4                                               l4735 0394  
                                             l4727 035E                                               l4719 0320  
                                             l4671 01C4                                               l4655 0144  
                                             l4647 0106                                               l4663 017C  
                                             l4639 00D0                                               l3961 199A  
                                             l4489 1AF6                                               l3953 0E6A  
                                             l3945 0E06                                               l3937 0DC0  
                                             l3929 0D3A                                               l4497 1A10  
                                             l4593 1208                                               l4585 11CC  
                                             l4569 109C                                               l4809 0614  
                                             l4761 0440                                               l4745 03DC  
                                             l4753 0414                                               l4737 03A0  
                                             l4729 0370                                               l4673 01CC  
                                             l4665 018E                                               l4681 0204  
                                             l4657 0150                                               l4649 0118  
                                             l3963 19AE                                               l3971 1B3E  
                                             l3955 0E9C                                               l3947 0E14  
                                             l3939 0DC6                                               l4499 1A2A  
                                             l4595 123C                                               l4587 11E0  
                                             l4771 04A2                                               l4763 0454  
                                             l4755 041C                                               l4747 03E8  
                                             l4739 03B0                                               l4691 025C  
                                             l4683 0216                                               l4675 01D8  
                                             l4667 01A0                                               l4659 0160  
                                             l3981 0B9A                                               l3965 19BA  
                                             l3973 19D8                                               l3949 0E42  
                                             l4589 11F4                                               l4781 04FC  
                                             l4773 04AE                                               l4765 0468  
                                             l4757 0424                                               l4749 03F8  
                                             l4693 0268                                               l4685 0228  
                                             l4677 01E8                                               l4669 01B2  
                                             l3991 0BC6                                               l3983 0BAE  
                                             l3967 19C6                                               l3975 19FC  
                                             l4599 1250                                               l4791 057C  
                                             l4783 0518                                               l4767 0486  
                                             l4775 04B4                                               l4759 042C  
                                             l4695 0278                                               l4687 0240  
                                             l4679 01F4                                               l3993 0BC8  
                                             l3985 0BBC                                               l3969 19D2  
                                             l3977 1A0C                                               l4793 0588  
                                             l4785 0534                                               l4777 04D0  
                                             l4769 049A                                               l4697 0284  
                                             l4689 024C                                               l3995 0BCA  
                                             l3987 0BBE                                               l3979 0B96  
                                             l4795 05A0                                               l4787 0550  
                                             l4779 04E0                                               l4699 0294  
                                             l3997 0CF8                                               l3989 0BC0  
                                             l4797 05B0                                               l4789 056C  
                                             l3999 0CFA                                               l4799 05C0  
                                             u1200 0BAE                                               u1201 0BAA  
                                             u1210 0D38                                               u1211 0D34  
                                             u1300 0A8A                                               u1220 0648  
                                             u1301 0A86                                               u1221 0644  
                                             u1230 074A                                               u1310 119C  
                                             u1231 0746                                               u2007 1416  
                                             u1311 1196                                               u1240 084C  
                                             u1160 1AE8                                               u1320 119E  
                                             u1400 0118                                               u1241 0848  
                                             u1161 1AE4                                               u2017 142C  
                                             u1401 0114                                               u1170 0D4C  
                                             u1330 10AC                                               u1410 012A  
                                             u1171 0D48                                               u2107 1546  
                                             u2027 1442                                               u1331 10A6  
                                             u1411 0126                                               u1340 10AE  
                                             u1500 030C                                               u1420 013C  
                                             u2117 155C                                               u2037 1458  
                                             u1501 0308                                               u1421 0138  
                                             _LATA 000F89                                               u1270 0954  
                                             u1350 128C                                               u1510 035E  
                                             u1430 018E                                               _LATB 000F8A  
                                             u1255 0F22                                               u1271 0950  
                                             u1351 1286                                               u2207 1676  
                                             u2127 1572                                               u2047 146E  
                                             u1511 035A                                               u1431 018A  
                                             _LATC 000F8B                                               u1280 0962  
                                             u1360 128E                                               u1600 0518  
                                             u1520 0370                                               u1440 01A0  
                                             _LATD 000F8C                                               u1265 1956  
                                             u1281 095E                                               u1185 0DD8  
                                             u2217 168C                                               u2137 1588  
                                             u2057 14AE                                               u1601 0514  
                                             u1521 036C                                               u1441 019C  
                                             _LATE 000F8D                                               u1290 0A7C  
                                             u1610 0534                                               u1530 03C2  
                                             u1450 01B2                                               u1370 0070  
                                             u1291 0A78                                               u1195 0E7C  
                                             u2307 17A6                                               u2227 16A2  
                                             u2147 159E                                               u2067 14C4  
                                             u1611 0530                                               u1531 03BE  
                                             u1451 01AE                                               u1371 006C  
                                             u1620 0550                                               u1540 03D4  
                                             u1460 01C4                                               u1380 0088  
                                             u2317 17BC                                               u2237 16B8  
                                             u2157 15DE                                               u2077 14DA  
                                             u1621 054C                                               u1541 03D0  
                                             u1461 01C0                                               u1381 0084  
                                             u1630 056C                                               u1550 0486  
                                             u1470 0216                                               u1390 0106  
                                             u2327 17D2                                               u2247 16CE  
                                             u2167 15F4                                               u2087 14F0  
                                             u1631 0568                                               u1551 0482  
                                             u1471 0212                                               u1391 0102  
                                             u1640 05A0                                               u1560 049A  
                                             u1480 0228                                               u2337 17E8  
                                             u2257 170E                                               u2177 160A  
                                             u2097 1506                                               u1641 059C  
                                             u1561 0496                                               u1481 0224  
                                             u1650 05B0                                               u1570 04D0  
                                             u1490 02FA                                               u2347 17FE  
                                             u2267 1724                                               u2187 1620  
                                             u1651 05AC                                               u1571 04CC  
                                             u1491 02F6                                               u1707 0156  
                                             u1660 0604                                               u1580 04E0  
                                             u2357 183E                                               u2277 173A  
                                             u2197 1636                                               u1661 0600  
                                             u1581 04DC                                               u1717 0172  
                                             u1590 04FC                                               u2367 1854  
                                             u2287 1750                                               u1591 04F8  
                                             u1807 0326                                               u1727 01DE  
                                             u2377 186A                                               u2297 1766  
                                             u1817 0342                                               u1737 01FA  
                                      main@counter 00C2                                               u2387 1880  
                                             u1907 12E6                                               u1827 038A  
                                             u1747 0252                                               u2397 1896  
                                             u1917 12FC                                               u1837 03A6  
                                             u1757 026E                                               u1677 009C  
                                             u1927 1312                                               u1847 03EE  
                                             u1767 028A                                               u1687 00B8  
                                             u1937 1328                                               u1857 040A  
                                             u1777 02A6                                               u1697 00E8  
                                             u1947 133E                                               u1867 0572  
                                             u1787 02C2                                               u1957 137E  
                                             u1877 05B6                                               u1797 02DE  
                                             u1967 1394                                               u1887 05D6  
                                             u1977 13AA                                               u1897 060A  
                                             u1987 13C0                                               u1997 13D6  
                              _motorControllerTemp 1480                                               _WPUB 000F5B  
                                    _EUSART1_Write 1AD8                            rightTurnButton@b10Latch 003C  
                                             _main 0050                                               _init 18A8  
                     convertCANid2Reg@passedInEIDH 003F                       convertCANid2Reg@passedInEIDL 0041  
                                             fsr2h 000FDA                                               indf2 000FDF  
                                             fsr2l 000FD9                                               btemp 005A  
                     convertCANid2Reg@passedInSIDH 0043                       convertCANid2Reg@passedInSIDL 0045  
                                             start 004C                                       warningLED@v2 0040  
                                     warningLED@v3 0042                                       warningLED@v4 0044  
                                     ___param_bank 000000                                     ??_hazardButton 003E  
                                 ?_canHazardSignal 0052                               ?_motorControllerTemp 003B  
                                   ??_hazardSignal 003D                         __end_of_rightTurnIndicator 13E8  
                    __end_of_OSCILLATOR_Initialize 1B16                                              ?_main 0038  
                                            ?_init 0038                                              _BSEL0 000E7D  
                                            i2l110 0040                                              i2l560 1AD6  
                                            i2l493 1B42                                              _MSEL0 000E79  
                                            _MSEL1 000E7A                                              _MSEL2 000E7B  
                                            _MSEL3 000E7C                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                                     _b1FuncActive 0036                              CAN_receive@tempCanMsg 004D  
                             __end_of_CAN_transmit 0942                             leftTurnIndicator@value 003B  
                                   ?_EUSART1_Write 0038                                       _b2FuncActive 0032  
                                            pclath 000FFA                                              pclatu 000FFB  
                                            ttemp5 005B                                              ttemp6 005E  
                                            ttemp7 0062                convertReg2ExtendedCANid@ConvertedID 0049  
                                            status 000FD8                                              wtemp8 005B  
                             CAN_transmit@tempEIDH 004E                               CAN_transmit@tempEIDL 004F  
                             CAN_transmit@tempSIDH 0050                               CAN_transmit@tempSIDL 0051  
               _EUSART1_DefaultFramingErrorHandler 000000                                       _b3FuncActive 0011  
                         motorControllerTemp@value 003B                                    __initialization 1A94  
                       __end_of_EUSART1_Initialize 19D8                                       __end_of_main 0628  
                                     __end_of_init 1922                              ??_motorControllerTemp 003D  
                                     _b4FuncActive 000F                        ?_INTERRUPT_InterruptManager 0038  
                                           ??_main 0054                                             ??_init 0046  
                                _leftTurnIndicator 1518                                      __activetblptr 000002  
                               ?_leftTurnIndicator 003B                                       _b5FuncActive 000D  
                  ??_WakeUpDefaultInterruptHandler 0038                                  ??_ECAN_Initialize 003C  
                                 batteryTemp@value 003B                                             _CANCON 000F6F  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                           _CIOCON 000F70                                ??_leftTurnIndicator 003D  
                                     _b6FuncActive 000B                                             i2l2027 1ABA  
                                           i2l2029 1AD4                                             i2l2271 003C  
                                           i2l2265 0012                                             i2l2267 0020  
                                           i2l2269 002E                                             _RCREG1 000FAE  
                                           _RCSTA1 000FAB                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB1D0 000F36                                             _RXB0D4 000F6A  
                                           _RXB1D1 000F37                                             _RXB0D5 000F6B  
                                           _RXB1D2 000F38                                             _RXB0D6 000F6C  
                                           _RXB1D3 000F39                                             _RXB0D7 000F6D  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                           _SPBRG1 000FAF                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB1D0 000F16  
                                           _TXB0D4 000F2A                                             _TXB1D1 000F17  
                                           _TXB0D5 000F2B                                             _TXB1D2 000F18  
                                           _TXB0D6 000F2C                                             _TXB1D3 000F19  
                                           _TXB0D7 000F2D                                             _TXB2D0 000F06  
                                           _TXB1D4 000F1A                                             _TXB2D1 000F07  
                                           _TXB1D5 000F1B                                             _TXB2D2 000F08  
                                           _TXB1D6 000F1C                                             _TXB2D3 000F09  
                                           _TXB1D7 000F1D                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             _TXREG1 000FAD  
                                           _TXSTA1 000FAC                               canRightSignal@number 0052  
                                     _b7FuncActive 0009                           ?_EUSART1_SetErrorHandler 003A  
                                           _lastb1 0019                                             _lastb2 0015  
                        __end_of_leftTurnIndicator 15B0                                       _b8FuncActive 0007  
                                           clear_0 1A9A                                             clear_1 1AA6  
                                           isa$std 000001                   ??_EUSART1_SetOverrunErrorHandler 003C  
                  ?_EUSART1_SetOverrunErrorHandler 003A                                      _canLeftSignal 1A3C  
                                     _b9FuncActive 0005                   __end_of_convertReg2StandardCANid 199A  
                                           tblptru 000FF8                                    ??_EUSART1_Write 003A  
                       rightTurnIndicator@checksum 003E                               __end_of_hazardButton 12B8  
                                _SYSTEM_Initialize 1AEE                               __end_of_hazardSignal 1648  
                                       __accesstop 0060                            __end_of__initialization 1AAC  
                               ?_SYSTEM_Initialize 0038                           _convertReg2ExtendedCANid 0EAE  
                           CAN_receive@returnValue 004F                                      ___rparam_used 000001  
                               warningLED@checksum 003E                                     __pcstackCOMRAM 0038  
                                   _leftTurnButton 10D8                                ??_SYSTEM_Initialize 003D  
                              batteryTemp@checksum 003E                                     ?_canLeftSignal 0052  
                                    _ECAN_WAKI_ISR 1ABA              convertReg2StandardCANid@tempRXBn_SIDH 0040  
            convertReg2StandardCANid@tempRXBn_SIDL 003A                              leftTurnButton@b1Latch 003C  
                        __end_of_SYSTEM_Initialize 1B04                                         __pbssBANK0 0060  
            __end_of_WakeUpDefaultInterruptHandler 1B44                      _WakeUpDefaultInterruptHandler 1B42  
                                       __pnvCOMRAM 0056                                         _batterySOC 1778  
                                hazardSignal@value 003B                             __end_of_leftTurnButton 11C8  
                  __end_of_EUSART1_SetErrorHandler 1B34                                       _CAN_transmit 0628  
                 rightTurnButton@b10FunctionActive 003A                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                   ??_ECAN_SetWakeUpInterruptHandler 003C  
                  ?_ECAN_SetWakeUpInterruptHandler 003A                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
           __end_of_EUSART1_SetFramingErrorHandler 1B2A                     _EUSART1_SetFramingErrorHandler 1B20  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                   ?_ECAN_WAKI_ISR 0038                                            i2u12_48 1AC0  
                                          i2u12_49 1AD4                                            _RXB0DLC 000F65  
                                          i2u27_40 0020                                            i2u27_41 001C  
                                          _RXB1DLC 000F35                                            i2u28_40 002E  
                                          i2u28_41 002A                                            i2u29_40 003C  
                                          i2u29_41 0038                                            _OSCTUNE 000F9B  
                                          _SPBRGH1 000F7D                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                                          _RXFCON0 000E46                                            _RXFCON1 000E47  
                               _rightTurnIndicator 1350                                    motorSpeed@value 003B  
                        leftTurnIndicator@checksum 003E                                ?_rightTurnIndicator 003B  
                                          __Hparam 0000                                    ?_leftTurnButton 003A  
                                          __Lparam 0000                          ?_convertReg2StandardCANid 003A  
                                  _ECAN_Initialize 0B96                                    ??_canLeftSignal 0054  
                                   hazardSignal@v2 0040                                            __pcinit 1A94  
                                   hazardSignal@v3 0042                                     hazardSignal@v4 0044  
                                          __ramtop 0F00                                            _blinkb1 0017  
                                          _blinkb2 0013                                            __ptext0 0050  
                                          __ptext1 0FE8                                            __ptext2 10D8  
                                          __ptext3 18A8                                            __ptext4 12B8  
                                          __ptext5 1350                                            __ptext6 13E8  
                                          __ptext7 1480                                            __ptext8 1518  
                                          __ptext9 15B0                                            _lastb10 0003  
                                          _latchb1 0034                                            _latchb2 0030  
                             ??_rightTurnIndicator 003D                              _OSCILLATOR_Initialize 1B04  
                                ??_rightTurnButton 003E                                 _EUSART1_Initialize 199A  
                                 _convertCANid2Reg 0D3A                           ??_PIN_MANAGER_Initialize 003A  
                              hazardButton@b2Latch 003C                               end_of_initialization 1AAC  
                           _WakeUpInterruptHandler 001B                                ?_EUSART1_Initialize 0038  
                                    __Lmediumconst 0000                        _EUSART1_OverrunErrorHandler 0056  
                                    ??_batteryTemp 003D                                      ??_CAN_receive 004F  
                                      ?_batterySOC 003B                   fp__WakeUpDefaultInterruptHandler 0000  
                   ?_WakeUpDefaultInterruptHandler 0038                        __end_of_motorControllerTemp 1518  
                                        _RXF10EIDH 000E5A                                          _RXF10EIDL 000E5B  
                                        _RXF11EIDH 000E5E                                          _RXF11EIDL 000E5F  
                                        _RXF12EIDH 000E62                                          _RXF12EIDL 000E63  
                                        _RXF13EIDH 000E66                                          _RXF13EIDL 000E67  
                                        _RXF14EIDH 000E6A                                          _RXF14EIDL 000E6B  
                                        _RXF15EIDH 000E6E                                          _RXF15EIDL 000E6F  
                                        _RXF10SIDH 000E58                                          _RXF10SIDL 000E59  
                                        _RXF11SIDH 000E5C                                          _RXF11SIDL 000E5D  
                                        _RXF12SIDH 000E60                                          _RXF12SIDL 000E61  
                                          postdec2 000FDD                                          _RXF13SIDH 000E64  
                                        _RXF13SIDL 000E65                                          _RXF14SIDH 000E68  
                                        _RXF14SIDL 000E69                                          _RXF15SIDH 000E6C  
                                        _RXF15SIDL 000E6D                                            postinc0 000FEE  
                                          postinc2 000FDE                                         _motorSpeed 13E8  
                             ??_EUSART1_Initialize 003C                                       _hazardButton 11C8  
                                     _hazardSignal 15B0                                          _PORTAbits 000F80  
                                        _PORTCbits 000F82                                      _b10FuncActive 002E  
                                  ??_ECAN_WAKI_ISR 0038                                         _warningLED 12B8  
                           CAN_transmit@tempCanMsg 004C                         ??_convertReg2ExtendedCANid 003E  
                              EUSART1_Write@txData 003A                                      ??_auxBattConn 003D  
                              leftTurnIndicator@v2 0040                                leftTurnIndicator@v3 0042  
                              leftTurnIndicator@v4 0044                              motorControllerTemp@v2 0040  
                            motorControllerTemp@v3 0042                              motorControllerTemp@v4 0044  
                                    batteryTemp@v2 0040                                      batteryTemp@v3 0042  
                                    batteryTemp@v4 0044                            __end_of_ECAN_Initialize 0D3A  
                                  warningLED@value 003B                                __end_of_batteryTemp 16E0  
                     __end_of_INTERRUPT_Initialize 1B42                                __end_of_CAN_receive 0B96  
                      motorControllerTemp@checksum 003E                             ?_OSCILLATOR_Initialize 0038  
                              start_initialization 1A94                            rightTurnIndicator@value 003B  
                             rightTurnIndicator@v2 0040                               rightTurnIndicator@v3 0042  
                             rightTurnIndicator@v4 0044                              __end_of_EUSART1_Write 1AEE  
                                ??_canHazardSignal 0054                                     _canRightSignal 1A10  
              convertReg2StandardCANid@returnValue 0041                               hazardSignal@checksum 003E  
                              __end_of_auxBattConn 18A8                                        ?_motorSpeed 003B  
                                      ?_warningLED 003B                                batterySOCGraphic@v2 0040  
                              batterySOCGraphic@v3 0042                                batterySOCGraphic@v4 0044  
                                      __pbssCOMRAM 0001                                      __pcstackBANK0 00C2  
                           __end_of_canRightSignal 1A3C             __end_of_ECAN_SetWakeUpInterruptHandler 1B3E  
                   _ECAN_SetWakeUpInterruptHandler 1B34                                   ??_leftTurnButton 003E  
                 ??_EUSART1_SetFramingErrorHandler 003C                    ?_EUSART1_SetFramingErrorHandler 003A  
                                      _batteryTemp 1648                                          __pnvBANK0 00C6  
                                      _CAN_receive 0942                                   ?_ECAN_Initialize 0038  
                           _PIN_MANAGER_Initialize 19D8                           __end_of_convertCANid2Reg 0EAE  
                                        __pintcode 0008                                auxBattConn@checksum 003E  
                                  _rightTurnButton 0FE8                       ??_INTERRUPT_InterruptManager 0038  
                                         _BAUDCON1 000FA7                                        _COMSTATbits 000F71  
               _EUSART1_DefaultOverrunErrorHandler 000000                               _EUSART1_ErrorHandler 00C6  
                 __end_of_convertReg2ExtendedCANid 0FE8                            _EUSART1_SetErrorHandler 1B2A  
                   convertCANid2Reg@tempPassedInID 003A                                    ?_canRightSignal 0052  
                             _INTERRUPT_Initialize 1B3E                                        _auxBattConn 1810  
          EUSART1_SetErrorHandler@interruptHandler 003A                                           _LATCbits 000F8B  
                                     ??_batterySOC 003D                                           _PIE5bits 000F76  
                                         _PIR1bits 000F9E                                           _PIR5bits 000F77  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RCONbits 000FD0                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDH 000F31                                           _RXF0EIDL 000EE3  
                                         _RXB1SIDL 000F32                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF6EIDH 000E4A  
                                         _RXF6EIDL 000E4B                                           _RXF0SIDH 000EE0  
                                         _RXF7EIDH 000E4E                                           _RXF0SIDL 000EE1  
                                         _RXF7EIDL 000E4F                                           _RXF1SIDH 000EE4  
                                         _RXF8EIDH 000E52                                           _TXB0EIDH 000F23  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _RXF8EIDL 000E53                                           _RXF2SIDH 000EE8  
                                         _RXF9EIDH 000E56                                           _TXB1EIDH 000F13  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _RXF9EIDL 000E57                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDH 000F03                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _RXF6SIDH 000E48  
                                         _RXF6SIDL 000E49                                           _RXM0EIDH 000EFA  
                                         _RXF7SIDH 000E4C                                           _RXM0EIDL 000EFB  
                                         _RXF7SIDL 000E4D                                           _RXM1EIDH 000EFE  
                                         _RXF8SIDH 000E50                                           _TXB0SIDH 000F21  
                                         _RXM1EIDL 000EFF                                           _RXF8SIDL 000E51  
                                         _TXB0SIDL 000F22                                           _RXF9SIDH 000E54  
                                         _TXB1SIDH 000F11                                           _RXF9SIDL 000E55  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                           _RXFBCON0 000E71  
                                         _RXFBCON1 000E72                                           _RXFBCON2 000E73  
                                         _RXFBCON3 000E74                                           _RXFBCON4 000E75  
                                         _RXFBCON5 000E76                                           _RXFBCON6 000E77  
                                         _RXFBCON7 000E78                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                       batterySOC@v2 0040  
                                     batterySOC@v3 0042                                       batterySOC@v4 0044  
                            __end_of_canLeftSignal 1A68                                 batterySOC@checksum 003E  
                                        main@speed 00C4                                canLeftSignal@number 0052  
                               __end_of_batterySOC 1810                                        _INTCON2bits 000FF1  
                            ?_INTERRUPT_Initialize 0038                     leftTurnButton@b1FunctionActive 003A  
                         _convertReg2StandardCANid 1922                            __end_of_rightTurnButton 10D8  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0042              convertReg2ExtendedCANid@tempRXBn_EIDL 003A  
                                _batterySOCGraphic 16E0              convertReg2ExtendedCANid@tempRXBn_SIDH 003B  
            convertReg2ExtendedCANid@tempRXBn_SIDL 003C                                           __Hrparam 0000  
                                         __Lrparam 0000                                 ?_batterySOCGraphic 003B  
                        convertCANid2Reg@canIdType 003E                            ??_OSCILLATOR_Initialize 003A  
                              ??_batterySOCGraphic 003D  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 0048  
                        ??_EUSART1_SetErrorHandler 003C                        _EUSART1_DefaultErrorHandler 000000  
                                  _canHazardSignal 1A68  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 0047  
                          convertCANid2Reg@wipSIDL 004B                              canHazardSignal@number 0052  
                            __end_of_ECAN_WAKI_ISR 1AD8                                           _blinkb10 0001  
                                         __ptext10 1648                                           __ptext11 16E0  
                                         __ptext20 0D3A                                           __ptext12 1778  
                                         __ptext21 1AEE                                           __ptext13 1810  
                                         __ptext30 1B34                                           __ptext22 19D8  
                                         __ptext14 1AD8                                           __ptext31 0942  
                                         __ptext23 1B04                                           __ptext15 11C8  
                                         __ptext32 1922                                           __ptext24 1B3E  
                                         __ptext16 1A10                                           __ptext33 0EAE  
                                         __ptext25 199A                                           __ptext17 1A3C  
                                         __ptext26 1B16                                           __ptext18 1A68  
                                         __ptext35 1ABA                                           __ptext27 1B20  
                                         __ptext19 0628                                           __ptext36 1B42  
                                         __ptext28 1B2A                                           __ptext37 0000  
                                         __ptext29 0B96                                   auxBattConn@value 003B  
                                         _latchb10 002C                convertReg2StandardCANid@ConvertedID 0045  
                        __end_of_batterySOCGraphic 1778                          batterySOCGraphic@checksum 003E  
              convertReg2ExtendedCANid@returnValue 0043     EUSART1_SetOverrunErrorHandler@interruptHandler 003A  
                                         isa$xinst 000000                          ?_convertReg2ExtendedCANid 003A  
                                    ?_CAN_transmit 004C                                       ??_motorSpeed 003D  
                                         int$flags 005A                 __end_of_INTERRUPT_InterruptManager 004C  
                       _INTERRUPT_InterruptManager 0008                        _EUSART1_FramingErrorHandler 0058  
                                     ??_warningLED 003D                                        _RXB0CONbits 000F60  
                                      _RXB1CONbits 000F30                                         _INTCONbits 000FF2  
                           ??_INTERRUPT_Initialize 003A                                           intlevel2 0000  
                               __end_of_motorSpeed 1480                            ?_PIN_MANAGER_Initialize 0038  
                                     motorSpeed@v2 0040                                       motorSpeed@v3 0042  
                                     motorSpeed@v4 0044                                       ?_batteryTemp 003B  
           __end_of_EUSART1_SetOverrunErrorHandler 1B20                     _EUSART1_SetOverrunErrorHandler 1B16  
                                      _TXB0CONbits 000F20                                         _RCSTA1bits 000FAB  
                                     ?_CAN_receive 004D                                   ?_rightTurnButton 003A  
                                      _TXB1CONbits 000F10                                        _TXB2CONbits 000F00  
                               __end_of_warningLED 1350                                     ??_CAN_transmit 004E  
                                ?_convertCANid2Reg 003A     EUSART1_SetFramingErrorHandler@interruptHandler 003A  
                               ??_convertCANid2Reg 0047                            __end_of_canHazardSignal 1A94  
                               _eusart1RxLastError 001D                                   ??_canRightSignal 0054  
                                  batterySOC@value 003B                                      auxBattConn@v2 0040  
                                    auxBattConn@v3 0042                                      auxBattConn@v4 0044  
                                     ?_auxBattConn 003B                     __end_of_PIN_MANAGER_Initialize 1A10  
                     hazardButton@b2FunctionActive 003A  
